<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="envelope_8cc" kind="file" language="C++">
    <compoundname>envelope.cc</compoundname>
    <includes refid="envelope_8h" local="yes">envelope.h</includes>
    <includes refid="dac_8h" local="yes">dac.h</includes>
    <incdepgraph>
      <node id="5">
        <label>dac.h</label>
        <link refid="dac_8h_source"/>
      </node>
      <node id="1">
        <label>/Users/hoff/Retro/virtualc64/Emulator/Components/SID/resid/envelope.cc</label>
        <link refid="envelope_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>envelope.h</label>
        <link refid="envelope_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>resid-config.h</label>
        <link refid="resid-config_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>siddefs.h</label>
        <link refid="siddefs_8h_source"/>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacere_s_i_d">reSID</innernamespace>
    <sectiondef kind="define">
      <memberdef kind="define" id="envelope_8cc_1a33c9cb184600350cefb84d13268664d4" prot="public" static="no">
        <name>RESID_ENVELOPE_CC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Components/SID/resid/envelope.cc" line="20" column="9" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Components/SID/resid/envelope.cc" bodystart="20" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>reSID,<sp/>a<sp/>MOS6581<sp/>SID<sp/>emulator<sp/>engine.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(C)<sp/>2010<sp/><sp/>Dag<sp/>Lem<sp/>&lt;resid@nimrod.no&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place,<sp/>Suite<sp/>330,<sp/>Boston,<sp/>MA<sp/><sp/>02111-1307<sp/><sp/>USA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RESID_ENVELOPE_CC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;envelope.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dac.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">reSID</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Rate<sp/>counter<sp/>periods<sp/>are<sp/>calculated<sp/>from<sp/>the<sp/>Envelope<sp/>Rates<sp/>table<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>Programmer&apos;s<sp/>Reference<sp/>Guide.<sp/>The<sp/>rate<sp/>counter<sp/>period<sp/>is<sp/>the<sp/>number<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>cycles<sp/>between<sp/>each<sp/>increment<sp/>of<sp/>the<sp/>envelope<sp/>counter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>rates<sp/>have<sp/>been<sp/>verified<sp/>by<sp/>sampling<sp/>ENV3.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>rate<sp/>counter<sp/>is<sp/>a<sp/>16<sp/>bit<sp/>register<sp/>which<sp/>is<sp/>incremented<sp/>each<sp/>cycle.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>the<sp/>counter<sp/>reaches<sp/>a<sp/>specific<sp/>comparison<sp/>value,<sp/>the<sp/>envelope<sp/>counter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>is<sp/>incremented<sp/>(attack)<sp/>or<sp/>decremented<sp/>(decay/release)<sp/>and<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>counter<sp/>is<sp/>zeroed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NB!<sp/>Sampling<sp/>ENV3<sp/>shows<sp/>that<sp/>the<sp/>calculated<sp/>values<sp/>are<sp/>not<sp/>exact.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>It<sp/>may<sp/>seem<sp/>like<sp/>most<sp/>calculated<sp/>values<sp/>have<sp/>been<sp/>rounded<sp/>(.5<sp/>is<sp/>rounded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>down)<sp/>and<sp/>1<sp/>has<sp/>beed<sp/>added<sp/>to<sp/>the<sp/>result.<sp/>A<sp/>possible<sp/>explanation<sp/>for<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>is<sp/>that<sp/>the<sp/>SID<sp/>designers<sp/>have<sp/>used<sp/>the<sp/>calculated<sp/>values<sp/>directly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>as<sp/>rate<sp/>counter<sp/>comparison<sp/>values,<sp/>not<sp/>considering<sp/>a<sp/>one<sp/>cycle<sp/>delay<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>zero<sp/>the<sp/>counter.<sp/>This<sp/>would<sp/>yield<sp/>an<sp/>actual<sp/>period<sp/>of<sp/>comparison<sp/>value<sp/>+<sp/>1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>time<sp/>of<sp/>the<sp/>first<sp/>envelope<sp/>count<sp/>can<sp/>not<sp/>be<sp/>exactly<sp/>controlled,<sp/>except</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>possibly<sp/>by<sp/>resetting<sp/>the<sp/>chip.<sp/>Because<sp/>of<sp/>this<sp/>we<sp/>cannot<sp/>do<sp/>cycle<sp/>exact</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>sampling<sp/>and<sp/>must<sp/>devise<sp/>another<sp/>method<sp/>to<sp/>calculate<sp/>the<sp/>rate<sp/>counter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>periods.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>exact<sp/>rate<sp/>counter<sp/>periods<sp/>can<sp/>be<sp/>determined<sp/>e.g.<sp/>by<sp/>counting<sp/>the<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>cycles<sp/>from<sp/>envelope<sp/>level<sp/>1<sp/>to<sp/>envelope<sp/>level<sp/>129,<sp/>and<sp/>dividing<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>cycles<sp/>by<sp/>128.<sp/>CIA1<sp/>timer<sp/>A<sp/>and<sp/>B<sp/>in<sp/>linked<sp/>mode<sp/>can<sp/>perform</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>cycle<sp/>count.<sp/>This<sp/>is<sp/>the<sp/>method<sp/>used<sp/>to<sp/>find<sp/>the<sp/>rates<sp/>below.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>avoid<sp/>the<sp/>ADSR<sp/>delay<sp/>bug,<sp/>sampling<sp/>of<sp/>ENV3<sp/>should<sp/>be<sp/>done<sp/>using</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/>sustain<sp/>=<sp/>release<sp/>=<sp/>0.<sp/>This<sp/>ensures<sp/>that<sp/>the<sp/>attack<sp/>state<sp/>will<sp/>not<sp/>lower</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>current<sp/>rate<sp/>counter<sp/>period.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>ENV3<sp/>sampling<sp/>code<sp/>below<sp/>yields<sp/>a<sp/>maximum<sp/>timing<sp/>error<sp/>of<sp/>14<sp/>cycles.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>lda<sp/>#$01</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/>l1:<sp/>cmp<sp/>$d41c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>bne<sp/>l1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>lda<sp/>#$ff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/>l2:<sp/>cmp<sp/>$d41c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>bne<sp/>l2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>yields<sp/>a<sp/>maximum<sp/>error<sp/>for<sp/>the<sp/>calculated<sp/>rate<sp/>period<sp/>of<sp/>14/128<sp/>cycles.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>described<sp/>method<sp/>is<sp/>thus<sp/>sufficient<sp/>for<sp/>exact<sp/>calculation<sp/>of<sp/>the<sp/>rate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/>periods.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal">reg16<sp/>EnvelopeGenerator::rate_counter_period[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>8,<sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>2ms*1.0MHz/256<sp/>=<sp/><sp/><sp/><sp/><sp/>7.81</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>31,<sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>8ms*1.0MHz/256<sp/>=<sp/><sp/><sp/><sp/>31.25</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>62,<sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>16ms*1.0MHz/256<sp/>=<sp/><sp/><sp/><sp/>62.50</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>94,<sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>24ms*1.0MHz/256<sp/>=<sp/><sp/><sp/><sp/>93.75</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>148,<sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>38ms*1.0MHz/256<sp/>=<sp/><sp/><sp/>148.44</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>219,<sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>56ms*1.0MHz/256<sp/>=<sp/><sp/><sp/>218.75</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>266,<sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>68ms*1.0MHz/256<sp/>=<sp/><sp/><sp/>265.63</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>312,<sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>80ms*1.0MHz/256<sp/>=<sp/><sp/><sp/>312.50</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>391,<sp/><sp/></highlight><highlight class="comment">//<sp/>100ms*1.0MHz/256<sp/>=<sp/><sp/><sp/>390.63</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>976,<sp/><sp/></highlight><highlight class="comment">//<sp/>250ms*1.0MHz/256<sp/>=<sp/><sp/><sp/>976.56</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/>1953,<sp/><sp/></highlight><highlight class="comment">//<sp/>500ms*1.0MHz/256<sp/>=<sp/><sp/>1953.13</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/>3125,<sp/><sp/></highlight><highlight class="comment">//<sp/>800ms*1.0MHz/256<sp/>=<sp/><sp/>3125.00</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/>3906,<sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>1<sp/>s*1.0MHz/256<sp/>=<sp/><sp/>3906.25</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>11719,<sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>3<sp/>s*1.0MHz/256<sp/>=<sp/>11718.75</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>19531,<sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>5<sp/>s*1.0MHz/256<sp/>=<sp/>19531.25</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>31250<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>8<sp/>s*1.0MHz/256<sp/>=<sp/>31250.00</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal">};</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>decay<sp/>and<sp/>release,<sp/>the<sp/>clock<sp/>to<sp/>the<sp/>envelope<sp/>counter<sp/>is<sp/>sequentially</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">//<sp/>divided<sp/>by<sp/>1,<sp/>2,<sp/>4,<sp/>8,<sp/>16,<sp/>30,<sp/>1<sp/>to<sp/>create<sp/>a<sp/>piece-wise<sp/>linear<sp/>approximation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>an<sp/>exponential.<sp/>The<sp/>exponential<sp/>counter<sp/>period<sp/>is<sp/>loaded<sp/>at<sp/>the<sp/>envelope</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//<sp/>counter<sp/>values<sp/>255,<sp/>93,<sp/>54,<sp/>26,<sp/>14,<sp/>6,<sp/>0.<sp/>The<sp/>period<sp/>can<sp/>be<sp/>different<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">//<sp/>same<sp/>envelope<sp/>counter<sp/>value,<sp/>depending<sp/>on<sp/>whether<sp/>the<sp/>envelope<sp/>has<sp/>been</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//<sp/>rising<sp/>(attack<sp/>-&gt;<sp/>release)<sp/>or<sp/>sinking<sp/>(decay/release).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Since<sp/>it<sp/>is<sp/>not<sp/>possible<sp/>to<sp/>reset<sp/>the<sp/>rate<sp/>counter<sp/>(the<sp/>test<sp/>bit<sp/>has<sp/>no</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">//<sp/>influence<sp/>on<sp/>the<sp/>envelope<sp/>generator<sp/>whatsoever)<sp/>a<sp/>method<sp/>must<sp/>be<sp/>devised<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//<sp/>do<sp/>cycle<sp/>exact<sp/>sampling<sp/>of<sp/>ENV3<sp/>to<sp/>do<sp/>the<sp/>investigation.<sp/>This<sp/>is<sp/>possible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>knowledge<sp/>of<sp/>the<sp/>rate<sp/>period<sp/>for<sp/>A=0,<sp/>found<sp/>above.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>CPU<sp/>can<sp/>be<sp/>synchronized<sp/>with<sp/>ENV3<sp/>by<sp/>first<sp/>synchronizing<sp/>with<sp/>the<sp/>rate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">//<sp/>counter<sp/>by<sp/>setting<sp/>A=0<sp/>and<sp/>wait<sp/>in<sp/>a<sp/>carefully<sp/>timed<sp/>loop<sp/>for<sp/>the<sp/>envelope</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">//<sp/>counter<sp/>_not_<sp/>to<sp/>change<sp/>for<sp/>9<sp/>cycles.<sp/>We<sp/>can<sp/>then<sp/>wait<sp/>for<sp/>a<sp/>specific<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>ENV3<sp/>with<sp/>another<sp/>timed<sp/>loop<sp/>to<sp/>fully<sp/>synchronize<sp/>with<sp/>ENV3.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">//<sp/>At<sp/>the<sp/>first<sp/>period<sp/>when<sp/>an<sp/>exponential<sp/>counter<sp/>period<sp/>larger<sp/>than<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">//<sp/>is<sp/>used<sp/>(decay<sp/>or<sp/>relase),<sp/>one<sp/>extra<sp/>cycle<sp/>is<sp/>spent<sp/>before<sp/>the<sp/>envelope<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">//<sp/>decremented.<sp/>The<sp/>envelope<sp/>output<sp/>is<sp/>then<sp/>delayed<sp/>one<sp/>cycle<sp/>until<sp/>the<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">//<sp/>is<sp/>changed<sp/>to<sp/>attack.<sp/>Now<sp/>one<sp/>cycle<sp/>less<sp/>will<sp/>be<sp/>spent<sp/>before<sp/>the<sp/>envelope</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">//<sp/>is<sp/>incremented,<sp/>and<sp/>the<sp/>situation<sp/>is<sp/>normalized.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>delay<sp/>is<sp/>probably<sp/>caused<sp/>by<sp/>the<sp/>comparison<sp/>with<sp/>the<sp/>exponential<sp/>counter,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>does<sp/>not<sp/>seem<sp/>to<sp/>affect<sp/>the<sp/>rate<sp/>counter.<sp/>This<sp/>has<sp/>been<sp/>verified<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//<sp/>timing<sp/>256<sp/>consecutive<sp/>complete<sp/>envelopes<sp/>with<sp/>A<sp/>=<sp/>D<sp/>=<sp/>R<sp/>=<sp/>1,<sp/>S<sp/>=<sp/>0,<sp/>using</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CIA1<sp/>timer<sp/>A<sp/>and<sp/>B<sp/>in<sp/>linked<sp/>mode.<sp/>If<sp/>the<sp/>rate<sp/>counter<sp/>is<sp/>not<sp/>affected<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">//<sp/>period<sp/>of<sp/>each<sp/>complete<sp/>envelope<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(255<sp/>+<sp/>162*1<sp/>+<sp/>39*2<sp/>+<sp/>28*4<sp/>+<sp/>12*8<sp/>+<sp/>8*16<sp/>+<sp/>6*30)*32<sp/>=<sp/>756*32<sp/>=<sp/>32352</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">//<sp/>which<sp/>corresponds<sp/>exactly<sp/>to<sp/>the<sp/>timed<sp/>value<sp/>divided<sp/>by<sp/>the<sp/>number<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">//<sp/>complete<sp/>envelopes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NB!<sp/>This<sp/>one<sp/>cycle<sp/>delay<sp/>is<sp/>only<sp/>modeled<sp/>for<sp/>single<sp/>cycle<sp/>clocking.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">//<sp/>From<sp/>the<sp/>sustain<sp/>levels<sp/>it<sp/>follows<sp/>that<sp/>both<sp/>the<sp/>low<sp/>and<sp/>high<sp/>4<sp/>bits<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">//<sp/>envelope<sp/>counter<sp/>are<sp/>compared<sp/>to<sp/>the<sp/>4-bit<sp/>sustain<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>has<sp/>been<sp/>verified<sp/>by<sp/>sampling<sp/>ENV3.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal">reg8<sp/>EnvelopeGenerator::sustain_level[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>0x00,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>0x11,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>0x22,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>0x33,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>0x44,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>0x55,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>0x66,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>0x77,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>0x88,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>0x99,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>0xaa,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>0xbb,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>0xcc,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>0xdd,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>0xee,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>0xff,</highlight></codeline>
<codeline lineno="146"><highlight class="normal">};</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DAC<sp/>lookup<sp/>tables.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>EnvelopeGenerator::model_dac[2][1<sp/>&lt;&lt;<sp/>8]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>{0},</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>{0},</highlight></codeline>
<codeline lineno="153"><highlight class="normal">};</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Constructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal">EnvelopeGenerator::EnvelopeGenerator()</highlight></codeline>
<codeline lineno="160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>class_init;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!class_init)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>DAC<sp/>lookup<sp/>tables<sp/>for<sp/>8-bit<sp/>DACs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MOS<sp/>6581:<sp/>2R/R<sp/>~<sp/>2.20,<sp/>missing<sp/>termination<sp/>resistor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>build_dac_table(model_dac[0],<sp/>8,<sp/>2.20,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MOS<sp/>8580:<sp/>2R/R<sp/>~<sp/>2.00,<sp/>correct<sp/>termination.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>build_dac_table(model_dac[1],<sp/>8,<sp/>2.00,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>class_init<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>set_chip_model(MOS6581);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Counter&apos;s<sp/>odd<sp/>bits<sp/>are<sp/>high<sp/>on<sp/>powerup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>envelope_counter<sp/>=<sp/>0xaa;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>just<sp/>to<sp/>avoid<sp/>uninitialized<sp/>access<sp/>with<sp/>delta<sp/>clocking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>next_state<sp/>=<sp/>RELEASE;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>reset();</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SID<sp/>reset.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EnvelopeGenerator::reset()</highlight></codeline>
<codeline lineno="188"><highlight class="normal">{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>counter<sp/>is<sp/>not<sp/>changed<sp/>on<sp/>reset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>envelope_pipeline<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>exponential_pipeline<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>state_pipeline<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>attack<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>decay<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>sustain<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>release<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>gate<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>rate_counter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>exponential_counter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>exponential_counter_period<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>new_exponential_counter_period<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>reset_rate_counter<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>state<sp/>=<sp/>RELEASE;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>rate_period<sp/>=<sp/>rate_counter_period[release];</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>hold_zero<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>chip<sp/>model.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EnvelopeGenerator::set_chip_model(chip_model<sp/>model)</highlight></codeline>
<codeline lineno="218"><highlight class="normal">{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>sid_model<sp/>=<sp/>model;</highlight></codeline>
<codeline lineno="220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Register<sp/>functions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EnvelopeGenerator::writeCONTROL_REG(reg8<sp/>control)</highlight></codeline>
<codeline lineno="227"><highlight class="normal">{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>reg8<sp/>gate_next<sp/>=<sp/>control<sp/>&amp;<sp/>0x01;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>rate<sp/>counter<sp/>is<sp/>never<sp/>reset,<sp/>thus<sp/>there<sp/>will<sp/>be<sp/>a<sp/>delay<sp/>before<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>envelope<sp/>counter<sp/>starts<sp/>counting<sp/>up<sp/>(attack)<sp/>or<sp/>down<sp/>(release).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gate<sp/>!=<sp/>gate_next)<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Gate<sp/>bit<sp/>on:<sp/>Start<sp/>attack,<sp/>decay,<sp/>sustain.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Gate<sp/>bit<sp/>off:<sp/>Start<sp/>release.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>next_state<sp/>=<sp/>gate_next<sp/>?<sp/>ATTACK<sp/>:<sp/>RELEASE;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(next_state<sp/>==<sp/>ATTACK)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>decay<sp/>register<sp/>is<sp/>&quot;accidentally&quot;<sp/>activated<sp/>during<sp/>first<sp/>cycle<sp/>of<sp/>attack<sp/>phase</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>DECAY_SUSTAIN;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rate_period<sp/>=<sp/>rate_counter_period[decay];</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state_pipeline<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reset_rate_counter<sp/>||<sp/>exponential_pipeline<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>envelope_pipeline<sp/>=<sp/>exponential_counter_period<sp/>==<sp/>1<sp/>||<sp/>exponential_pipeline<sp/>==<sp/>2<sp/>?<sp/>2<sp/>:<sp/>4;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exponential_pipeline<sp/>==<sp/>1)<sp/>{<sp/>state_pipeline<sp/>=<sp/>3;<sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{state_pipeline<sp/>=<sp/>envelope_pipeline<sp/>&gt;<sp/>0<sp/>?<sp/>3<sp/>:<sp/>2;}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>gate<sp/>=<sp/>gate_next;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal">}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EnvelopeGenerator::writeATTACK_DECAY(reg8<sp/>attack_decay)</highlight></codeline>
<codeline lineno="253"><highlight class="normal">{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>attack<sp/>=<sp/>(attack_decay<sp/>&gt;&gt;<sp/>4)<sp/>&amp;<sp/>0x0f;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>decay<sp/>=<sp/>attack_decay<sp/>&amp;<sp/>0x0f;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state<sp/>==<sp/>ATTACK)<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>rate_period<sp/>=<sp/>rate_counter_period[attack];</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state<sp/>==<sp/>DECAY_SUSTAIN)<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>rate_period<sp/>=<sp/>rate_counter_period[decay];</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EnvelopeGenerator::writeSUSTAIN_RELEASE(reg8<sp/>sustain_release)</highlight></codeline>
<codeline lineno="265"><highlight class="normal">{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>sustain<sp/>=<sp/>(sustain_release<sp/>&gt;&gt;<sp/>4)<sp/>&amp;<sp/>0x0f;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>release<sp/>=<sp/>sustain_release<sp/>&amp;<sp/>0x0f;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state<sp/>==<sp/>RELEASE)<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>rate_period<sp/>=<sp/>rate_counter_period[release];</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal">reg8<sp/>EnvelopeGenerator::readENV()</highlight></codeline>
<codeline lineno="274"><highlight class="normal">{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>env3;</highlight></codeline>
<codeline lineno="276"><highlight class="normal">}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>reSID</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/hoff/Retro/virtualc64/Emulator/Components/SID/resid/envelope.cc"/>
  </compounddef>
</doxygen>
