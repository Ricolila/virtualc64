<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="struct_virtual_c64_1_1_c64_a_p_i" kind="struct" language="C++" prot="public">
    <compoundname>VirtualC64::C64API</compoundname>
    <basecompoundref prot="public" virt="non-virtual">vc64::API</basecompoundref>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_virtual_c64_1_1_c64_a_p_i_1a03e956395af6b3c43c1f1e0825a2602e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VirtualC64::C64API::hardReset</definition>
        <argsstring>()</argsstring>
        <name>hardReset</name>
        <qualifiedname>VirtualC64::C64API::hardReset</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="170" column="14" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.cpp" bodystart="129" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="struct_virtual_c64_1_1_c64_a_p_i_1ad3a93d8cdac877aec6b45fdcf730f918" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VirtualC64::C64API::softReset</definition>
        <argsstring>()</argsstring>
        <name>softReset</name>
        <qualifiedname>VirtualC64::C64API::softReset</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="171" column="14" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.cpp" bodystart="141" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="struct_virtual_c64_1_1_c64_a_p_i_1a458146bd0d8f238f5d1484f1d0f3e959" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>InspectionTarget</type>
        <definition>InspectionTarget VirtualC64::C64API::getInspectionTarget</definition>
        <argsstring>() const</argsstring>
        <name>getInspectionTarget</name>
        <qualifiedname>VirtualC64::C64API::getInspectionTarget</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="173" column="26" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.cpp" bodystart="153" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="struct_virtual_c64_1_1_c64_a_p_i_1a48ce5bfd7985fdc658732010aee32b29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VirtualC64::C64API::setInspectionTarget</definition>
        <argsstring>(InspectionTarget target, Cycle trigger=0)</argsstring>
        <name>setInspectionTarget</name>
        <qualifiedname>VirtualC64::C64API::setInspectionTarget</qualifiedname>
        <param>
          <type>InspectionTarget</type>
          <declname>target</declname>
        </param>
        <param>
          <type>Cycle</type>
          <declname>trigger</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="174" column="14" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.cpp" bodystart="159" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="struct_virtual_c64_1_1_c64_a_p_i_1ac6947f8a9a7ccf9f07e6d092cf9dd166" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VirtualC64::C64API::removeInspectionTarget</definition>
        <argsstring>()</argsstring>
        <name>removeInspectionTarget</name>
        <qualifiedname>VirtualC64::C64API::removeInspectionTarget</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="175" column="14" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.cpp" bodystart="165" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="struct_virtual_c64_1_1_c64_a_p_i_1a511dc9a036139239dbd85e633e2df217" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>C64Info</type>
        <definition>C64Info VirtualC64::C64API::getInfo</definition>
        <argsstring>() const</argsstring>
        <name>getInfo</name>
        <qualifiedname>VirtualC64::C64API::getInfo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="177" column="17" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.cpp" bodystart="177" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="struct_virtual_c64_1_1_c64_a_p_i_1a4b0a4ac228c21884853cafbcab57bd65" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>EventSlotInfo</type>
        <definition>EventSlotInfo VirtualC64::C64API::getSlotInfo</definition>
        <argsstring>(isize nr) const</argsstring>
        <name>getSlotInfo</name>
        <qualifiedname>VirtualC64::C64API::getSlotInfo</qualifiedname>
        <param>
          <type>isize</type>
          <declname>nr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="178" column="23" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.cpp" bodystart="183" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="struct_virtual_c64_1_1_c64_a_p_i_1a9a69cef9f13981485c0a2ce282504370" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VirtualC64::C64API::isReady</definition>
        <argsstring>()</argsstring>
        <name>isReady</name>
        <qualifiedname>VirtualC64::C64API::isReady</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="180" column="14" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.cpp" bodystart="189" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="struct_virtual_c64_1_1_c64_a_p_i_1acf569a61608b4bb18837d6cd526b635c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Snapshot *</type>
        <definition>Snapshot * VirtualC64::C64API::latestAutoSnapshot</definition>
        <argsstring>()</argsstring>
        <name>latestAutoSnapshot</name>
        <qualifiedname>VirtualC64::C64API::latestAutoSnapshot</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="182" column="18" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.cpp" bodystart="195" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="struct_virtual_c64_1_1_c64_a_p_i_1ac99bbc3ab3c3e992bfe09d83e6d428ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Snapshot *</type>
        <definition>Snapshot * VirtualC64::C64API::latestUserSnapshot</definition>
        <argsstring>()</argsstring>
        <name>latestUserSnapshot</name>
        <qualifiedname>VirtualC64::C64API::latestUserSnapshot</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="183" column="18" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.cpp" bodystart="201" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="struct_virtual_c64_1_1_c64_a_p_i_1ae50b8a844367bd2b95223baf9f6d309b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VirtualC64::C64API::loadSnapshot</definition>
        <argsstring>(const Snapshot &amp;snapshot)</argsstring>
        <name>loadSnapshot</name>
        <qualifiedname>VirtualC64::C64API::loadSnapshot</qualifiedname>
        <param>
          <type>const Snapshot &amp;</type>
          <declname>snapshot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="184" column="14" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.cpp" bodystart="207" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="struct_virtual_c64_1_1_c64_a_p_i_1a2537c5c0acbd27ee192c17c0463d63c4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>RomInfo</type>
        <definition>RomInfo VirtualC64::C64API::getRomInfo</definition>
        <argsstring>(RomType type) const</argsstring>
        <name>getRomInfo</name>
        <qualifiedname>VirtualC64::C64API::getRomInfo</qualifiedname>
        <param>
          <type>RomType</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="186" column="17" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.cpp" bodystart="171" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="struct_virtual_c64_1_1_c64_a_p_i_1acb4a3117f2c3588d6623d566ae3d9b8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VirtualC64::C64API::loadRom</definition>
        <argsstring>(const string &amp;path)</argsstring>
        <name>loadRom</name>
        <qualifiedname>VirtualC64::C64API::loadRom</qualifiedname>
        <param>
          <type>const string &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="187" column="14" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.cpp" bodystart="212" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="struct_virtual_c64_1_1_c64_a_p_i_1aed32c6fa1c5265b26a031a3b1e37d634" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VirtualC64::C64API::loadRom</definition>
        <argsstring>(const RomFile &amp;file)</argsstring>
        <name>loadRom</name>
        <qualifiedname>VirtualC64::C64API::loadRom</qualifiedname>
        <param>
          <type>const RomFile &amp;</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="188" column="14" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.cpp" bodystart="218" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="struct_virtual_c64_1_1_c64_a_p_i_1af6c082e2d054fbbb8743c4551a911aac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VirtualC64::C64API::deleteRom</definition>
        <argsstring>(RomType type)</argsstring>
        <name>deleteRom</name>
        <qualifiedname>VirtualC64::C64API::deleteRom</qualifiedname>
        <param>
          <type>RomType</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="189" column="14" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.cpp" bodystart="224" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="struct_virtual_c64_1_1_c64_a_p_i_1ac28cd85b343369ec99a1700038a5a250" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VirtualC64::C64API::saveRom</definition>
        <argsstring>(RomType rom, const string &amp;path)</argsstring>
        <name>saveRom</name>
        <qualifiedname>VirtualC64::C64API::saveRom</qualifiedname>
        <param>
          <type>RomType</type>
          <declname>rom</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="190" column="14" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.cpp" bodystart="230" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="struct_virtual_c64_1_1_c64_a_p_i_1a3ddb4cec481e146ec202ec663b7a70d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VirtualC64::C64API::flash</definition>
        <argsstring>(const AnyFile &amp;file)</argsstring>
        <name>flash</name>
        <qualifiedname>VirtualC64::C64API::flash</qualifiedname>
        <param>
          <type>const AnyFile &amp;</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="192" column="14" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.cpp" bodystart="236" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="struct_virtual_c64_1_1_c64_a_p_i_1adf7827090a4cfea9cc7931a981964521" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VirtualC64::C64API::flash</definition>
        <argsstring>(const AnyCollection &amp;file, isize item)</argsstring>
        <name>flash</name>
        <qualifiedname>VirtualC64::C64API::flash</qualifiedname>
        <param>
          <type>const AnyCollection &amp;</type>
          <declname>file</declname>
        </param>
        <param>
          <type>isize</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="193" column="14" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.cpp" bodystart="242" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="struct_virtual_c64_1_1_c64_a_p_i_1abfb78db4b67e30199806c8b588394859" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VirtualC64::C64API::flash</definition>
        <argsstring>(const FileSystem &amp;fs, isize item)</argsstring>
        <name>flash</name>
        <qualifiedname>VirtualC64::C64API::flash</qualifiedname>
        <param>
          <type>const FileSystem &amp;</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>isize</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="194" column="14" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.cpp" bodystart="248" bodyend="252"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="165" column="5" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" bodystart="165" bodyend="196"/>
    <listofallmembers>
      <member refid="classvc64_1_1_a_p_i_1ac69be018cb6509eaa5a618c276c30fe1" prot="public" virt="non-virtual"><scope>VirtualC64::C64API</scope><name>API</name></member>
      <member refid="classvc64_1_1_references_1a3fbc169a9900f006d1ad6170b0bd0639" prot="protected" virt="non-virtual"><scope>VirtualC64::C64API</scope><name>c64</name></member>
      <member refid="classvc64_1_1_references_1afa87c57a43c5b7feb3b8780a4ac1008b" prot="protected" virt="non-virtual"><scope>VirtualC64::C64API</scope><name>cia1</name></member>
      <member refid="classvc64_1_1_references_1a6c3a729faae4d28880a897789e3ba081" prot="protected" virt="non-virtual"><scope>VirtualC64::C64API</scope><name>cia2</name></member>
      <member refid="classvc64_1_1_references_1a6d4dd5f97953b9c588bd29396dc7e879" prot="protected" virt="non-virtual"><scope>VirtualC64::C64API</scope><name>cpu</name></member>
      <member refid="classvc64_1_1_references_1a7fd1bd6cae9304cdbaa7e388c80149da" prot="protected" virt="non-virtual"><scope>VirtualC64::C64API</scope><name>datasette</name></member>
      <member refid="struct_virtual_c64_1_1_c64_a_p_i_1af6c082e2d054fbbb8743c4551a911aac" prot="public" virt="non-virtual"><scope>VirtualC64::C64API</scope><name>deleteRom</name></member>
      <member refid="classvc64_1_1_references_1aa10ebdbd843f4d01d5f3d30592414abb" prot="protected" virt="non-virtual"><scope>VirtualC64::C64API</scope><name>drive</name></member>
      <member refid="classvc64_1_1_references_1a9fb58675ffdd6371f702e67e933c440c" prot="protected" virt="non-virtual"><scope>VirtualC64::C64API</scope><name>drive8</name></member>
      <member refid="classvc64_1_1_references_1ad4f53254b1db026d281f98e14a1065ef" prot="protected" virt="non-virtual"><scope>VirtualC64::C64API</scope><name>drive9</name></member>
      <member refid="classvc64_1_1_a_p_i_1a82d6586bef7dac77b2ea35fe6728595f" prot="public" virt="non-virtual"><scope>VirtualC64::C64API</scope><name>emulator</name></member>
      <member refid="classvc64_1_1_references_1a96a558a1ee0efe17d9087b03edd68d9c" prot="protected" virt="non-virtual"><scope>VirtualC64::C64API</scope><name>expansionport</name></member>
      <member refid="struct_virtual_c64_1_1_c64_a_p_i_1a3ddb4cec481e146ec202ec663b7a70d7" prot="public" virt="non-virtual"><scope>VirtualC64::C64API</scope><name>flash</name></member>
      <member refid="struct_virtual_c64_1_1_c64_a_p_i_1adf7827090a4cfea9cc7931a981964521" prot="public" virt="non-virtual"><scope>VirtualC64::C64API</scope><name>flash</name></member>
      <member refid="struct_virtual_c64_1_1_c64_a_p_i_1abfb78db4b67e30199806c8b588394859" prot="public" virt="non-virtual"><scope>VirtualC64::C64API</scope><name>flash</name></member>
      <member refid="struct_virtual_c64_1_1_c64_a_p_i_1a511dc9a036139239dbd85e633e2df217" prot="public" virt="non-virtual"><scope>VirtualC64::C64API</scope><name>getInfo</name></member>
      <member refid="struct_virtual_c64_1_1_c64_a_p_i_1a458146bd0d8f238f5d1484f1d0f3e959" prot="public" virt="non-virtual"><scope>VirtualC64::C64API</scope><name>getInspectionTarget</name></member>
      <member refid="struct_virtual_c64_1_1_c64_a_p_i_1a2537c5c0acbd27ee192c17c0463d63c4" prot="public" virt="non-virtual"><scope>VirtualC64::C64API</scope><name>getRomInfo</name></member>
      <member refid="struct_virtual_c64_1_1_c64_a_p_i_1a4b0a4ac228c21884853cafbcab57bd65" prot="public" virt="non-virtual"><scope>VirtualC64::C64API</scope><name>getSlotInfo</name></member>
      <member refid="struct_virtual_c64_1_1_c64_a_p_i_1a03e956395af6b3c43c1f1e0825a2602e" prot="public" virt="non-virtual"><scope>VirtualC64::C64API</scope><name>hardReset</name></member>
      <member refid="classvc64_1_1_references_1ae039cd601c96e99965c9e51a7a5d37a2" prot="protected" virt="non-virtual"><scope>VirtualC64::C64API</scope><name>host</name></member>
      <member refid="classvc64_1_1_references_1a56adc0ba90182bde337fb3510a262136" prot="protected" virt="non-virtual"><scope>VirtualC64::C64API</scope><name>iec</name></member>
      <member refid="struct_virtual_c64_1_1_c64_a_p_i_1a9a69cef9f13981485c0a2ce282504370" prot="public" virt="non-virtual"><scope>VirtualC64::C64API</scope><name>isReady</name></member>
      <member refid="classvc64_1_1_a_p_i_1a815d94d61d7a5ecf7f1dccf21de51ca3" prot="public" virt="non-virtual"><scope>VirtualC64::C64API</scope><name>isUserThread</name></member>
      <member refid="classvc64_1_1_references_1a2d7c7bdb02194750f58b4b464f9a4e27" prot="protected" virt="non-virtual"><scope>VirtualC64::C64API</scope><name>keyboard</name></member>
      <member refid="struct_virtual_c64_1_1_c64_a_p_i_1acf569a61608b4bb18837d6cd526b635c" prot="public" virt="non-virtual"><scope>VirtualC64::C64API</scope><name>latestAutoSnapshot</name></member>
      <member refid="struct_virtual_c64_1_1_c64_a_p_i_1ac99bbc3ab3c3e992bfe09d83e6d428ae" prot="public" virt="non-virtual"><scope>VirtualC64::C64API</scope><name>latestUserSnapshot</name></member>
      <member refid="struct_virtual_c64_1_1_c64_a_p_i_1acb4a3117f2c3588d6623d566ae3d9b8e" prot="public" virt="non-virtual"><scope>VirtualC64::C64API</scope><name>loadRom</name></member>
      <member refid="struct_virtual_c64_1_1_c64_a_p_i_1aed32c6fa1c5265b26a031a3b1e37d634" prot="public" virt="non-virtual"><scope>VirtualC64::C64API</scope><name>loadRom</name></member>
      <member refid="struct_virtual_c64_1_1_c64_a_p_i_1ae50b8a844367bd2b95223baf9f6d309b" prot="public" virt="non-virtual"><scope>VirtualC64::C64API</scope><name>loadSnapshot</name></member>
      <member refid="classvc64_1_1_references_1abcfca0e0c6484b0b5ef1c235113f4a57" prot="protected" virt="non-virtual"><scope>VirtualC64::C64API</scope><name>mem</name></member>
      <member refid="classvc64_1_1_references_1a107318ccbff5b11cb77026cd274974f3" prot="protected" virt="non-virtual"><scope>VirtualC64::C64API</scope><name>msgQueue</name></member>
      <member refid="classvc64_1_1_references_1ad7af8e9288a5ccdd69e1ebe3a017e3f6" prot="protected" virt="non-virtual"><scope>VirtualC64::C64API</scope><name>muxer</name></member>
      <member refid="classvc64_1_1_references_1a1c3c3487396e208b6495fcdc73936de2" prot="protected" virt="non-virtual"><scope>VirtualC64::C64API</scope><name>oscillator</name></member>
      <member refid="classvc64_1_1_references_1adfdca8ba1967e6d1de209ce8f6a40816" prot="protected" virt="non-virtual"><scope>VirtualC64::C64API</scope><name>parCable</name></member>
      <member refid="classvc64_1_1_references_1aab0477bdbf0257957007dc495e49ee0e" prot="protected" virt="non-virtual"><scope>VirtualC64::C64API</scope><name>port1</name></member>
      <member refid="classvc64_1_1_references_1a054a39fcb2357fc321e56ea4103860ee" prot="protected" virt="non-virtual"><scope>VirtualC64::C64API</scope><name>port2</name></member>
      <member refid="classvc64_1_1_references_1a3fa1751dc3d018d0813409f0495cdcab" prot="protected" virt="non-virtual"><scope>VirtualC64::C64API</scope><name>recorder</name></member>
      <member refid="classvc64_1_1_references_1a466a1bc4bfe90a7f29afb596df1c530d" prot="public" virt="non-virtual"><scope>VirtualC64::C64API</scope><name>References</name></member>
      <member refid="classvc64_1_1_references_1a0951b2824424d9fda808b88efd9b50e4" prot="protected" virt="non-virtual"><scope>VirtualC64::C64API</scope><name>regressionTester</name></member>
      <member refid="struct_virtual_c64_1_1_c64_a_p_i_1ac6947f8a9a7ccf9f07e6d092cf9dd166" prot="public" virt="non-virtual"><scope>VirtualC64::C64API</scope><name>removeInspectionTarget</name></member>
      <member refid="classvc64_1_1_a_p_i_1abf5b5cc4514382edc5e80528d956ab96" prot="public" virt="non-virtual"><scope>VirtualC64::C64API</scope><name>resume</name></member>
      <member refid="classvc64_1_1_references_1a1d81ee2f6b3a1daed8df1142c0e299e3" prot="protected" virt="non-virtual"><scope>VirtualC64::C64API</scope><name>retroShell</name></member>
      <member refid="struct_virtual_c64_1_1_c64_a_p_i_1ac28cd85b343369ec99a1700038a5a250" prot="public" virt="non-virtual"><scope>VirtualC64::C64API</scope><name>saveRom</name></member>
      <member refid="struct_virtual_c64_1_1_c64_a_p_i_1a48ce5bfd7985fdc658732010aee32b29" prot="public" virt="non-virtual"><scope>VirtualC64::C64API</scope><name>setInspectionTarget</name></member>
      <member refid="struct_virtual_c64_1_1_c64_a_p_i_1ad3a93d8cdac877aec6b45fdcf730f918" prot="public" virt="non-virtual"><scope>VirtualC64::C64API</scope><name>softReset</name></member>
      <member refid="classvc64_1_1_a_p_i_1aaf072770fe8db16f4eb6187afd5e56c1" prot="public" virt="non-virtual"><scope>VirtualC64::C64API</scope><name>suspend</name></member>
      <member refid="classvc64_1_1_suspendable_1a7f9f608d5b2b9b6e944176cde77b8f85" prot="public" virt="non-virtual"><scope>VirtualC64::C64API</scope><name>Suspendable</name></member>
      <member refid="classvc64_1_1_references_1a1f1e51f8cba9a1a920b7113f5105febd" prot="protected" virt="non-virtual"><scope>VirtualC64::C64API</scope><name>vic</name></member>
      <member refid="classvc64_1_1_suspendable_1a35809d3a4c20db1f096e8dc5c78c49b9" prot="public" virt="virtual"><scope>VirtualC64::C64API</scope><name>~Suspendable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
