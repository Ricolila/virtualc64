<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="_colors_8cpp" kind="file" language="C++">
    <compoundname>Colors.cpp</compoundname>
    <includes refid="config_8h" local="yes">config.h</includes>
    <includes refid="_colors_8h" local="yes">Colors.h</includes>
    <incdepgraph>
      <node id="5">
        <label>Aliases.h</label>
        <link refid="_aliases_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/hoff/Retro/virtualc64/Emulator/Base/Colors.cpp</label>
        <link refid="_colors_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Colors.h</label>
        <link refid="_colors_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>Macros.h</label>
        <link refid="_macros_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>Types.h</label>
        <link refid="_types_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>config.h</label>
        <link refid="config_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>assert.h</label>
      </node>
      <node id="10">
        <label>stdbool.h</label>
      </node>
      <node id="9">
        <label>stdint.h</label>
      </node>
      <node id="8">
        <label>sys/types.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacevc64">vc64</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>VirtualC64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>Dirk<sp/>W.<sp/>Hoffmann.<sp/>www.dirkwhoffmann.de</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>FILE<sp/>is<sp/>dual-licensed.<sp/>You<sp/>are<sp/>free<sp/>to<sp/>choose<sp/>between:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>-<sp/>The<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>v3<sp/>(or<sp/>any<sp/>later<sp/>version)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>-<sp/>The<sp/>Mozilla<sp/>Public<sp/>License<sp/>v2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>GPL-3.0-or-later<sp/>OR<sp/>MPL-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Colors.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">vc64<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal">RgbColor::RgbColor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GpuColor<sp/>&amp;c)</highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>(c.abgr<sp/>&amp;<sp/>0xFF)<sp/>/<sp/>255.0;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>g<sp/>=<sp/>((c.abgr<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xFF)<sp/>/<sp/>255.0;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>b<sp/>=<sp/>((c.abgr<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0xFF)<sp/>/<sp/>255.0;</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal">RgbColor::RgbColor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>YuvColor<sp/>&amp;c)</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>c.y<sp/>+<sp/>1.140<sp/>*<sp/>c.v;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>g<sp/>=<sp/>c.y<sp/>-<sp/>0.395<sp/>*<sp/>c.u<sp/>-<sp/>0.581<sp/>*<sp/>c.v;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>b<sp/>=<sp/>c.y<sp/>+<sp/>2.032<sp/>*<sp/>c.u;</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal">RgbColor</highlight></codeline>
<codeline lineno="33"><highlight class="normal">RgbColor::mix(RgbColor<sp/>additive,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>weight)</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;mix:<sp/>old<sp/>%f<sp/>%f<sp/>%f<sp/>weight<sp/>=<sp/>%f\n&quot;,<sp/>r,<sp/>g,<sp/>b,<sp/>weight);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;mix:<sp/>add<sp/>%f<sp/>%f<sp/>%f\n&quot;,<sp/>additive.r,<sp/>additive.g,<sp/>additive.b);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(additive.r<sp/>&lt;=<sp/>1.0);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(additive.g<sp/>&lt;=<sp/>1.0);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(additive.b<sp/>&lt;=<sp/>1.0);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>newR<sp/>=<sp/>r<sp/>+<sp/>(additive.r<sp/>-<sp/>r)<sp/>*<sp/>weight;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>newG<sp/>=<sp/>g<sp/>+<sp/>(additive.g<sp/>-<sp/>g)<sp/>*<sp/>weight;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>newB<sp/>=<sp/>b<sp/>+<sp/>(additive.b<sp/>-<sp/>b)<sp/>*<sp/>weight;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>RgbColor<sp/>c<sp/>=<sp/>RgbColor(newR,<sp/>newG,<sp/>newB);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;mix:<sp/>new<sp/>%f<sp/>%f<sp/>%f\n&quot;,<sp/>c.r,<sp/>c.g,<sp/>c.b);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>RgbColor(newR,<sp/>newG,<sp/>newB);</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal">RgbColor</highlight></codeline>
<codeline lineno="53"><highlight class="normal">RgbColor::mix(RgbColor<sp/>additive,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>weight1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>weight2)</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(additive.r<sp/>&lt;=<sp/>1.0);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(additive.g<sp/>&lt;=<sp/>1.0);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(additive.b<sp/>&lt;=<sp/>1.0);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>newR<sp/>=<sp/>r<sp/>*<sp/>weight1<sp/>+<sp/>additive.r<sp/>*<sp/>weight2;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>newG<sp/>=<sp/>g<sp/>*<sp/>weight1<sp/>+<sp/>additive.g<sp/>*<sp/>weight2;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>newB<sp/>=<sp/>b<sp/>*<sp/>weight1<sp/>+<sp/>additive.b<sp/>*<sp/>weight2;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>RgbColor(newR,<sp/>newG,<sp/>newB);</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RgbColor<sp/>RgbColor::black(0.0,<sp/>0.0,<sp/>0.0);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RgbColor<sp/>RgbColor::white(1.0,<sp/>1.0,<sp/>1.0);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RgbColor<sp/>RgbColor::red(1.0,<sp/>0.0,<sp/>0.0);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RgbColor<sp/>RgbColor::green(0.0,<sp/>1.0,<sp/>0.0);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RgbColor<sp/>RgbColor::blue(0.0,<sp/>0.0,<sp/>1.0);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RgbColor<sp/>RgbColor::yellow(1.0,<sp/>1.0,<sp/>0.0);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RgbColor<sp/>RgbColor::magenta(1.0,<sp/>0.0,<sp/>1.0);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RgbColor<sp/>RgbColor::cyan(0.0,<sp/>1.0,<sp/>1.0);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal">YuvColor::YuvColor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RgbColor<sp/>&amp;c)</highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>y<sp/>=<sp/><sp/>0.299<sp/>*<sp/>c.r<sp/>+<sp/>0.587<sp/>*<sp/>c.g<sp/>+<sp/>0.114<sp/>*<sp/>c.b;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>u<sp/>=<sp/>-0.147<sp/>*<sp/>c.r<sp/>-<sp/>0.289<sp/>*<sp/>c.g<sp/>+<sp/>0.436<sp/>*<sp/>c.b;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>v<sp/>=<sp/><sp/>0.615<sp/>*<sp/>c.r<sp/>-<sp/>0.515<sp/>*<sp/>c.g<sp/>-<sp/>0.100<sp/>*<sp/>c.b;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>YuvColor<sp/>YuvColor::black(RgbColor::black);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>YuvColor<sp/>YuvColor::white(RgbColor::white);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>YuvColor<sp/>YuvColor::red(RgbColor::red);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>YuvColor<sp/>YuvColor::green(RgbColor::green);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>YuvColor<sp/>YuvColor::blue(RgbColor::blue);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>YuvColor<sp/>YuvColor::yellow(RgbColor::yellow);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>YuvColor<sp/>YuvColor::magenta(RgbColor::magenta);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>YuvColor<sp/>YuvColor::cyan(RgbColor::cyan);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal">GpuColor::GpuColor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RgbColor<sp/>&amp;c)</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/>a<sp/>=<sp/>(u8)255;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/>r<sp/>=<sp/>(u8)(c.r<sp/>*<sp/>255);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/>g<sp/>=<sp/>(u8)(c.g<sp/>*<sp/>255);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/>b<sp/>=<sp/>(u8)(c.b<sp/>*<sp/>255);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>abgr<sp/>=<sp/>(a<sp/>&lt;&lt;<sp/>24)<sp/>|<sp/>(b<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>(g<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>r;</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal">GpuColor::GpuColor(u8<sp/>r,<sp/>u8<sp/>g,<sp/>u8<sp/>b)</highlight></codeline>
<codeline lineno="110"><highlight class="normal">{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/>a<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>abgr<sp/>=<sp/>(a<sp/>&lt;&lt;<sp/>24)<sp/>|<sp/>(b<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>(g<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>r;</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GpuColor<sp/>GpuColor::black(RgbColor::black);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GpuColor<sp/>GpuColor::white(RgbColor::white);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GpuColor<sp/>GpuColor::red(RgbColor::red);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GpuColor<sp/>GpuColor::green(RgbColor::green);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GpuColor<sp/>GpuColor::blue(RgbColor::blue);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GpuColor<sp/>GpuColor::yellow(RgbColor::yellow);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GpuColor<sp/>GpuColor::magenta(RgbColor::magenta);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GpuColor<sp/>GpuColor::cyan(RgbColor::cyan);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal">GpuColor</highlight></codeline>
<codeline lineno="125"><highlight class="normal">GpuColor::mix(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RgbColor<sp/>&amp;color,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>weight)</highlight></codeline>
<codeline lineno="126"><highlight class="normal">{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>RgbColor<sp/>mixedColor<sp/>=<sp/>RgbColor(*this).mix(color,<sp/>weight);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GpuColor(mixedColor);</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal">GpuColor</highlight></codeline>
<codeline lineno="132"><highlight class="normal">GpuColor::mix(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RgbColor<sp/>&amp;color,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>weight1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>weight2)</highlight></codeline>
<codeline lineno="133"><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>RgbColor<sp/>mixedColor<sp/>=<sp/>RgbColor(*this).mix(color,<sp/>weight1,<sp/>weight2);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GpuColor(mixedColor);</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Colors.cpp"/>
  </compounddef>
</doxygen>
