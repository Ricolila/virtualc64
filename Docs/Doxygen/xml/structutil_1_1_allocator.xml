<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="structutil_1_1_allocator" kind="struct" language="C++" prot="public">
    <compoundname>util::Allocator</compoundname>
    <derivedcompoundref refid="structutil_1_1_buffer" prot="public" virt="non-virtual">util::Buffer&lt; T &gt;</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>class T</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structutil_1_1_allocator_1a6d4363015971d3052c69a218eacea934" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr isize</type>
        <definition>constexpr isize util::Allocator&lt; T &gt;::maxCapacity</definition>
        <argsstring></argsstring>
        <name>maxCapacity</name>
        <qualifiedname>util::Allocator::maxCapacity</qualifiedname>
        <initializer>= 512 * 1024 * 1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.h" line="22" column="28" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.h" bodystart="22" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structutil_1_1_allocator_1a4bbfe862d6f01927763a31e176d53b27" prot="public" static="no" mutable="no">
        <type>T *&amp;</type>
        <definition>T*&amp; util::Allocator&lt; T &gt;::ptr</definition>
        <argsstring></argsstring>
        <name>ptr</name>
        <qualifiedname>util::Allocator::ptr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.h" line="24" column="7" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structutil_1_1_allocator_1a3cf86c705c67083dae05358dd446b026" prot="public" static="no" mutable="no">
        <type>isize</type>
        <definition>isize util::Allocator&lt; T &gt;::size</definition>
        <argsstring></argsstring>
        <name>size</name>
        <qualifiedname>util::Allocator::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.h" line="25" column="11" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.h" bodystart="25" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structutil_1_1_allocator_1a907215dfa17a84d3a0d650f977685c11" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>util::Allocator&lt; T &gt;::Allocator</definition>
        <argsstring>(T *&amp;ptr)</argsstring>
        <name>Allocator</name>
        <qualifiedname>util::Allocator::Allocator</qualifiedname>
        <param>
          <type>T *&amp;</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.h" line="27" column="5" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.h" bodystart="27" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="structutil_1_1_allocator_1ab44e39d06b9888856fc71315b097b2df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>util::Allocator&lt; T &gt;::Allocator</definition>
        <argsstring>(const Allocator &amp;)=delete</argsstring>
        <name>Allocator</name>
        <qualifiedname>util::Allocator::Allocator</qualifiedname>
        <param>
          <type>const Allocator &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.h" line="28" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structutil_1_1_allocator_1ad9bd69224bafda1d213148e4489dc401" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>util::Allocator&lt; T &gt;::~Allocator</definition>
        <argsstring>()</argsstring>
        <name>~Allocator</name>
        <qualifiedname>util::Allocator::~Allocator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.h" line="29" column="5" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.h" bodystart="29" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="structutil_1_1_allocator_1a7924ec5c89bf3705a19ef3e1d1894660" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>isize</type>
        <definition>isize util::Allocator&lt; T &gt;::bytesize</definition>
        <argsstring>() const</argsstring>
        <name>bytesize</name>
        <qualifiedname>util::Allocator::bytesize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.h" line="32" column="11" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.h" bodystart="32" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="structutil_1_1_allocator_1a35a7c6b32b213887b1fe26a9ceb71b55" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool util::Allocator&lt; T &gt;::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <qualifiedname>util::Allocator::empty</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.h" line="33" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.h" bodystart="33" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="structutil_1_1_allocator_1a0a9921267e1f356e6782cd8198cfd283" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>util::Allocator&lt; T &gt;::operator bool</definition>
        <argsstring>() const</argsstring>
        <name>operator bool</name>
        <qualifiedname>util::Allocator::operator bool</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.h" line="34" column="14" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.h" bodystart="34" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="structutil_1_1_allocator_1a88943b16a85d72d327236eae508b10ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void util::Allocator&lt; T &gt;::alloc</definition>
        <argsstring>(isize elements)</argsstring>
        <name>alloc</name>
        <qualifiedname>util::Allocator::alloc</qualifiedname>
        <param>
          <type>isize</type>
          <declname>elements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.h" line="37" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.cpp" bodystart="22" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="structutil_1_1_allocator_1a10e8e158fd03d89ca657a5fd6e46e0b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void util::Allocator&lt; T &gt;::dealloc</definition>
        <argsstring>()</argsstring>
        <name>dealloc</name>
        <qualifiedname>util::Allocator::dealloc</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.h" line="38" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.cpp" bodystart="45" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="structutil_1_1_allocator_1a2f4294becfc44787f0dae1d6ade11ab8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void util::Allocator&lt; T &gt;::init</definition>
        <argsstring>(isize elements, T value=0)</argsstring>
        <name>init</name>
        <qualifiedname>util::Allocator::init</qualifiedname>
        <param>
          <type>isize</type>
          <declname>elements</declname>
        </param>
        <param>
          <type>T</type>
          <declname>value</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.h" line="39" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.cpp" bodystart="58" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="structutil_1_1_allocator_1a9ab3028e5bd6b27e40610fa6474c400c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void util::Allocator&lt; T &gt;::init</definition>
        <argsstring>(const T *buf, isize elements)</argsstring>
        <name>init</name>
        <qualifiedname>util::Allocator::init</qualifiedname>
        <param>
          <type>const T *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>isize</type>
          <declname>elements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.h" line="40" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.cpp" bodystart="71" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="structutil_1_1_allocator_1a67eb3fd5a42d2c99786c8a9a3fde16ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void util::Allocator&lt; T &gt;::init</definition>
        <argsstring>(const Allocator&lt; T &gt; &amp;other)</argsstring>
        <name>init</name>
        <qualifiedname>util::Allocator::init</qualifiedname>
        <param>
          <type>const Allocator&lt; T &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.h" line="41" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.cpp" bodystart="86" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="structutil_1_1_allocator_1a6e3f25433c42844852907f4258877e88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void util::Allocator&lt; T &gt;::init</definition>
        <argsstring>(const string &amp;path)</argsstring>
        <name>init</name>
        <qualifiedname>util::Allocator::init</qualifiedname>
        <param>
          <type>const string &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.h" line="42" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.cpp" bodystart="92" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="structutil_1_1_allocator_1a791fdb4e217ee1f26138a586feead127" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void util::Allocator&lt; T &gt;::init</definition>
        <argsstring>(const string &amp;path, const string &amp;name)</argsstring>
        <name>init</name>
        <qualifiedname>util::Allocator::init</qualifiedname>
        <param>
          <type>const string &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.h" line="43" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.cpp" bodystart="115" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="structutil_1_1_allocator_1a4ffcee5a93164edf03c5666e6154c2c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void util::Allocator&lt; T &gt;::resize</definition>
        <argsstring>(isize elements)</argsstring>
        <name>resize</name>
        <qualifiedname>util::Allocator::resize</qualifiedname>
        <param>
          <type>isize</type>
          <declname>elements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.h" line="46" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.cpp" bodystart="121" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="structutil_1_1_allocator_1ab0f30cf816c836644b7db26f3ea4e0d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void util::Allocator&lt; T &gt;::resize</definition>
        <argsstring>(isize elements, T pad)</argsstring>
        <name>resize</name>
        <qualifiedname>util::Allocator::resize</qualifiedname>
        <param>
          <type>isize</type>
          <declname>elements</declname>
        </param>
        <param>
          <type>T</type>
          <declname>pad</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.h" line="47" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.cpp" bodystart="148" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="structutil_1_1_allocator_1a91742dbc438bda8863ecc712b47b7860" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void util::Allocator&lt; T &gt;::clear</definition>
        <argsstring>(T value, isize offset, isize len)</argsstring>
        <name>clear</name>
        <qualifiedname>util::Allocator::clear</qualifiedname>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <param>
          <type>isize</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>isize</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.h" line="50" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.cpp" bodystart="157" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="structutil_1_1_allocator_1a86cc80225345340246eb0d2bbf9fd8c0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void util::Allocator&lt; T &gt;::clear</definition>
        <argsstring>(T value=0, isize offset=0)</argsstring>
        <name>clear</name>
        <qualifiedname>util::Allocator::clear</qualifiedname>
        <param>
          <type>T</type>
          <declname>value</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>isize</type>
          <declname>offset</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.h" line="51" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.h" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="structutil_1_1_allocator_1aa13b96cc55ff40c9521388df4ed529e3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void util::Allocator&lt; T &gt;::copy</definition>
        <argsstring>(T *buf, isize offset, isize len) const</argsstring>
        <name>copy</name>
        <qualifiedname>util::Allocator::copy</qualifiedname>
        <param>
          <type>T *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>isize</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>isize</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.h" line="54" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.cpp" bodystart="171" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="structutil_1_1_allocator_1ac8e9da1590990e63aedd5bdf4fbb054e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void util::Allocator&lt; T &gt;::copy</definition>
        <argsstring>(T *buf) const</argsstring>
        <name>copy</name>
        <qualifiedname>util::Allocator::copy</qualifiedname>
        <param>
          <type>T *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.h" line="55" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.h" bodystart="55" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="structutil_1_1_allocator_1a1f1d83b8b79fe56d3278f5efa605869b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void util::Allocator&lt; T &gt;::patch</definition>
        <argsstring>(const u8 *seq, const u8 *subst)</argsstring>
        <name>patch</name>
        <qualifiedname>util::Allocator::patch</qualifiedname>
        <param>
          <type>const u8 *</type>
          <declname>seq</declname>
        </param>
        <param>
          <type>const u8 *</type>
          <declname>subst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.h" line="58" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.cpp" bodystart="186" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="structutil_1_1_allocator_1a850e2f648922fa756c6513a17bb2f155" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void util::Allocator&lt; T &gt;::patch</definition>
        <argsstring>(const char *seq, const char *subst)</argsstring>
        <name>patch</name>
        <qualifiedname>util::Allocator::patch</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>seq</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>subst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.h" line="59" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.cpp" bodystart="192" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="structutil_1_1_allocator_1a92c46ef30d4178d20b580503cb3e84b4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>u32</type>
        <definition>u32 util::Allocator&lt; T &gt;::fnv32</definition>
        <argsstring>() const</argsstring>
        <name>fnv32</name>
        <qualifiedname>util::Allocator::fnv32</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.h" line="62" column="9" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.h" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="structutil_1_1_allocator_1a08b69b914254bc0f8bd1707f9bb0ee76" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>u64</type>
        <definition>u64 util::Allocator&lt; T &gt;::fnv64</definition>
        <argsstring>() const</argsstring>
        <name>fnv64</name>
        <qualifiedname>util::Allocator::fnv64</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.h" line="63" column="9" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.h" bodystart="63" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="structutil_1_1_allocator_1a983af0bc6b847cfa87d7c5d670588a70" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>u16</type>
        <definition>u16 util::Allocator&lt; T &gt;::crc16</definition>
        <argsstring>() const</argsstring>
        <name>crc16</name>
        <qualifiedname>util::Allocator::crc16</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.h" line="64" column="9" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.h" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="structutil_1_1_allocator_1a3a7dd481494b4fc0329b6a3305435b30" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>u32</type>
        <definition>u32 util::Allocator&lt; T &gt;::crc32</definition>
        <argsstring>() const</argsstring>
        <name>crc32</name>
        <qualifiedname>util::Allocator::crc32</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.h" line="65" column="9" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.h" bodystart="65" bodyend="65"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.h" line="20" column="12" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Buffer.h" bodystart="20" bodyend="66"/>
    <listofallmembers>
      <member refid="structutil_1_1_allocator_1a88943b16a85d72d327236eae508b10ea" prot="public" virt="non-virtual"><scope>util::Allocator</scope><name>alloc</name></member>
      <member refid="structutil_1_1_allocator_1a907215dfa17a84d3a0d650f977685c11" prot="public" virt="non-virtual"><scope>util::Allocator</scope><name>Allocator</name></member>
      <member refid="structutil_1_1_allocator_1ab44e39d06b9888856fc71315b097b2df" prot="public" virt="non-virtual"><scope>util::Allocator</scope><name>Allocator</name></member>
      <member refid="structutil_1_1_allocator_1a7924ec5c89bf3705a19ef3e1d1894660" prot="public" virt="non-virtual"><scope>util::Allocator</scope><name>bytesize</name></member>
      <member refid="structutil_1_1_allocator_1a91742dbc438bda8863ecc712b47b7860" prot="public" virt="non-virtual"><scope>util::Allocator</scope><name>clear</name></member>
      <member refid="structutil_1_1_allocator_1a86cc80225345340246eb0d2bbf9fd8c0" prot="public" virt="non-virtual"><scope>util::Allocator</scope><name>clear</name></member>
      <member refid="structutil_1_1_allocator_1aa13b96cc55ff40c9521388df4ed529e3" prot="public" virt="non-virtual"><scope>util::Allocator</scope><name>copy</name></member>
      <member refid="structutil_1_1_allocator_1ac8e9da1590990e63aedd5bdf4fbb054e" prot="public" virt="non-virtual"><scope>util::Allocator</scope><name>copy</name></member>
      <member refid="structutil_1_1_allocator_1a983af0bc6b847cfa87d7c5d670588a70" prot="public" virt="non-virtual"><scope>util::Allocator</scope><name>crc16</name></member>
      <member refid="structutil_1_1_allocator_1a3a7dd481494b4fc0329b6a3305435b30" prot="public" virt="non-virtual"><scope>util::Allocator</scope><name>crc32</name></member>
      <member refid="structutil_1_1_allocator_1a10e8e158fd03d89ca657a5fd6e46e0b6" prot="public" virt="non-virtual"><scope>util::Allocator</scope><name>dealloc</name></member>
      <member refid="structutil_1_1_allocator_1a35a7c6b32b213887b1fe26a9ceb71b55" prot="public" virt="non-virtual"><scope>util::Allocator</scope><name>empty</name></member>
      <member refid="structutil_1_1_allocator_1a92c46ef30d4178d20b580503cb3e84b4" prot="public" virt="non-virtual"><scope>util::Allocator</scope><name>fnv32</name></member>
      <member refid="structutil_1_1_allocator_1a08b69b914254bc0f8bd1707f9bb0ee76" prot="public" virt="non-virtual"><scope>util::Allocator</scope><name>fnv64</name></member>
      <member refid="structutil_1_1_allocator_1a2f4294becfc44787f0dae1d6ade11ab8" prot="public" virt="non-virtual"><scope>util::Allocator</scope><name>init</name></member>
      <member refid="structutil_1_1_allocator_1a9ab3028e5bd6b27e40610fa6474c400c" prot="public" virt="non-virtual"><scope>util::Allocator</scope><name>init</name></member>
      <member refid="structutil_1_1_allocator_1a67eb3fd5a42d2c99786c8a9a3fde16ac" prot="public" virt="non-virtual"><scope>util::Allocator</scope><name>init</name></member>
      <member refid="structutil_1_1_allocator_1a6e3f25433c42844852907f4258877e88" prot="public" virt="non-virtual"><scope>util::Allocator</scope><name>init</name></member>
      <member refid="structutil_1_1_allocator_1a791fdb4e217ee1f26138a586feead127" prot="public" virt="non-virtual"><scope>util::Allocator</scope><name>init</name></member>
      <member refid="structutil_1_1_allocator_1a6d4363015971d3052c69a218eacea934" prot="public" virt="non-virtual"><scope>util::Allocator</scope><name>maxCapacity</name></member>
      <member refid="structutil_1_1_allocator_1a0a9921267e1f356e6782cd8198cfd283" prot="public" virt="non-virtual"><scope>util::Allocator</scope><name>operator bool</name></member>
      <member refid="structutil_1_1_allocator_1a1f1d83b8b79fe56d3278f5efa605869b" prot="public" virt="non-virtual"><scope>util::Allocator</scope><name>patch</name></member>
      <member refid="structutil_1_1_allocator_1a850e2f648922fa756c6513a17bb2f155" prot="public" virt="non-virtual"><scope>util::Allocator</scope><name>patch</name></member>
      <member refid="structutil_1_1_allocator_1a4bbfe862d6f01927763a31e176d53b27" prot="public" virt="non-virtual"><scope>util::Allocator</scope><name>ptr</name></member>
      <member refid="structutil_1_1_allocator_1a4ffcee5a93164edf03c5666e6154c2c0" prot="public" virt="non-virtual"><scope>util::Allocator</scope><name>resize</name></member>
      <member refid="structutil_1_1_allocator_1ab0f30cf816c836644b7db26f3ea4e0d8" prot="public" virt="non-virtual"><scope>util::Allocator</scope><name>resize</name></member>
      <member refid="structutil_1_1_allocator_1a3cf86c705c67083dae05358dd446b026" prot="public" virt="non-virtual"><scope>util::Allocator</scope><name>size</name></member>
      <member refid="structutil_1_1_allocator_1ad9bd69224bafda1d213148e4489dc401" prot="public" virt="non-virtual"><scope>util::Allocator</scope><name>~Allocator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
