<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="structutil_1_1_ring_buffer" kind="struct" language="C++" prot="public">
    <compoundname>util::RingBuffer</compoundname>
    <derivedcompoundref refid="structutil_1_1_sorted_ring_buffer" prot="public" virt="non-virtual">util::SortedRingBuffer&lt; Cmd, 1024 &gt;</derivedcompoundref>
    <derivedcompoundref refid="structutil_1_1_sorted_ring_buffer" prot="public" virt="non-virtual">util::SortedRingBuffer&lt; T, capacity &gt;</derivedcompoundref>
    <derivedcompoundref refid="classvc64_1_1_stereo_stream" prot="public" virt="non-virtual">vc64::StereoStream</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>class T</type>
      </param>
      <param>
        <type>isize</type>
        <declname>capacity</declname>
        <defname>capacity</defname>
      </param>
    </templateparamlist>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structutil_1_1_ring_buffer_1a16baa00ab3229898d9e336b365c857c0" prot="public" static="no" mutable="no">
        <type>T *</type>
        <definition>T* util::RingBuffer&lt; T, capacity &gt;::elements</definition>
        <argsstring></argsstring>
        <name>elements</name>
        <qualifiedname>util::RingBuffer::elements</qualifiedname>
        <initializer>= new T[capacity]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/RingBuffer.h" line="146" column="7" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/RingBuffer.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structutil_1_1_ring_buffer_1af0a4ac815fd6103714fa9705a8ae9310" prot="public" static="no" mutable="no">
        <type>isize</type>
        <definition>isize util::RingBuffer&lt; T, capacity &gt;::r</definition>
        <argsstring></argsstring>
        <name>r</name>
        <qualifiedname>util::RingBuffer::r</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/RingBuffer.h" line="149" column="11" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/RingBuffer.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structutil_1_1_ring_buffer_1af5fa899dc4a119f5b0f60084c4b2112c" prot="public" static="no" mutable="no">
        <type>isize</type>
        <definition>isize util::RingBuffer&lt; T, capacity &gt;::w</definition>
        <argsstring></argsstring>
        <name>w</name>
        <qualifiedname>util::RingBuffer::w</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/RingBuffer.h" line="149" column="13" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/RingBuffer.h" bodystart="149" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structutil_1_1_ring_buffer_1a14a3b31e64fa0931a551917c930b17b6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>util::RingBuffer&lt; T, capacity &gt;::RingBuffer</definition>
        <argsstring>()</argsstring>
        <name>RingBuffer</name>
        <qualifiedname>util::RingBuffer::RingBuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/RingBuffer.h" line="156" column="5" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/RingBuffer.h" bodystart="156" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="structutil_1_1_ring_buffer_1ab7dcd2d8d88887dc8ceceb0044aff0dd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>util::RingBuffer&lt; T, capacity &gt;::~RingBuffer</definition>
        <argsstring>()</argsstring>
        <name>~RingBuffer</name>
        <qualifiedname>util::RingBuffer::~RingBuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/RingBuffer.h" line="157" column="5" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/RingBuffer.h" bodystart="157" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="structutil_1_1_ring_buffer_1a384d501cfa58cf3a8f8d8eaefa9816c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void util::RingBuffer&lt; T, capacity &gt;::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <qualifiedname>util::RingBuffer::clear</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/RingBuffer.h" line="159" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/RingBuffer.h" bodystart="159" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="structutil_1_1_ring_buffer_1a50f1798e6647745d67d9e347e381a391" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void util::RingBuffer&lt; T, capacity &gt;::clear</definition>
        <argsstring>(T t)</argsstring>
        <name>clear</name>
        <qualifiedname>util::RingBuffer::clear</qualifiedname>
        <param>
          <type>T</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/RingBuffer.h" line="160" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/RingBuffer.h" bodystart="160" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="structutil_1_1_ring_buffer_1a6588a2ee6f1557522ba88cddfdb4f117" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void util::RingBuffer&lt; T, capacity &gt;::align</definition>
        <argsstring>(isize offset)</argsstring>
        <name>align</name>
        <qualifiedname>util::RingBuffer::align</qualifiedname>
        <param>
          <type>isize</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/RingBuffer.h" line="161" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/RingBuffer.h" bodystart="161" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="structutil_1_1_ring_buffer_1a28cfa84b405f5b9e6e84f27d822ac9db" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>isize</type>
        <definition>isize util::RingBuffer&lt; T, capacity &gt;::cap</definition>
        <argsstring>() const</argsstring>
        <name>cap</name>
        <qualifiedname>util::RingBuffer::cap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/RingBuffer.h" line="168" column="11" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/RingBuffer.h" bodystart="168" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="structutil_1_1_ring_buffer_1a1899da9078d1b3053857a2f65865a7b9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>isize</type>
        <definition>isize util::RingBuffer&lt; T, capacity &gt;::count</definition>
        <argsstring>() const</argsstring>
        <name>count</name>
        <qualifiedname>util::RingBuffer::count</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/RingBuffer.h" line="169" column="11" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/RingBuffer.h" bodystart="169" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="structutil_1_1_ring_buffer_1a66a78ac4fda05b582acabc0961a49b0b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>isize</type>
        <definition>isize util::RingBuffer&lt; T, capacity &gt;::free</definition>
        <argsstring>() const</argsstring>
        <name>free</name>
        <qualifiedname>util::RingBuffer::free</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/RingBuffer.h" line="170" column="11" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/RingBuffer.h" bodystart="170" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="structutil_1_1_ring_buffer_1a6dca7131ca271cc912c43a79476c8a14" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double util::RingBuffer&lt; T, capacity &gt;::fillLevel</definition>
        <argsstring>() const</argsstring>
        <name>fillLevel</name>
        <qualifiedname>util::RingBuffer::fillLevel</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/RingBuffer.h" line="171" column="12" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/RingBuffer.h" bodystart="171" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="structutil_1_1_ring_buffer_1a6980de6f8b3779982e6a10e10e7ade72" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool util::RingBuffer&lt; T, capacity &gt;::isEmpty</definition>
        <argsstring>() const</argsstring>
        <name>isEmpty</name>
        <qualifiedname>util::RingBuffer::isEmpty</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/RingBuffer.h" line="172" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/RingBuffer.h" bodystart="172" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="structutil_1_1_ring_buffer_1a238c1755b9142deb131b0c3226e98782" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool util::RingBuffer&lt; T, capacity &gt;::isFull</definition>
        <argsstring>() const</argsstring>
        <name>isFull</name>
        <qualifiedname>util::RingBuffer::isFull</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/RingBuffer.h" line="173" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/RingBuffer.h" bodystart="173" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="structutil_1_1_ring_buffer_1ae4218ce9d24a7a0b65334c1fc4a5d30f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>isize</type>
        <definition>isize util::RingBuffer&lt; T, capacity &gt;::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <qualifiedname>util::RingBuffer::begin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/RingBuffer.h" line="180" column="11" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/RingBuffer.h" bodystart="180" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="structutil_1_1_ring_buffer_1aeba30c8188c9a04eed4373acd72f4f0e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>isize</type>
        <definition>isize util::RingBuffer&lt; T, capacity &gt;::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <qualifiedname>util::RingBuffer::end</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/RingBuffer.h" line="181" column="11" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/RingBuffer.h" bodystart="181" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="structutil_1_1_ring_buffer_1aa727689dd6fed78656421be1ad3b0ebc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T &amp; util::RingBuffer&lt; T, capacity &gt;::read</definition>
        <argsstring>()</argsstring>
        <name>read</name>
        <qualifiedname>util::RingBuffer::read</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/RingBuffer.h" line="190" column="7" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/RingBuffer.h" bodystart="190" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="structutil_1_1_ring_buffer_1a04c1fafb7e5b1a1685ef1216f8657aba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T &amp; util::RingBuffer&lt; T, capacity &gt;::read</definition>
        <argsstring>(T fallback)</argsstring>
        <name>read</name>
        <qualifiedname>util::RingBuffer::read</qualifiedname>
        <param>
          <type>T</type>
          <declname>fallback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/RingBuffer.h" line="199" column="13" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/RingBuffer.h" bodystart="199" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="structutil_1_1_ring_buffer_1a8bd34f4e8c37d24d8b11753ffa055265" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void util::RingBuffer&lt; T, capacity &gt;::write</definition>
        <argsstring>(T element)</argsstring>
        <name>write</name>
        <qualifiedname>util::RingBuffer::write</qualifiedname>
        <param>
          <type>T</type>
          <declname>element</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/RingBuffer.h" line="205" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/RingBuffer.h" bodystart="205" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="structutil_1_1_ring_buffer_1a6f0ab86ac4a0f15d4d431189d7b6ee1b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void util::RingBuffer&lt; T, capacity &gt;::skip</definition>
        <argsstring>()</argsstring>
        <name>skip</name>
        <qualifiedname>util::RingBuffer::skip</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/RingBuffer.h" line="213" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/RingBuffer.h" bodystart="213" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="structutil_1_1_ring_buffer_1a17cbf324d19b4d3f272800934309ea25" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void util::RingBuffer&lt; T, capacity &gt;::skip</definition>
        <argsstring>(isize n)</argsstring>
        <name>skip</name>
        <qualifiedname>util::RingBuffer::skip</qualifiedname>
        <param>
          <type>isize</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/RingBuffer.h" line="218" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/RingBuffer.h" bodystart="218" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="structutil_1_1_ring_buffer_1a5e35a7c165ea6517101efa230e555644" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T &amp; util::RingBuffer&lt; T, capacity &gt;::current</definition>
        <argsstring>() const</argsstring>
        <name>current</name>
        <qualifiedname>util::RingBuffer::current</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/RingBuffer.h" line="228" column="13" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/RingBuffer.h" bodystart="228" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="structutil_1_1_ring_buffer_1a1abe41594ccc1e7cd6da4c95ffe9ed62" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T * util::RingBuffer&lt; T, capacity &gt;::currentAddr</definition>
        <argsstring>()</argsstring>
        <name>currentAddr</name>
        <qualifiedname>util::RingBuffer::currentAddr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/RingBuffer.h" line="233" column="7" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/RingBuffer.h" bodystart="233" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="structutil_1_1_ring_buffer_1aa7542fad796aef4ba96d0158976ef351" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T &amp; util::RingBuffer&lt; T, capacity &gt;::current</definition>
        <argsstring>(isize offset) const</argsstring>
        <name>current</name>
        <qualifiedname>util::RingBuffer::current</qualifiedname>
        <param>
          <type>isize</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/RingBuffer.h" line="238" column="13" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/RingBuffer.h" bodystart="238" bodyend="241"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structutil_1_1_ring_buffer_1a9d957449acb53b37d21ab67e605b9b7f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>isize</type>
        <definition>static isize util::RingBuffer&lt; T, capacity &gt;::next</definition>
        <argsstring>(isize i)</argsstring>
        <name>next</name>
        <qualifiedname>util::RingBuffer::next</qualifiedname>
        <param>
          <type>isize</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/RingBuffer.h" line="182" column="18" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/RingBuffer.h" bodystart="182" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="structutil_1_1_ring_buffer_1a8533323cc5ac527404d944c805cdd720" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>isize</type>
        <definition>static isize util::RingBuffer&lt; T, capacity &gt;::prev</definition>
        <argsstring>(isize i)</argsstring>
        <name>prev</name>
        <qualifiedname>util::RingBuffer::prev</qualifiedname>
        <param>
          <type>isize</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/RingBuffer.h" line="183" column="18" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/RingBuffer.h" bodystart="183" bodyend="183"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/RingBuffer.h" line="143" column="14" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/RingBuffer.h" bodystart="144" bodyend="242"/>
    <listofallmembers>
      <member refid="structutil_1_1_ring_buffer_1a6588a2ee6f1557522ba88cddfdb4f117" prot="public" virt="non-virtual"><scope>util::RingBuffer</scope><name>align</name></member>
      <member refid="structutil_1_1_ring_buffer_1ae4218ce9d24a7a0b65334c1fc4a5d30f" prot="public" virt="non-virtual"><scope>util::RingBuffer</scope><name>begin</name></member>
      <member refid="structutil_1_1_ring_buffer_1a28cfa84b405f5b9e6e84f27d822ac9db" prot="public" virt="non-virtual"><scope>util::RingBuffer</scope><name>cap</name></member>
      <member refid="structutil_1_1_ring_buffer_1a384d501cfa58cf3a8f8d8eaefa9816c1" prot="public" virt="non-virtual"><scope>util::RingBuffer</scope><name>clear</name></member>
      <member refid="structutil_1_1_ring_buffer_1a50f1798e6647745d67d9e347e381a391" prot="public" virt="non-virtual"><scope>util::RingBuffer</scope><name>clear</name></member>
      <member refid="structutil_1_1_ring_buffer_1a1899da9078d1b3053857a2f65865a7b9" prot="public" virt="non-virtual"><scope>util::RingBuffer</scope><name>count</name></member>
      <member refid="structutil_1_1_ring_buffer_1a5e35a7c165ea6517101efa230e555644" prot="public" virt="non-virtual"><scope>util::RingBuffer</scope><name>current</name></member>
      <member refid="structutil_1_1_ring_buffer_1aa7542fad796aef4ba96d0158976ef351" prot="public" virt="non-virtual"><scope>util::RingBuffer</scope><name>current</name></member>
      <member refid="structutil_1_1_ring_buffer_1a1abe41594ccc1e7cd6da4c95ffe9ed62" prot="public" virt="non-virtual"><scope>util::RingBuffer</scope><name>currentAddr</name></member>
      <member refid="structutil_1_1_ring_buffer_1a16baa00ab3229898d9e336b365c857c0" prot="public" virt="non-virtual"><scope>util::RingBuffer</scope><name>elements</name></member>
      <member refid="structutil_1_1_ring_buffer_1aeba30c8188c9a04eed4373acd72f4f0e" prot="public" virt="non-virtual"><scope>util::RingBuffer</scope><name>end</name></member>
      <member refid="structutil_1_1_ring_buffer_1a6dca7131ca271cc912c43a79476c8a14" prot="public" virt="non-virtual"><scope>util::RingBuffer</scope><name>fillLevel</name></member>
      <member refid="structutil_1_1_ring_buffer_1a66a78ac4fda05b582acabc0961a49b0b" prot="public" virt="non-virtual"><scope>util::RingBuffer</scope><name>free</name></member>
      <member refid="structutil_1_1_ring_buffer_1a6980de6f8b3779982e6a10e10e7ade72" prot="public" virt="non-virtual"><scope>util::RingBuffer</scope><name>isEmpty</name></member>
      <member refid="structutil_1_1_ring_buffer_1a238c1755b9142deb131b0c3226e98782" prot="public" virt="non-virtual"><scope>util::RingBuffer</scope><name>isFull</name></member>
      <member refid="structutil_1_1_ring_buffer_1a9d957449acb53b37d21ab67e605b9b7f" prot="public" virt="non-virtual"><scope>util::RingBuffer</scope><name>next</name></member>
      <member refid="structutil_1_1_ring_buffer_1a8533323cc5ac527404d944c805cdd720" prot="public" virt="non-virtual"><scope>util::RingBuffer</scope><name>prev</name></member>
      <member refid="structutil_1_1_ring_buffer_1af0a4ac815fd6103714fa9705a8ae9310" prot="public" virt="non-virtual"><scope>util::RingBuffer</scope><name>r</name></member>
      <member refid="structutil_1_1_ring_buffer_1aa727689dd6fed78656421be1ad3b0ebc" prot="public" virt="non-virtual"><scope>util::RingBuffer</scope><name>read</name></member>
      <member refid="structutil_1_1_ring_buffer_1a04c1fafb7e5b1a1685ef1216f8657aba" prot="public" virt="non-virtual"><scope>util::RingBuffer</scope><name>read</name></member>
      <member refid="structutil_1_1_ring_buffer_1a14a3b31e64fa0931a551917c930b17b6" prot="public" virt="non-virtual"><scope>util::RingBuffer</scope><name>RingBuffer</name></member>
      <member refid="structutil_1_1_ring_buffer_1a6f0ab86ac4a0f15d4d431189d7b6ee1b" prot="public" virt="non-virtual"><scope>util::RingBuffer</scope><name>skip</name></member>
      <member refid="structutil_1_1_ring_buffer_1a17cbf324d19b4d3f272800934309ea25" prot="public" virt="non-virtual"><scope>util::RingBuffer</scope><name>skip</name></member>
      <member refid="structutil_1_1_ring_buffer_1af5fa899dc4a119f5b0f60084c4b2112c" prot="public" virt="non-virtual"><scope>util::RingBuffer</scope><name>w</name></member>
      <member refid="structutil_1_1_ring_buffer_1a8bd34f4e8c37d24d8b11753ffa055265" prot="public" virt="non-virtual"><scope>util::RingBuffer</scope><name>write</name></member>
      <member refid="structutil_1_1_ring_buffer_1ab7dcd2d8d88887dc8ceceb0044aff0dd" prot="public" virt="non-virtual"><scope>util::RingBuffer</scope><name>~RingBuffer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
