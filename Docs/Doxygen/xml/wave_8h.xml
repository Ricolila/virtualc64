<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="wave_8h" kind="file" language="C++">
    <compoundname>wave.h</compoundname>
    <includes refid="resid-config_8h" local="yes">resid-config.h</includes>
    <includedby refid="voice_8h" local="yes">/Users/hoff/Retro/virtualc64/Emulator/Components/SID/resid/voice.h</includedby>
    <includedby refid="wave_8cc" local="yes">/Users/hoff/Retro/virtualc64/Emulator/Components/SID/resid/wave.cc</includedby>
    <incdepgraph>
      <node id="2">
        <label>resid-config.h</label>
        <link refid="resid-config_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>siddefs.h</label>
        <link refid="siddefs_8h_source"/>
      </node>
      <node id="1">
        <label>/Users/hoff/Retro/virtualc64/Emulator/Components/SID/resid/wave.h</label>
        <link refid="wave_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="7">
        <label>/Users/hoff/Retro/virtualc64/Emulator/Components/C64.h</label>
        <link refid="_c64_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>/Users/hoff/Retro/virtualc64/Emulator/Components/Emulator.h</label>
        <link refid="_emulator_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>/Users/hoff/Retro/virtualc64/Emulator/Components/SID/Muxer.h</label>
        <link refid="_muxer_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/Users/hoff/Retro/virtualc64/Emulator/Components/SID/ReSID.h</label>
        <link refid="_re_s_i_d_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>/Users/hoff/Retro/virtualc64/Emulator/Components/SID/SID.h</label>
        <link refid="sid_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/Users/hoff/Retro/virtualc64/Emulator/Components/SID/resid/sid.h</label>
        <link refid="resid_2sid_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/Users/hoff/Retro/virtualc64/Emulator/Components/SID/resid/voice.h</label>
        <link refid="voice_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/hoff/Retro/virtualc64/Emulator/Components/SID/resid/wave.h</label>
        <link refid="wave_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>/Users/hoff/Retro/virtualc64/Emulator/Headless.h</label>
        <link refid="_headless_8h_source"/>
      </node>
      <node id="9">
        <label>/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h</label>
        <link refid="_virtual_c64_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classre_s_i_d_1_1_waveform_generator" prot="public">reSID::WaveformGenerator</innerclass>
    <innernamespace refid="namespacere_s_i_d">reSID</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>reSID,<sp/>a<sp/>MOS6581<sp/>SID<sp/>emulator<sp/>engine.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(C)<sp/>2010<sp/><sp/>Dag<sp/>Lem<sp/>&lt;resid@nimrod.no&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place,<sp/>Suite<sp/>330,<sp/>Boston,<sp/>MA<sp/><sp/>02111-1307<sp/><sp/>USA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>RESID_WAVE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RESID_WAVE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;resid-config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">reSID</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>24<sp/>bit<sp/>accumulator<sp/>is<sp/>the<sp/>basis<sp/>for<sp/>waveform<sp/>generation.<sp/>FREQ<sp/>is<sp/>added<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>lower<sp/>16<sp/>bits<sp/>of<sp/>the<sp/>accumulator<sp/>each<sp/>cycle.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>accumulator<sp/>is<sp/>set<sp/>to<sp/>zero<sp/>when<sp/>TEST<sp/>is<sp/>set,<sp/>and<sp/>starts<sp/>counting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>when<sp/>TEST<sp/>is<sp/>cleared.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>noise<sp/>waveform<sp/>is<sp/>taken<sp/>from<sp/>intermediate<sp/>bits<sp/>of<sp/>a<sp/>23<sp/>bit<sp/>shift</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>register.<sp/>This<sp/>register<sp/>is<sp/>clocked<sp/>by<sp/>bit<sp/>19<sp/>of<sp/>the<sp/>accumulator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">WaveformGenerator</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>WaveformGenerator();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_sync_source(WaveformGenerator*);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_chip_model(chip_model<sp/>model);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clock();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clock(cycle_count<sp/>delta_t);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>synchronize();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writeFREQ_LO(reg8);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writeFREQ_HI(reg8);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writePW_LO(reg8);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writePW_HI(reg8);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writeCONTROL_REG(reg8);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>reg8<sp/>readOSC();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>12-bit<sp/>waveform<sp/>output.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>output();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>and<sp/>set<sp/>waveform<sp/>output<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_waveform_output();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_waveform_output(cycle_count<sp/>delta_t);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clock_shift_register();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>write_shift_register();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_noise_output();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>wave_bitfade();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>shiftreg_bitfade();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>WaveformGenerator*<sp/>sync_source;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>WaveformGenerator*<sp/>sync_dest;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>reg24<sp/>accumulator;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Tell<sp/>whether<sp/>the<sp/>accumulator<sp/>MSB<sp/>was<sp/>set<sp/>high<sp/>on<sp/>this<sp/>cycle.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>msb_rising;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Fout<sp/><sp/>=<sp/>(Fn*Fclk/16777216)Hz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reg16<sp/>freq;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>reg24<sp/>freq;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>PWout<sp/>=<sp/>(PWn/40.95)%</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>reg12<sp/>pw;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>reg24<sp/>shift_register;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Remaining<sp/>time<sp/>to<sp/>fully<sp/>reset<sp/>shift<sp/>register.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>cycle_count<sp/>shift_register_reset;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Emulation<sp/>of<sp/>pipeline<sp/>causing<sp/>bit<sp/>19<sp/>to<sp/>clock<sp/>the<sp/>shift<sp/>register.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>cycle_count<sp/>shift_pipeline;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Helper<sp/>variables<sp/>for<sp/>waveform<sp/>table<sp/>lookup.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>reg24<sp/>ring_msb_mask;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>no_noise;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>noise_output;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>no_noise_or_noise_output;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>no_pulse;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>pulse_output;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>control<sp/>register<sp/>right-shifted<sp/>4<sp/>bits;<sp/>used<sp/>for<sp/>waveform<sp/>table<sp/>lookup.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>reg8<sp/>waveform;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>8580<sp/>tri/saw<sp/>pipeline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>reg12<sp/>tri_saw_pipeline;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>reg12<sp/>osc3;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>remaining<sp/>control<sp/>register<sp/>bits.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>reg8<sp/>test;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>reg8<sp/>ring_mod;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>reg8<sp/>sync;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>gate<sp/>bit<sp/>is<sp/>handled<sp/>by<sp/>the<sp/>EnvelopeGenerator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>DAC<sp/>input.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>reg12<sp/>waveform_output;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Fading<sp/>time<sp/>for<sp/>floating<sp/>DAC<sp/>input<sp/>(waveform<sp/>0).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>cycle_count<sp/>floating_output_ttl;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>chip_model<sp/>sid_model;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Sample<sp/>data<sp/>for<sp/>waveforms,<sp/>not<sp/>including<sp/>noise.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">*<sp/>wave;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>model_wave[2][8][1<sp/>&lt;&lt;<sp/>12];</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>DAC<sp/>lookup<sp/>tables.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>model_dac[2][1<sp/>&lt;&lt;<sp/>12];</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Voice;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SID;</highlight></codeline>
<codeline lineno="127"><highlight class="normal">};</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Inline<sp/>functions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>functions<sp/>are<sp/>defined<sp/>inline<sp/>because<sp/>they<sp/>are<sp/>called<sp/>every</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">//<sp/>time<sp/>a<sp/>sample<sp/>is<sp/>calculated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RESID_INLINING<sp/>||<sp/>defined(RESID_WAVE_CC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SID<sp/>clocking<sp/>-<sp/>1<sp/>cycle.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal">RESID_INLINE</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WaveformGenerator::clock()</highlight></codeline>
<codeline lineno="143"><highlight class="normal">{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(test))<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Count<sp/>down<sp/>time<sp/>to<sp/>fully<sp/>reset<sp/>shift<sp/>register.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(shift_register_reset)<sp/>&amp;&amp;<sp/>unlikely(!--shift_register_reset))<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shiftreg_bitfade();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>test<sp/>bit<sp/>sets<sp/>pulse<sp/>high.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>pulse_output<sp/>=<sp/>0xfff;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>new<sp/>accumulator<sp/>value;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>reg24<sp/>accumulator_next<sp/>=<sp/>(accumulator<sp/>+<sp/>freq)<sp/>&amp;<sp/>0xffffff;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>reg24<sp/>accumulator_bits_set<sp/>=<sp/>~accumulator<sp/>&amp;<sp/>accumulator_next;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>accumulator<sp/>=<sp/>accumulator_next;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>whether<sp/>the<sp/>MSB<sp/>is<sp/>set<sp/>high.<sp/>This<sp/>is<sp/>used<sp/>for<sp/>synchronization.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>msb_rising<sp/>=<sp/>(accumulator_bits_set<sp/>&amp;<sp/>0x800000)<sp/>?<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>:<sp/>false;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Shift<sp/>noise<sp/>register<sp/>once<sp/>for<sp/>each<sp/>time<sp/>accumulator<sp/>bit<sp/>19<sp/>is<sp/>set<sp/>high.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>shift<sp/>is<sp/>delayed<sp/>2<sp/>cycles.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(accumulator_bits_set<sp/>&amp;<sp/>0x080000))<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pipeline:<sp/>Detect<sp/>rising<sp/>bit,<sp/>shift<sp/>phase<sp/>1,<sp/>shift<sp/>phase<sp/>2.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shift_pipeline<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(shift_pipeline)<sp/>&amp;&amp;<sp/>!--shift_pipeline)<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>clock_shift_register();</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SID<sp/>clocking<sp/>-<sp/>delta_t<sp/>cycles.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal">RESID_INLINE</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WaveformGenerator::clock(cycle_count<sp/>delta_t)</highlight></codeline>
<codeline lineno="179"><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(test))<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Count<sp/>down<sp/>time<sp/>to<sp/>fully<sp/>reset<sp/>shift<sp/>register.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shift_register_reset)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shift_register_reset<sp/>-=<sp/>delta_t;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(shift_register_reset<sp/>&lt;=<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shift_register<sp/>=<sp/>0x7fffff;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shift_register_reset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>New<sp/>noise<sp/>waveform<sp/>output.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_noise_output();</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>test<sp/>bit<sp/>sets<sp/>pulse<sp/>high.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>pulse_output<sp/>=<sp/>0xfff;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>new<sp/>accumulator<sp/>value;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>reg24<sp/>delta_accumulator<sp/>=<sp/>delta_t*freq;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>reg24<sp/>accumulator_next<sp/>=<sp/>(accumulator<sp/>+<sp/>delta_accumulator)<sp/>&amp;<sp/>0xffffff;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>reg24<sp/>accumulator_bits_set<sp/>=<sp/>~accumulator<sp/>&amp;<sp/>accumulator_next;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>accumulator<sp/>=<sp/>accumulator_next;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>whether<sp/>the<sp/>MSB<sp/>is<sp/>set<sp/>high.<sp/>This<sp/>is<sp/>used<sp/>for<sp/>synchronization.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>msb_rising<sp/>=<sp/>(accumulator_bits_set<sp/>&amp;<sp/>0x800000)<sp/>?<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>:<sp/>false;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NB!<sp/>Any<sp/>pipelined<sp/>shift<sp/>register<sp/>clocking<sp/>from<sp/>single<sp/>cycle<sp/>clocking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>will<sp/>be<sp/>lost.<sp/>It<sp/>is<sp/>not<sp/>worth<sp/>the<sp/>trouble<sp/>to<sp/>flush<sp/>the<sp/>pipeline<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Shift<sp/>noise<sp/>register<sp/>once<sp/>for<sp/>each<sp/>time<sp/>accumulator<sp/>bit<sp/>19<sp/>is<sp/>set<sp/>high.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Bit<sp/>19<sp/>is<sp/>set<sp/>high<sp/>each<sp/>time<sp/>2^20<sp/>(0x100000)<sp/>is<sp/>added<sp/>to<sp/>the<sp/>accumulator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>reg24<sp/>shift_period<sp/>=<sp/>0x100000;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(delta_accumulator)<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(delta_accumulator<sp/>&lt;<sp/>shift_period))<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shift_period<sp/>=<sp/>delta_accumulator;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Determine<sp/>whether<sp/>bit<sp/>19<sp/>is<sp/>set<sp/>on<sp/>the<sp/>last<sp/>period.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NB!<sp/>Requires<sp/>two&apos;s<sp/>complement<sp/>integer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(shift_period<sp/>&lt;=<sp/>0x080000))<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>flip<sp/>from<sp/>0<sp/>to<sp/>1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((accumulator<sp/>-<sp/>shift_period)<sp/>&amp;<sp/>0x080000)<sp/>||<sp/>!(accumulator<sp/>&amp;<sp/>0x080000))</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>flip<sp/>from<sp/>0<sp/>(to<sp/>1<sp/>or<sp/>via<sp/>1<sp/>to<sp/>0)<sp/>or<sp/>from<sp/>1<sp/>via<sp/>0<sp/>to<sp/>1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((accumulator<sp/>-<sp/>shift_period)<sp/>&amp;<sp/>0x080000)<sp/>&amp;&amp;<sp/>!(accumulator<sp/>&amp;<sp/>0x080000))</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Shift<sp/>the<sp/>noise/random<sp/>register.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NB!<sp/>The<sp/>two-cycle<sp/>pipeline<sp/>delay<sp/>is<sp/>only<sp/>modeled<sp/>for<sp/>1<sp/>cycle<sp/>clocking.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>clock_shift_register();</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>delta_accumulator<sp/>-=<sp/>shift_period;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>pulse<sp/>high/low.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NB!<sp/>The<sp/>one-cycle<sp/>pipeline<sp/>delay<sp/>is<sp/>only<sp/>modeled<sp/>for<sp/>1<sp/>cycle<sp/>clocking.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>pulse_output<sp/>=<sp/>(accumulator<sp/>&gt;&gt;<sp/>12)<sp/>&gt;=<sp/>pw<sp/>?<sp/>0xfff<sp/>:<sp/>0x000;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal">}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Synchronize<sp/>oscillators.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>must<sp/>be<sp/>done<sp/>after<sp/>all<sp/>the<sp/>oscillators<sp/>have<sp/>been<sp/>clock()&apos;ed<sp/>since<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="comment">//<sp/>oscillators<sp/>operate<sp/>in<sp/>parallel.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>the<sp/>oscillators<sp/>must<sp/>be<sp/>clocked<sp/>exactly<sp/>on<sp/>the<sp/>cycle<sp/>when<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MSB<sp/>is<sp/>set<sp/>high<sp/>for<sp/>hard<sp/>sync<sp/>to<sp/>operate<sp/>correctly.<sp/>See<sp/>SID::clock().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal">RESID_INLINE</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WaveformGenerator::synchronize()</highlight></codeline>
<codeline lineno="257"><highlight class="normal">{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>special<sp/>case<sp/>occurs<sp/>when<sp/>a<sp/>sync<sp/>source<sp/>is<sp/>synced<sp/>itself<sp/>on<sp/>the<sp/>same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>cycle<sp/>as<sp/>when<sp/>its<sp/>MSB<sp/>is<sp/>set<sp/>high.<sp/>In<sp/>this<sp/>case<sp/>the<sp/>destination<sp/>will</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>be<sp/>synced.<sp/>This<sp/>has<sp/>been<sp/>verified<sp/>by<sp/>sampling<sp/>OSC3.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(msb_rising)<sp/>&amp;&amp;<sp/>sync_dest-&gt;sync<sp/>&amp;&amp;<sp/>!(sync<sp/>&amp;&amp;<sp/>sync_source-&gt;msb_rising))<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>sync_dest-&gt;accumulator<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal">}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Waveform<sp/>output.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>output<sp/>from<sp/>SID<sp/>8580<sp/>is<sp/>delayed<sp/>one<sp/>cycle<sp/>compared<sp/>to<sp/>SID<sp/>6581;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>only<sp/>modeled<sp/>for<sp/>single<sp/>cycle<sp/>clocking<sp/>(see<sp/>sid.cc).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="comment">//<sp/>No<sp/>waveform:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>no<sp/>waveform<sp/>is<sp/>selected,<sp/>the<sp/>DAC<sp/>input<sp/>is<sp/>floating.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Triangle:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>upper<sp/>12<sp/>bits<sp/>of<sp/>the<sp/>accumulator<sp/>are<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>MSB<sp/>is<sp/>used<sp/>to<sp/>create<sp/>the<sp/>falling<sp/>edge<sp/>of<sp/>the<sp/>triangle<sp/>by<sp/>inverting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>lower<sp/>11<sp/>bits.<sp/>The<sp/>MSB<sp/>is<sp/>thrown<sp/>away<sp/>and<sp/>the<sp/>lower<sp/>11<sp/>bits<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="comment">//<sp/>left-shifted<sp/>(half<sp/>the<sp/>resolution,<sp/>full<sp/>amplitude).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Ring<sp/>modulation<sp/>substitutes<sp/>the<sp/>MSB<sp/>with<sp/>MSB<sp/>EOR<sp/>NOT<sp/>sync_source<sp/>MSB.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sawtooth:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>output<sp/>is<sp/>identical<sp/>to<sp/>the<sp/>upper<sp/>12<sp/>bits<sp/>of<sp/>the<sp/>accumulator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Pulse:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>upper<sp/>12<sp/>bits<sp/>of<sp/>the<sp/>accumulator<sp/>are<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="comment">//<sp/>These<sp/>bits<sp/>are<sp/>compared<sp/>to<sp/>the<sp/>pulse<sp/>width<sp/>register<sp/>by<sp/>a<sp/>12<sp/>bit<sp/>digital</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="comment">//<sp/>comparator;<sp/>output<sp/>is<sp/>either<sp/>all<sp/>one<sp/>or<sp/>all<sp/>zero<sp/>bits.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>pulse<sp/>setting<sp/>is<sp/>delayed<sp/>one<sp/>cycle<sp/>after<sp/>the<sp/>compare;<sp/>this<sp/>is<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="comment">//<sp/>modeled<sp/>for<sp/>single<sp/>cycle<sp/>clocking.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>test<sp/>bit,<sp/>when<sp/>set<sp/>to<sp/>one,<sp/>holds<sp/>the<sp/>pulse<sp/>waveform<sp/>output<sp/>at<sp/>0xfff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="comment">//<sp/>regardless<sp/>of<sp/>the<sp/>pulse<sp/>width<sp/>setting.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Noise:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>noise<sp/>output<sp/>is<sp/>taken<sp/>from<sp/>intermediate<sp/>bits<sp/>of<sp/>a<sp/>23-bit<sp/>shift<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="comment">//<sp/>which<sp/>is<sp/>clocked<sp/>by<sp/>bit<sp/>19<sp/>of<sp/>the<sp/>accumulator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>shift<sp/>is<sp/>delayed<sp/>2<sp/>cycles<sp/>after<sp/>bit<sp/>19<sp/>is<sp/>set<sp/>high;<sp/>this<sp/>is<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="comment">//<sp/>modeled<sp/>for<sp/>single<sp/>cycle<sp/>clocking.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Operation:<sp/>Calculate<sp/>EOR<sp/>result,<sp/>shift<sp/>register,<sp/>set<sp/>bit<sp/>0<sp/>=<sp/>result.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reset<sp/><sp/><sp/><sp/>-------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test--OR--&gt;EOR&lt;--<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/>2<sp/>2<sp/>1<sp/>1<sp/>1<sp/>1<sp/>1<sp/>1<sp/>1<sp/>1<sp/>1<sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Register<sp/>bits:<sp/><sp/><sp/>2<sp/>1<sp/>0<sp/>9<sp/>8<sp/>7<sp/>6<sp/>5<sp/>4<sp/>3<sp/>2<sp/>1<sp/>0<sp/>9<sp/>8<sp/>7<sp/>6<sp/>5<sp/>4<sp/>3<sp/>2<sp/>1<sp/>0<sp/>&lt;---</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Waveform<sp/>bits:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/>9<sp/><sp/><sp/><sp/><sp/>8<sp/><sp/><sp/>7<sp/><sp/><sp/><sp/><sp/><sp/><sp/>6<sp/><sp/><sp/><sp/><sp/>5<sp/><sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>low<sp/>4<sp/>waveform<sp/>bits<sp/>are<sp/>zero<sp/>(grounded).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal">RESID_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WaveformGenerator::clock_shift_register()</highlight></codeline>
<codeline lineno="322"><highlight class="normal">{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>bit0<sp/>=<sp/>(bit22<sp/>|<sp/>test)<sp/>^<sp/>bit17</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>reg24<sp/>bit0<sp/>=<sp/>((shift_register<sp/>&gt;&gt;<sp/>22)<sp/>^<sp/>(shift_register<sp/>&gt;&gt;<sp/>17))<sp/>&amp;<sp/>0x1;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>shift_register<sp/>=<sp/>((shift_register<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>bit0)<sp/>&amp;<sp/>0x7fffff;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>New<sp/>noise<sp/>waveform<sp/>output.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>set_noise_output();</highlight></codeline>
<codeline lineno="329"><highlight class="normal">}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal">RESID_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WaveformGenerator::write_shift_register()</highlight></codeline>
<codeline lineno="332"><highlight class="normal">{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>changes<sp/>to<sp/>the<sp/>shift<sp/>register<sp/>output<sp/>caused<sp/>by<sp/>combined<sp/>waveforms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>back<sp/>into<sp/>the<sp/>shift<sp/>register.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>bit<sp/>once<sp/>set<sp/>to<sp/>zero<sp/>cannot<sp/>be<sp/>changed,<sp/>hence<sp/>the<sp/>and&apos;ing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>Write<sp/>test<sp/>program<sp/>to<sp/>check<sp/>the<sp/>effect<sp/>of<sp/>1<sp/>bits<sp/>and<sp/>whether</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>neighboring<sp/>bits<sp/>are<sp/>affected.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>shift_register<sp/>&amp;=</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>~((1&lt;&lt;20)|(1&lt;&lt;18)|(1&lt;&lt;14)|(1&lt;&lt;11)|(1&lt;&lt;9)|(1&lt;&lt;5)|(1&lt;&lt;2)|(1&lt;&lt;0))<sp/>|</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>((waveform_output<sp/>&amp;<sp/>0x800)<sp/>&lt;&lt;<sp/>9)<sp/>|<sp/><sp/></highlight><highlight class="comment">//<sp/>Bit<sp/>11<sp/>-&gt;<sp/>bit<sp/>20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>((waveform_output<sp/>&amp;<sp/>0x400)<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/><sp/></highlight><highlight class="comment">//<sp/>Bit<sp/>10<sp/>-&gt;<sp/>bit<sp/>18</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>((waveform_output<sp/>&amp;<sp/>0x200)<sp/>&lt;&lt;<sp/>5)<sp/>|<sp/><sp/></highlight><highlight class="comment">//<sp/>Bit<sp/><sp/>9<sp/>-&gt;<sp/>bit<sp/>14</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>((waveform_output<sp/>&amp;<sp/>0x100)<sp/>&lt;&lt;<sp/>3)<sp/>|<sp/><sp/></highlight><highlight class="comment">//<sp/>Bit<sp/><sp/>8<sp/>-&gt;<sp/>bit<sp/>11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>((waveform_output<sp/>&amp;<sp/>0x080)<sp/>&lt;&lt;<sp/>2)<sp/>|<sp/><sp/></highlight><highlight class="comment">//<sp/>Bit<sp/><sp/>7<sp/>-&gt;<sp/>bit<sp/><sp/>9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>((waveform_output<sp/>&amp;<sp/>0x040)<sp/>&gt;&gt;<sp/>1)<sp/>|<sp/><sp/></highlight><highlight class="comment">//<sp/>Bit<sp/><sp/>6<sp/>-&gt;<sp/>bit<sp/><sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>((waveform_output<sp/>&amp;<sp/>0x020)<sp/>&gt;&gt;<sp/>3)<sp/>|<sp/><sp/></highlight><highlight class="comment">//<sp/>Bit<sp/><sp/>5<sp/>-&gt;<sp/>bit<sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>((waveform_output<sp/>&amp;<sp/>0x010)<sp/>&gt;&gt;<sp/>4);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Bit<sp/><sp/>4<sp/>-&gt;<sp/>bit<sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/>noise_output<sp/>&amp;=<sp/>waveform_output;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/>no_noise_or_noise_output<sp/>=<sp/>no_noise<sp/>|<sp/>noise_output;</highlight></codeline>
<codeline lineno="352"><highlight class="normal">}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal">RESID_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WaveformGenerator::set_noise_output()</highlight></codeline>
<codeline lineno="355"><highlight class="normal">{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>noise_output<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>short)(((shift_register<sp/>&amp;<sp/>0x100000)<sp/>&gt;&gt;<sp/>9)<sp/>|</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((shift_register<sp/>&amp;<sp/>0x040000)<sp/>&gt;&gt;<sp/>8)<sp/>|</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((shift_register<sp/>&amp;<sp/>0x004000)<sp/>&gt;&gt;<sp/>5)<sp/>|</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((shift_register<sp/>&amp;<sp/>0x000800)<sp/>&gt;&gt;<sp/>3)<sp/>|</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((shift_register<sp/>&amp;<sp/>0x000200)<sp/>&gt;&gt;<sp/>2)<sp/>|</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((shift_register<sp/>&amp;<sp/>0x000020)<sp/>&lt;&lt;<sp/>1)<sp/>|</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((shift_register<sp/>&amp;<sp/>0x000004)<sp/>&lt;&lt;<sp/>3)<sp/>|</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((shift_register<sp/>&amp;<sp/>0x000001)<sp/>&lt;&lt;<sp/>4)<sp/>);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>no_noise_or_noise_output<sp/>=<sp/>no_noise<sp/>|<sp/>noise_output;</highlight></codeline>
<codeline lineno="366"><highlight class="normal">}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Combined<sp/>waveforms:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="comment">//<sp/>By<sp/>combining<sp/>waveforms,<sp/>the<sp/>bits<sp/>of<sp/>each<sp/>waveform<sp/>are<sp/>effectively<sp/>short</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="comment">//<sp/>circuited.<sp/>A<sp/>zero<sp/>bit<sp/>in<sp/>one<sp/>waveform<sp/>will<sp/>result<sp/>in<sp/>a<sp/>zero<sp/>output<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(thus<sp/>the<sp/>infamous<sp/>claim<sp/>that<sp/>the<sp/>waveforms<sp/>are<sp/>AND&apos;ed).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="comment">//<sp/>However,<sp/>a<sp/>zero<sp/>bit<sp/>in<sp/>one<sp/>waveform<sp/>may<sp/>also<sp/>affect<sp/>the<sp/>neighboring<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>output.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Example:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Bit<sp/>#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/>0<sp/>9<sp/>8<sp/>7<sp/>6<sp/>5<sp/>4<sp/>3<sp/>2<sp/>1<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-----------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sawtooth<sp/><sp/><sp/><sp/>0<sp/>0<sp/>0<sp/>1<sp/>1<sp/>1<sp/>1<sp/>1<sp/>1<sp/>0<sp/>0<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Triangle<sp/><sp/><sp/><sp/>0<sp/>0<sp/>1<sp/>1<sp/>1<sp/>1<sp/>1<sp/>1<sp/>0<sp/>0<sp/>0<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="comment">//<sp/>AND<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>0<sp/>0<sp/>1<sp/>1<sp/>1<sp/>1<sp/>1<sp/>0<sp/>0<sp/>0<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Output<sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>0<sp/>0<sp/>0<sp/>1<sp/>1<sp/>1<sp/>0<sp/>0<sp/>0<sp/>0<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Re-vectorized<sp/>die<sp/>photographs<sp/>reveal<sp/>the<sp/>mechanism<sp/>behind<sp/>this<sp/>behavior.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Each<sp/>waveform<sp/>selector<sp/>bit<sp/>acts<sp/>as<sp/>a<sp/>switch,<sp/>which<sp/>directly<sp/>connects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="comment">//<sp/>internal<sp/>outputs<sp/>into<sp/>the<sp/>waveform<sp/>DAC<sp/>inputs<sp/>as<sp/>follows:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>Noise<sp/>outputs<sp/>the<sp/>shift<sp/>register<sp/>bits<sp/>to<sp/>DAC<sp/>inputs<sp/>as<sp/>described<sp/>above.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Each<sp/>output<sp/>is<sp/>also<sp/>used<sp/>as<sp/>input<sp/>to<sp/>the<sp/>next<sp/>bit<sp/>when<sp/>the<sp/>shift<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>is<sp/>shifted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>Pulse<sp/>connects<sp/>a<sp/>single<sp/>line<sp/>to<sp/>all<sp/>DAC<sp/>inputs.<sp/>The<sp/>line<sp/>is<sp/>connected<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>either<sp/>5V<sp/>(pulse<sp/>on)<sp/>or<sp/>0V<sp/>(pulse<sp/>off)<sp/>at<sp/>bit<sp/>11,<sp/>and<sp/>ends<sp/>at<sp/>bit<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>Triangle<sp/>connects<sp/>the<sp/>upper<sp/>11<sp/>bits<sp/>of<sp/>the<sp/>(MSB<sp/>EOR&apos;ed)<sp/>accumulator<sp/>to<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>DAC<sp/>inputs,<sp/>so<sp/>that<sp/>DAC<sp/>bit<sp/>0<sp/>=<sp/>0,<sp/>DAC<sp/>bit<sp/>n<sp/>=<sp/>accumulator<sp/>bit<sp/>n<sp/>-<sp/>1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>Sawtooth<sp/>connects<sp/>the<sp/>upper<sp/>12<sp/>bits<sp/>of<sp/>the<sp/>accumulator<sp/>to<sp/>the<sp/>DAC<sp/>inputs,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>so<sp/>that<sp/>DAC<sp/>bit<sp/>n<sp/>=<sp/>accumulator<sp/>bit<sp/>n.<sp/>Sawtooth<sp/>blocks<sp/>out<sp/>the<sp/>MSB<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>the<sp/>EOR<sp/>used<sp/>to<sp/>generate<sp/>the<sp/>triangle<sp/>waveform.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>thus<sp/>draw<sp/>the<sp/>following<sp/>conclusions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>The<sp/>shift<sp/>register<sp/>may<sp/>be<sp/>written<sp/>to<sp/>by<sp/>combined<sp/>waveforms.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>The<sp/>pulse<sp/>waveform<sp/>interconnects<sp/>all<sp/>bits<sp/>in<sp/>combined<sp/>waveforms<sp/>via<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>pulse<sp/>line.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>The<sp/>combination<sp/>of<sp/>triangle<sp/>and<sp/>sawtooth<sp/>interconnects<sp/>neighboring<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>of<sp/>the<sp/>sawtooth<sp/>waveform.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>behavior<sp/>would<sp/>be<sp/>quite<sp/>difficult<sp/>to<sp/>model<sp/>exactly,<sp/>since<sp/>the<sp/>short</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="comment">//<sp/>circuits<sp/>are<sp/>not<sp/>binary,<sp/>but<sp/>are<sp/>subject<sp/>to<sp/>analog<sp/>effects.<sp/>Tests<sp/>show<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="comment">//<sp/>minor<sp/>(1<sp/>bit)<sp/>differences<sp/>can<sp/>actually<sp/>occur<sp/>in<sp/>the<sp/>output<sp/>from<sp/>otherwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="comment">//<sp/>identical<sp/>samples<sp/>from<sp/>OSC3<sp/>when<sp/>waveforms<sp/>are<sp/>combined.<sp/>To<sp/>further</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="comment">//<sp/>complicate<sp/>the<sp/>situation<sp/>the<sp/>output<sp/>changes<sp/>slightly<sp/>with<sp/>time<sp/>(more</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="comment">//<sp/>neighboring<sp/>bits<sp/>are<sp/>successively<sp/>set)<sp/>when<sp/>the<sp/>12-bit<sp/>waveform</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="comment">//<sp/>registers<sp/>are<sp/>kept<sp/>unchanged.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>output<sp/>is<sp/>instead<sp/>approximated<sp/>by<sp/>using<sp/>the<sp/>upper<sp/>bits<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="comment">//<sp/>accumulator<sp/>as<sp/>an<sp/>index<sp/>to<sp/>look<sp/>up<sp/>the<sp/>combined<sp/>output<sp/>in<sp/>a<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="comment">//<sp/>containing<sp/>actual<sp/>combined<sp/>waveform<sp/>samples<sp/>from<sp/>OSC3.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="comment">//<sp/>These<sp/>samples<sp/>are<sp/>8<sp/>bit,<sp/>so<sp/>4<sp/>bits<sp/>of<sp/>waveform<sp/>resolution<sp/>is<sp/>lost.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>OSC3<sp/>samples<sp/>are<sp/>taken<sp/>with<sp/>FREQ=0x1000,<sp/>adding<sp/>a<sp/>1<sp/>to<sp/>the<sp/>upper<sp/>12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="comment">//<sp/>bits<sp/>of<sp/>the<sp/>accumulator<sp/>each<sp/>cycle<sp/>for<sp/>a<sp/>sample<sp/>period<sp/>of<sp/>4096<sp/>cycles.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sawtooth+Triangle:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>accumulator<sp/>is<sp/>used<sp/>to<sp/>look<sp/>up<sp/>an<sp/>OSC3<sp/>sample.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Pulse+Triangle:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>accumulator<sp/>is<sp/>used<sp/>to<sp/>look<sp/>up<sp/>an<sp/>OSC3<sp/>sample.<sp/>When<sp/>ring<sp/>modulation<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="comment">//<sp/>selected,<sp/>the<sp/>accumulator<sp/>MSB<sp/>is<sp/>substituted<sp/>with<sp/>MSB<sp/>EOR<sp/>NOT<sp/>sync_source<sp/>MSB.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Pulse+Sawtooth:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>accumulator<sp/>is<sp/>used<sp/>to<sp/>look<sp/>up<sp/>an<sp/>OSC3<sp/>sample.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>sample<sp/>is<sp/>output<sp/>if<sp/>the<sp/>pulse<sp/>output<sp/>is<sp/>on.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Pulse+Sawtooth+Triangle:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>accumulator<sp/>is<sp/>used<sp/>to<sp/>look<sp/>up<sp/>an<sp/>OSC3<sp/>sample.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>sample<sp/>is<sp/>output<sp/>if<sp/>the<sp/>pulse<sp/>output<sp/>is<sp/>on.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Combined<sp/>waveforms<sp/>including<sp/>noise:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>waveform<sp/>combinations<sp/>including<sp/>noise<sp/>output<sp/>zero<sp/>after<sp/>a<sp/>few<sp/>cycles,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="comment">//<sp/>since<sp/>the<sp/>waveform<sp/>bits<sp/>are<sp/>and&apos;ed<sp/>into<sp/>the<sp/>shift<sp/>register<sp/>via<sp/>the<sp/>shift</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="comment">//<sp/>register<sp/>outputs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>reg12<sp/>noise_pulse6581(reg12<sp/>noise)</highlight></codeline>
<codeline lineno="448"><highlight class="normal">{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(noise<sp/>&lt;<sp/>0xf00)<sp/>?<sp/>0x000<sp/>:<sp/>noise<sp/>&amp;<sp/>(noise&lt;&lt;1)<sp/>&amp;<sp/>(noise&lt;&lt;2);</highlight></codeline>
<codeline lineno="450"><highlight class="normal">}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>reg12<sp/>noise_pulse8580(reg12<sp/>noise)</highlight></codeline>
<codeline lineno="453"><highlight class="normal">{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(noise<sp/>&lt;<sp/>0xfc0)<sp/>?<sp/>noise<sp/>&amp;<sp/>(noise<sp/>&lt;&lt;<sp/>1)<sp/>:<sp/>0xfc0;</highlight></codeline>
<codeline lineno="455"><highlight class="normal">}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal">RESID_INLINE</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WaveformGenerator::set_waveform_output()</highlight></codeline>
<codeline lineno="459"><highlight class="normal">{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>output<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(waveform))<sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>bit<sp/>masks<sp/>no_pulse<sp/>and<sp/>no_noise<sp/>are<sp/>used<sp/>to<sp/>achieve<sp/>branch-free</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculation<sp/>of<sp/>the<sp/>output<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ix<sp/>=<sp/>(accumulator<sp/>^<sp/>(~sync_source-&gt;accumulator<sp/>&amp;<sp/>ring_msb_mask))<sp/>&gt;&gt;<sp/>12;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>waveform_output<sp/>=<sp/>wave[ix]<sp/>&amp;<sp/>(no_pulse<sp/>|<sp/>pulse_output)<sp/>&amp;<sp/>no_noise_or_noise_output;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely((waveform<sp/>&amp;<sp/>0xc)<sp/>==<sp/>0xc))</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>waveform_output<sp/>=<sp/>(sid_model<sp/>==<sp/>MOS6581)<sp/>?</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noise_pulse6581(waveform_output)<sp/>:<sp/>noise_pulse8580(waveform_output);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Triangle/Sawtooth<sp/>output<sp/>is<sp/>delayed<sp/>half<sp/>cycle<sp/>on<sp/>8580.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>will<sp/>appear<sp/>as<sp/>a<sp/>one<sp/>cycle<sp/>delay<sp/>on<sp/>OSC3<sp/>as<sp/>it<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>latched<sp/>in<sp/>the<sp/>first<sp/>phase<sp/>of<sp/>the<sp/>clock.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((waveform<sp/>&amp;<sp/>3)<sp/>&amp;&amp;<sp/>(sid_model<sp/>==<sp/>MOS8580))</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>osc3<sp/>=<sp/>tri_saw_pipeline<sp/>&amp;<sp/>(no_pulse<sp/>|<sp/>pulse_output)<sp/>&amp;<sp/>no_noise_or_noise_output;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tri_saw_pipeline<sp/>=<sp/>wave[ix];</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>osc3<sp/>=<sp/>waveform_output;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((waveform<sp/>&amp;<sp/>0x2)<sp/>&amp;&amp;<sp/>unlikely(waveform<sp/>&amp;<sp/>0xd)<sp/>&amp;&amp;<sp/>(sid_model<sp/>==<sp/>MOS6581))<sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>the<sp/>6581<sp/>the<sp/>top<sp/>bit<sp/>of<sp/>the<sp/>accumulator<sp/>may<sp/>be<sp/>driven<sp/>low<sp/>by<sp/>combined<sp/>waveforms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>the<sp/>sawtooth<sp/>is<sp/>selected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accumulator<sp/>&amp;=<sp/>(waveform_output<sp/>&lt;&lt;<sp/>12)<sp/>|<sp/>0x7fffff;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(waveform<sp/>&gt;<sp/>0x8)<sp/>&amp;&amp;<sp/>likely(!test)<sp/>&amp;&amp;<sp/>likely(shift_pipeline<sp/>!=<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Combined<sp/>waveforms<sp/>write<sp/>to<sp/>the<sp/>shift<sp/>register.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>write_shift_register();</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Age<sp/>floating<sp/>DAC<sp/>input.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(floating_output_ttl)<sp/>&amp;&amp;<sp/>unlikely(!--floating_output_ttl))<sp/>{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wave_bitfade();</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>pulse<sp/>level<sp/>is<sp/>defined<sp/>as<sp/>(accumulator<sp/>&gt;&gt;<sp/>12)<sp/>&gt;=<sp/>pw<sp/>?<sp/>0xfff<sp/>:<sp/>0x000.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>expression<sp/>-((accumulator<sp/>&gt;&gt;<sp/>12)<sp/>&gt;=<sp/>pw)<sp/>&amp;<sp/>0xfff<sp/>yields<sp/>the<sp/>same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>results<sp/>without<sp/>any<sp/>branching<sp/>(and<sp/>thus<sp/>without<sp/>any<sp/>pipeline<sp/>stalls).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>NB!<sp/>This<sp/>expression<sp/>relies<sp/>on<sp/>that<sp/>the<sp/>result<sp/>of<sp/>a<sp/>boolean<sp/>expression</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>either<sp/>0<sp/>or<sp/>1,<sp/>and<sp/>furthermore<sp/>requires<sp/>two&apos;s<sp/>complement<sp/>integer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>few<sp/>more<sp/>cycles<sp/>may<sp/>be<sp/>saved<sp/>by<sp/>storing<sp/>the<sp/>pulse<sp/>width<sp/>left<sp/>shifted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>12<sp/>bits,<sp/>and<sp/>dropping<sp/>the<sp/>and<sp/>with<sp/>0xfff<sp/>(this<sp/>is<sp/>valid<sp/>since<sp/>pulse<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>used<sp/>as<sp/>a<sp/>bit<sp/>mask<sp/>on<sp/>12<sp/>bit<sp/>values),<sp/>yielding<sp/>the<sp/>expression</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-(accumulator<sp/>&gt;=<sp/>pw24).<sp/>However<sp/>this<sp/>only<sp/>results<sp/>in<sp/>negligible<sp/>savings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>result<sp/>of<sp/>the<sp/>pulse<sp/>width<sp/>compare<sp/>is<sp/>delayed<sp/>one<sp/>cycle.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Push<sp/>next<sp/>pulse<sp/>level<sp/>into<sp/>pulse<sp/>level<sp/>pipeline.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/>pulse_output<sp/>=<sp/>-((accumulator<sp/>&gt;&gt;<sp/>12)<sp/>&gt;=<sp/>pw)<sp/>&amp;<sp/>0xfff;</highlight></codeline>
<codeline lineno="518"><highlight class="normal">}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal">RESID_INLINE</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WaveformGenerator::set_waveform_output(cycle_count<sp/>delta_t)</highlight></codeline>
<codeline lineno="522"><highlight class="normal">{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>output<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(waveform))<sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>bit<sp/>masks<sp/>no_pulse<sp/>and<sp/>no_noise<sp/>are<sp/>used<sp/>to<sp/>achieve<sp/>branch-free</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculation<sp/>of<sp/>the<sp/>output<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ix<sp/>=<sp/>(accumulator<sp/>^<sp/>(~sync_source-&gt;accumulator<sp/>&amp;<sp/>ring_msb_mask))<sp/>&gt;&gt;<sp/>12;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>waveform_output<sp/>=</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wave[ix]<sp/>&amp;<sp/>(no_pulse<sp/>|<sp/>pulse_output)<sp/>&amp;<sp/>no_noise_or_noise_output;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Triangle/Sawtooth<sp/>output<sp/>delay<sp/>for<sp/>the<sp/>8580<sp/>is<sp/>not<sp/>modeled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>osc3<sp/>=<sp/>waveform_output;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((waveform<sp/>&amp;<sp/>0x2)<sp/>&amp;&amp;<sp/>unlikely(waveform<sp/>&amp;<sp/>0xd)<sp/>&amp;&amp;<sp/>(sid_model<sp/>==<sp/>MOS6581))<sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accumulator<sp/>&amp;=<sp/>(waveform_output<sp/>&lt;&lt;<sp/>12)<sp/>|<sp/>0x7fffff;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(waveform<sp/>&gt;<sp/>0x8)<sp/>&amp;&amp;<sp/>likely(!test))<sp/>{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Combined<sp/>waveforms<sp/>write<sp/>to<sp/>the<sp/>shift<sp/>register.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NB!<sp/>Since<sp/>cycles<sp/>are<sp/>skipped<sp/>in<sp/>delta_t<sp/>clocking,<sp/>writes<sp/>will<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>missed.<sp/>Single<sp/>cycle<sp/>clocking<sp/>must<sp/>be<sp/>used<sp/>for<sp/>100%<sp/>correct<sp/>operation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>write_shift_register();</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(likely(floating_output_ttl))<sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Age<sp/>floating<sp/>D/A<sp/>output.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>floating_output_ttl<sp/>-=<sp/>delta_t;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlikely(floating_output_ttl<sp/>&lt;=<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>floating_output_ttl<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>osc3<sp/>=<sp/>waveform_output<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="554"><highlight class="normal">}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Waveform<sp/>output<sp/>(12<sp/>bits).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>digital<sp/>waveform<sp/>output<sp/>is<sp/>converted<sp/>to<sp/>an<sp/>analog<sp/>signal<sp/>by<sp/>a<sp/>12-bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DAC.<sp/>Re-vectorized<sp/>die<sp/>photographs<sp/>reveal<sp/>that<sp/>the<sp/>DAC<sp/>is<sp/>an<sp/>R-2R<sp/>ladder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="comment">//<sp/>built<sp/>up<sp/>as<sp/>follows:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>12V<sp/><sp/><sp/><sp/><sp/>11<sp/><sp/>10<sp/><sp/><sp/>9<sp/><sp/><sp/>8<sp/><sp/><sp/>7<sp/><sp/><sp/>6<sp/><sp/><sp/>5<sp/><sp/><sp/>4<sp/><sp/><sp/>3<sp/><sp/><sp/>2<sp/><sp/><sp/>1<sp/><sp/><sp/>0<sp/><sp/><sp/><sp/>GND</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Strange<sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>|<sp/><sp/><sp/>|<sp/><sp/><sp/>|<sp/><sp/><sp/>|<sp/><sp/><sp/>|<sp/><sp/><sp/>|<sp/><sp/><sp/>|<sp/><sp/><sp/>|<sp/><sp/><sp/>|<sp/><sp/><sp/>|<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>Missing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight><highlight class="comment">//<sp/>part<sp/><sp/><sp/><sp/>2R<sp/><sp/><sp/><sp/><sp/>2R<sp/><sp/>2R<sp/><sp/>2R<sp/><sp/>2R<sp/><sp/>2R<sp/><sp/>2R<sp/><sp/>2R<sp/><sp/>2R<sp/><sp/>2R<sp/><sp/>2R<sp/><sp/>2R<sp/><sp/>2R<sp/><sp/><sp/><sp/>2R<sp/><sp/>term.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(bias)<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>|<sp/><sp/><sp/>|<sp/><sp/><sp/>|<sp/><sp/><sp/>|<sp/><sp/><sp/>|<sp/><sp/><sp/>|<sp/><sp/><sp/>|<sp/><sp/><sp/>|<sp/><sp/><sp/>|<sp/><sp/><sp/>|<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--R-<sp/><sp/><sp/>--R---R---R---R---R---R---R---R---R---R---R--<sp/><sp/><sp/>---</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_____</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__|__<sp/><sp/><sp/><sp/><sp/>__|__<sp/><sp/><sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-----<sp/><sp/><sp/><sp/><sp/>=====<sp/><sp/><sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>|<sp/><sp/><sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>12V<sp/>---<sp/><sp/><sp/><sp/><sp/>-----<sp/><sp/><sp/><sp/><sp/>-------<sp/>GND</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Bit<sp/>on:<sp/><sp/>5V</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Bit<sp/>off:<sp/>0V<sp/>(GND)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight><highlight class="comment">//<sp/>As<sp/>is<sp/>the<sp/>case<sp/>with<sp/>all<sp/>MOS<sp/>6581<sp/>DACs,<sp/>the<sp/>termination<sp/>to<sp/>(virtual)<sp/>ground</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight><highlight class="comment">//<sp/>at<sp/>bit<sp/>0<sp/>is<sp/>missing.<sp/>The<sp/>MOS<sp/>8580<sp/>has<sp/>correct<sp/>termination,<sp/>and<sp/>has<sp/>also</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight><highlight class="comment">//<sp/>done<sp/>away<sp/>with<sp/>the<sp/>bias<sp/>part<sp/>on<sp/>the<sp/>left<sp/>hand<sp/>side<sp/>of<sp/>the<sp/>figure<sp/>above.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal">RESID_INLINE</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>WaveformGenerator::output()</highlight></codeline>
<codeline lineno="588"><highlight class="normal">{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>DAC<sp/>imperfections<sp/>are<sp/>emulated<sp/>by<sp/>using<sp/>waveform_output<sp/>as<sp/>an<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>into<sp/>a<sp/>DAC<sp/>lookup<sp/>table.<sp/>readOSC()<sp/>uses<sp/>waveform_output<sp/>directly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>model_dac[sid_model][waveform_output];</highlight></codeline>
<codeline lineno="592"><highlight class="normal">}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>RESID_INLINING<sp/>||<sp/>defined(RESID_WAVE_CC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>reSID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>not<sp/>RESID_WAVE_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/hoff/Retro/virtualc64/Emulator/Components/SID/resid/wave.h"/>
  </compounddef>
</doxygen>
