<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="_disk_8cpp" kind="file" language="C++">
    <compoundname>Disk.cpp</compoundname>
    <includes refid="config_8h" local="yes">config.h</includes>
    <includes refid="_c64_8h" local="yes">C64.h</includes>
    <includes refid="_i_o_utils_8h" local="yes">IOUtils.h</includes>
    <includes refid="_checksum_8h" local="yes">Checksum.h</includes>
    <includes local="no">stdarg.h</includes>
    <incdepgraph>
      <node id="6">
        <label>Aliases.h</label>
        <link refid="_aliases_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>CmdQueue.h</label>
        <link refid="_cmd_queue_8h"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>CmdQueueTypes.h</label>
        <link refid="_cmd_queue_types_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="92">
        <label>Colors.h</label>
        <link refid="_colors_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>Configurable.h</label>
        <link refid="_configurable_8h_source"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="93">
        <label>Constants.h</label>
        <link refid="_constants_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>CoreComponent.h</label>
        <link refid="_core_component_8h_source"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>CoreObject.h</label>
        <link refid="_core_object_8h_source"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>Defaults.h</label>
        <link refid="_defaults_8h_source"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>Error.h</label>
        <link refid="_error_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>ErrorTypes.h</label>
        <link refid="_error_types_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>Inspectable.h</label>
        <link refid="_inspectable_8h_source"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>MsgQueue.h</label>
        <link refid="_msg_queue_8h_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>MsgQueueTypes.h</label>
        <link refid="_msg_queue_types_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>OptionTypes.h</label>
        <link refid="_option_types_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>Serializable.h</label>
        <link refid="_serializable_8h_source"/>
      </node>
      <node id="55">
        <label>SubComponent.h</label>
        <link refid="_sub_component_8h_source"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>Suspendable.h</label>
        <link refid="_suspendable_8h_source"/>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>Synchronizable.h</label>
        <link refid="_synchronizable_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>Thread.h</label>
        <link refid="_thread_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>ThreadTypes.h</label>
        <link refid="_thread_types_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="95">
        <label>TimeDelayed.h</label>
        <link refid="_time_delayed_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>Wakeable.h</label>
        <link refid="_wakeable_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>Cartridge.h</label>
        <link refid="_cartridge_8h_source"/>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>CartridgeRom.h</label>
        <link refid="_cartridge_rom_8h_source"/>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>CartridgeTypes.h</label>
        <link refid="_cartridge_types_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="142">
        <label>ActionReplay.h</label>
        <link refid="_action_replay_8h_source"/>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="143">
        <label>Comal80.h</label>
        <link refid="_comal80_8h_source"/>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="141">
        <label>CustomCartridges.h</label>
        <link refid="_custom_cartridges_8h_source"/>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
        <childnode refid="152" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
        <childnode refid="157" relation="include">
        </childnode>
        <childnode refid="158" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="160" relation="include">
        </childnode>
        <childnode refid="161" relation="include">
        </childnode>
        <childnode refid="162" relation="include">
        </childnode>
        <childnode refid="163" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
        <childnode refid="165" relation="include">
        </childnode>
        <childnode refid="166" relation="include">
        </childnode>
        <childnode refid="167" relation="include">
        </childnode>
        <childnode refid="168" relation="include">
        </childnode>
        <childnode refid="169" relation="include">
        </childnode>
      </node>
      <node id="144">
        <label>Dinamic.h</label>
        <link refid="_dinamic_8h_source"/>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="145">
        <label>EasyFlash.h</label>
        <link refid="_easy_flash_8h_source"/>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
      </node>
      <node id="146">
        <label>Epyx.h</label>
        <link refid="_epyx_8h_source"/>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="147">
        <label>Expert.h</label>
        <link refid="_expert_8h_source"/>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="148">
        <label>FinalIII.h</label>
        <link refid="_final_i_i_i_8h_source"/>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="149">
        <label>FreezeFrame.h</label>
        <link refid="_freeze_frame_8h_source"/>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="150">
        <label>Funplay.h</label>
        <link refid="_funplay_8h_source"/>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="151">
        <label>GameKiller.h</label>
        <link refid="_game_killer_8h_source"/>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="152">
        <label>GeoRam.h</label>
        <link refid="_geo_ram_8h_source"/>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="153">
        <label>Isepic.h</label>
        <link refid="_isepic_8h_source"/>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="154">
        <label>Kcs.h</label>
        <link refid="_kcs_8h_source"/>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="155">
        <label>Kingsoft.h</label>
        <link refid="_kingsoft_8h_source"/>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="156">
        <label>Mach5.h</label>
        <link refid="_mach5_8h_source"/>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="157">
        <label>MagicDesk.h</label>
        <link refid="_magic_desk_8h_source"/>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="158">
        <label>MikroAss.h</label>
        <link refid="_mikro_ass_8h_source"/>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="159">
        <label>Ocean.h</label>
        <link refid="_ocean_8h_source"/>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="160">
        <label>PageFox.h</label>
        <link refid="_page_fox_8h_source"/>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="161">
        <label>Reu.h</label>
        <link refid="_reu_8h_source"/>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="162">
        <label>Rex.h</label>
        <link refid="_rex_8h_source"/>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="163">
        <label>SimonsBasic.h</label>
        <link refid="_simons_basic_8h_source"/>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="164">
        <label>StarDos.h</label>
        <link refid="_star_dos_8h_source"/>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="165">
        <label>StructuredBasic.h</label>
        <link refid="_structured_basic_8h_source"/>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="166">
        <label>SuperGames.h</label>
        <link refid="_super_games_8h_source"/>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="167">
        <label>WarpSpeed.h</label>
        <link refid="_warp_speed_8h_source"/>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="168">
        <label>Westermann.h</label>
        <link refid="_westermann_8h_source"/>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="169">
        <label>Zaxxon.h</label>
        <link refid="_zaxxon_8h_source"/>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="87">
        <label>FlashRom.h</label>
        <link refid="_flash_rom_8h_source"/>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>C64.h</label>
        <link refid="_c64_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="170" relation="include">
        </childnode>
        <childnode refid="178" relation="include">
        </childnode>
        <childnode refid="179" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="181" relation="include">
        </childnode>
        <childnode refid="182" relation="include">
        </childnode>
        <childnode refid="184" relation="include">
        </childnode>
        <childnode refid="185" relation="include">
        </childnode>
        <childnode refid="186" relation="include">
        </childnode>
        <childnode refid="187" relation="include">
        </childnode>
        <childnode refid="188" relation="include">
        </childnode>
        <childnode refid="189" relation="include">
        </childnode>
        <childnode refid="190" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="191" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>C64Types.h</label>
        <link refid="_c64_types_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="115">
        <label>CIA.h</label>
        <link refid="_c_i_a_8h_source"/>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
      </node>
      <node id="116">
        <label>CIATypes.h</label>
        <link refid="_c_i_a_types_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
      </node>
      <node id="113">
        <label>TOD.h</label>
        <link refid="_t_o_d_8h_source"/>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="114">
        <label>TODTypes.h</label>
        <link refid="_t_o_d_types_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="117">
        <label>CPU.h</label>
        <link refid="_c_p_u_8h_source"/>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
      </node>
      <node id="126">
        <label>CPUInspector.h</label>
        <link refid="_c_p_u_inspector_8h_source"/>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>CPUTypes.h</label>
        <link refid="_c_p_u_types_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="118">
        <label>Peddle.h</label>
        <link refid="_peddle_8h_source"/>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
      </node>
      <node id="119">
        <label>PeddleConfig.h</label>
        <link refid="_peddle_config_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="125">
        <label>PeddleDebugger.h</label>
        <link refid="_peddle_debugger_8h_source"/>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
      </node>
      <node id="120">
        <label>PeddleDisassembler.h</label>
        <link refid="_peddle_disassembler_8h_source"/>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>PeddleTypes.h</label>
        <link refid="_peddle_types_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="121">
        <label>PeddleUtils.h</label>
        <link refid="_peddle_utils_8h_source"/>
        <childnode refid="122" relation="include">
        </childnode>
      </node>
      <node id="123">
        <label>StrWriter.h</label>
        <link refid="_str_writer_8h_source"/>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>EmulatorTypes.h</label>
        <link refid="_emulator_types_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>ControlPort.h</label>
        <link refid="_control_port_8h_source"/>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>ControlPortTypes.h</label>
        <link refid="_control_port_types_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>ExpansionPort.h</label>
        <link refid="_expansion_port_8h_source"/>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>ExpansionPortTypes.h</label>
        <link refid="_expansion_port_types_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>IEC.h</label>
        <link refid="_i_e_c_8h_source"/>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="127">
        <label>PowerSupply.h</label>
        <link refid="_power_supply_8h_source"/>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="128">
        <label>PowerSupplyTypes.h</label>
        <link refid="_power_supply_types_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>C64Memory.h</label>
        <link refid="_c64_memory_8h_source"/>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>MemoryTypes.h</label>
        <link refid="_memory_types_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="96">
        <label>Muxer.h</label>
        <link refid="_muxer_8h_source"/>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="101">
        <label>ReSID.h</label>
        <link refid="_re_s_i_d_8h_source"/>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
      </node>
      <node id="100">
        <label>SID.h</label>
        <link refid="sid_8h_source"/>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
      </node>
      <node id="99">
        <label>SIDStreams.h</label>
        <link refid="_s_i_d_streams_8h_source"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
      </node>
      <node id="97">
        <label>SIDTypes.h</label>
        <link refid="_s_i_d_types_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="98">
        <label>Volume.h</label>
        <link refid="_volume_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="111">
        <label>FastSID.h</label>
        <link refid="_fast_s_i_d_8h_source"/>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
      </node>
      <node id="112">
        <label>FastVoice.h</label>
        <link refid="_fast_voice_8h_source"/>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="107">
        <label>envelope.h</label>
        <link refid="envelope_8h_source"/>
        <childnode refid="103" relation="include">
        </childnode>
      </node>
      <node id="109">
        <label>extfilt.h</label>
        <link refid="extfilt_8h_source"/>
        <childnode refid="103" relation="include">
        </childnode>
      </node>
      <node id="108">
        <label>filter.h</label>
        <link refid="filter_8h_source"/>
        <childnode refid="103" relation="include">
        </childnode>
      </node>
      <node id="110">
        <label>pot.h</label>
        <link refid="pot_8h_source"/>
        <childnode refid="103" relation="include">
        </childnode>
      </node>
      <node id="103">
        <label>resid-config.h</label>
        <link refid="resid-config_8h_source"/>
        <childnode refid="104" relation="include">
        </childnode>
      </node>
      <node id="102">
        <label>resid/sid.h</label>
        <link refid="resid_2sid_8h"/>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
      </node>
      <node id="104">
        <label>siddefs.h</label>
        <link refid="siddefs_8h_source"/>
      </node>
      <node id="105">
        <label>voice.h</label>
        <link refid="voice_8h_source"/>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
      </node>
      <node id="106">
        <label>wave.h</label>
        <link refid="wave_8h_source"/>
        <childnode refid="103" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>BusTypes.h</label>
        <link refid="_bus_types_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="94">
        <label>DmaDebugger.h</label>
        <link refid="_dma_debugger_8h_source"/>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
      </node>
      <node id="91">
        <label>DmaDebuggerTypes.h</label>
        <link refid="_dma_debugger_types_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="130">
        <label>FFmpeg.h</label>
        <link refid="_f_fmpeg_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="131">
        <label>NamedPipe.h</label>
        <link refid="_named_pipe_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="129">
        <label>Recorder.h</label>
        <link refid="_recorder_8h_source"/>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
      </node>
      <node id="88">
        <label>VICII.h</label>
        <link refid="_v_i_c_i_i_8h_source"/>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>VICIITypes.h</label>
        <link refid="_v_i_c_i_i_types_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
      </node>
      <node id="193">
        <label>FSBlock.h</label>
        <link refid="_f_s_block_8h_source"/>
        <childnode refid="174" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="192">
        <label>FSDescriptors.h</label>
        <link refid="_f_s_descriptors_8h_source"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="172" relation="include">
        </childnode>
        <childnode refid="174" relation="include">
        </childnode>
      </node>
      <node id="194">
        <label>FSDirEntry.h</label>
        <link refid="_f_s_dir_entry_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="174" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="174">
        <label>FSTypes.h</label>
        <link refid="_f_s_types_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="191">
        <label>FileSystem.h</label>
        <link refid="_file_system_8h_source"/>
        <childnode refid="192" relation="include">
        </childnode>
        <childnode refid="193" relation="include">
        </childnode>
        <childnode refid="194" relation="include">
        </childnode>
        <childnode refid="184" relation="include">
        </childnode>
        <childnode refid="183" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="183">
        <label>AnyCollection.h</label>
        <link refid="_any_collection_8h_source"/>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>AnyFile.h</label>
        <link refid="_any_file_8h_source"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>CRTFile.h</label>
        <link refid="_c_r_t_file_8h_source"/>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="184">
        <label>D64File.h</label>
        <link refid="_d64_file_8h_source"/>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>FileTypes.h</label>
        <link refid="_file_types_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="187">
        <label>Folder.h</label>
        <link refid="_folder_8h_source"/>
        <childnode refid="183" relation="include">
        </childnode>
      </node>
      <node id="185">
        <label>G64File.h</label>
        <link refid="_g64_file_8h_source"/>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="188">
        <label>P00File.h</label>
        <link refid="_p00_file_8h_source"/>
        <childnode refid="183" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>PETName.h</label>
        <link refid="_p_e_t_name_8h_source"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="186">
        <label>PRGFile.h</label>
        <link refid="_p_r_g_file_8h_source"/>
        <childnode refid="183" relation="include">
        </childnode>
      </node>
      <node id="189">
        <label>RomFile.h</label>
        <link refid="_rom_file_8h_source"/>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="181">
        <label>Snapshot.h</label>
        <link refid="_snapshot_8h_source"/>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
      </node>
      <node id="182">
        <label>T64File.h</label>
        <link refid="_t64_file_8h_source"/>
        <childnode refid="183" relation="include">
        </childnode>
      </node>
      <node id="190">
        <label>TAPFile.h</label>
        <link refid="_t_a_p_file_8h_source"/>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="132">
        <label>RegressionTester.h</label>
        <link refid="_regression_tester_8h_source"/>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="136">
        <label>Command.h</label>
        <link refid="_command_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
      </node>
      <node id="135">
        <label>Interpreter.h</label>
        <link refid="_interpreter_8h_source"/>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
      </node>
      <node id="133">
        <label>RetroShell.h</label>
        <link refid="_retro_shell_8h_source"/>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="134">
        <label>RetroShellTypes.h</label>
        <link refid="_retro_shell_types_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="140">
        <label>TextStorage.h</label>
        <link refid="_text_storage_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="179">
        <label>Datasette.h</label>
        <link refid="_datasette_8h_source"/>
        <childnode refid="180" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="180">
        <label>DatasetteTypes.h</label>
        <link refid="_datasette_types_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/hoff/Retro/virtualc64/Emulator/Peripherals/Drive/Disk.cpp</label>
        <link refid="_disk_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="195" relation="include">
        </childnode>
      </node>
      <node id="171">
        <label>Disk.h</label>
        <link refid="_disk_8h_source"/>
        <childnode refid="172" relation="include">
        </childnode>
        <childnode refid="173" relation="include">
        </childnode>
        <childnode refid="174" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="175">
        <label>DiskAnalyzer.h</label>
        <link refid="_disk_analyzer_8h_source"/>
        <childnode refid="173" relation="include">
        </childnode>
        <childnode refid="172" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="173">
        <label>DiskAnalyzerTypes.h</label>
        <link refid="_disk_analyzer_types_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="172" relation="include">
        </childnode>
      </node>
      <node id="172">
        <label>DiskTypes.h</label>
        <link refid="_disk_types_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="170">
        <label>Drive.h</label>
        <link refid="_drive_8h_source"/>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="171" relation="include">
        </childnode>
        <childnode refid="175" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="176" relation="include">
        </childnode>
        <childnode refid="177" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>DriveMemory.h</label>
        <link refid="_drive_memory_8h_source"/>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>DriveTypes.h</label>
        <link refid="_drive_types_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
      </node>
      <node id="177">
        <label>PIA.h</label>
        <link refid="_p_i_a_8h_source"/>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="178">
        <label>ParCable.h</label>
        <link refid="_par_cable_8h_source"/>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>ParCableTypes.h</label>
        <link refid="_par_cable_types_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="176">
        <label>VIA.h</label>
        <link refid="_v_i_a_8h_source"/>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>Joystick.h</label>
        <link refid="_joystick_8h_source"/>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>JoystickTypes.h</label>
        <link refid="_joystick_types_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>C64Key.h</label>
        <link refid="_c64_key_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>Keyboard.h</label>
        <link refid="_keyboard_8h_source"/>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>Mouse.h</label>
        <link refid="_mouse_8h_source"/>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>Mouse1350.h</label>
        <link refid="_mouse1350_8h_source"/>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>Mouse1351.h</label>
        <link refid="_mouse1351_8h_source"/>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>MouseTypes.h</label>
        <link refid="_mouse_types_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>NeosMouse.h</label>
        <link refid="_neos_mouse_8h_source"/>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>Buffer.h</label>
        <link refid="_buffer_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>Checksum.h</label>
        <link refid="_checksum_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>Chrono.h</label>
        <link refid="_chrono_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>Concurrency.h</label>
        <link refid="_concurrency_8h_source"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>Exception.h</label>
        <link refid="_exception_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>IOUtils.h</label>
        <link refid="_i_o_utils_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>Macros.h</label>
        <link refid="_macros_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>MemUtils.h</label>
        <link refid="_mem_utils_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="139">
        <label>Parser.h</label>
        <link refid="_parser_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>Reflection.h</label>
        <link refid="_reflection_8h_source"/>
      </node>
      <node id="28">
        <label>RingBuffer.h</label>
        <link refid="_ring_buffer_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>StringUtils.h</label>
        <link refid="_string_utils_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>Types.h</label>
        <link refid="_types_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>config.h</label>
        <link refid="config_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>algorithm</label>
      </node>
      <node id="3">
        <label>assert.h</label>
      </node>
      <node id="71">
        <label>atomic</label>
      </node>
      <node id="67">
        <label>bit</label>
      </node>
      <node id="122">
        <label>cassert</label>
      </node>
      <node id="124">
        <label>cmath</label>
      </node>
      <node id="49">
        <label>cstdio</label>
      </node>
      <node id="25">
        <label>ctime</label>
      </node>
      <node id="19">
        <label>exception</label>
      </node>
      <node id="41">
        <label>fcntl.h</label>
      </node>
      <node id="42">
        <label>filesystem</label>
      </node>
      <node id="43">
        <label>fstream</label>
      </node>
      <node id="137">
        <label>functional</label>
      </node>
      <node id="27">
        <label>future</label>
      </node>
      <node id="21">
        <label>iostream</label>
      </node>
      <node id="44">
        <label>istream</label>
      </node>
      <node id="45">
        <label>sstream</label>
      </node>
      <node id="138">
        <label>stack</label>
      </node>
      <node id="195">
        <label>stdarg.h</label>
      </node>
      <node id="11">
        <label>stdbool.h</label>
      </node>
      <node id="10">
        <label>stdint.h</label>
      </node>
      <node id="46">
        <label>sys/stat.h</label>
      </node>
      <node id="9">
        <label>sys/types.h</label>
      </node>
      <node id="26">
        <label>thread</label>
      </node>
      <node id="29">
        <label>utility</label>
      </node>
      <node id="40">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacevc64">vc64</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>VirtualC64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>Dirk<sp/>W.<sp/>Hoffmann.<sp/>www.dirkwhoffmann.de</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>FILE<sp/>is<sp/>dual-licensed.<sp/>You<sp/>are<sp/>free<sp/>to<sp/>choose<sp/>between:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>-<sp/>The<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>v3<sp/>(or<sp/>any<sp/>later<sp/>version)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>-<sp/>The<sp/>Mozilla<sp/>Public<sp/>License<sp/>v2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>GPL-3.0-or-later<sp/>OR<sp/>MPL-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;C64.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;IOUtils.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Checksum.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdarg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">vc64<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TrackDefaults<sp/>Disk::trackDefaults[43]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0<sp/>},<sp/></highlight><highlight class="comment">//<sp/>Padding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Speedzone<sp/>3<sp/>(outer<sp/>tracks)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>21,<sp/>3,<sp/>7693,<sp/>7693<sp/>*<sp/>8,<sp/><sp/><sp/>0,<sp/>0.268956<sp/>},<sp/></highlight><highlight class="comment">//<sp/>Track<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>21,<sp/>3,<sp/>7693,<sp/>7693<sp/>*<sp/>8,<sp/><sp/>21,<sp/>0.724382<sp/>},<sp/></highlight><highlight class="comment">//<sp/>Track<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>21,<sp/>3,<sp/>7693,<sp/>7693<sp/>*<sp/>8,<sp/><sp/>42,<sp/>0.177191<sp/>},<sp/></highlight><highlight class="comment">//<sp/>Track<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>21,<sp/>3,<sp/>7693,<sp/>7693<sp/>*<sp/>8,<sp/><sp/>63,<sp/>0.632698<sp/>},<sp/></highlight><highlight class="comment">//<sp/>Track<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>21,<sp/>3,<sp/>7693,<sp/>7693<sp/>*<sp/>8,<sp/><sp/>84,<sp/>0.088173<sp/>},<sp/></highlight><highlight class="comment">//<sp/>Track<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>21,<sp/>3,<sp/>7693,<sp/>7693<sp/>*<sp/>8,<sp/>105,<sp/>0.543583<sp/>},<sp/></highlight><highlight class="comment">//<sp/>Track<sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>21,<sp/>3,<sp/>7693,<sp/>7693<sp/>*<sp/>8,<sp/>126,<sp/>0.996409<sp/>},<sp/></highlight><highlight class="comment">//<sp/>Track<sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>21,<sp/>3,<sp/>7693,<sp/>7693<sp/>*<sp/>8,<sp/>147,<sp/>0.451883<sp/>},<sp/></highlight><highlight class="comment">//<sp/>Track<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>21,<sp/>3,<sp/>7693,<sp/>7693<sp/>*<sp/>8,<sp/>168,<sp/>0.907342<sp/>},<sp/></highlight><highlight class="comment">//<sp/>Track<sp/>9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>21,<sp/>3,<sp/>7693,<sp/>7693<sp/>*<sp/>8,<sp/>289,<sp/>0.362768<sp/>},<sp/></highlight><highlight class="comment">//<sp/>Track<sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>21,<sp/>3,<sp/>7693,<sp/>7693<sp/>*<sp/>8,<sp/>210,<sp/>0.815512<sp/>},<sp/></highlight><highlight class="comment">//<sp/>Track<sp/>11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>21,<sp/>3,<sp/>7693,<sp/>7693<sp/>*<sp/>8,<sp/>231,<sp/>0.268338<sp/>},<sp/></highlight><highlight class="comment">//<sp/>Track<sp/>12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>21,<sp/>3,<sp/>7693,<sp/>7693<sp/>*<sp/>8,<sp/>252,<sp/>0.723813<sp/>},<sp/></highlight><highlight class="comment">//<sp/>Track<sp/>13</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>21,<sp/>3,<sp/>7693,<sp/>7693<sp/>*<sp/>8,<sp/>273,<sp/>0.179288<sp/>},<sp/></highlight><highlight class="comment">//<sp/>Track<sp/>14</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>21,<sp/>3,<sp/>7693,<sp/>7693<sp/>*<sp/>8,<sp/>294,<sp/>0.634779<sp/>},<sp/></highlight><highlight class="comment">//<sp/>Track<sp/>15</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>21,<sp/>3,<sp/>7693,<sp/>7693<sp/>*<sp/>8,<sp/>315,<sp/>0.090253<sp/>},<sp/></highlight><highlight class="comment">//<sp/>Track<sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>21,<sp/>3,<sp/>7693,<sp/>7693<sp/>*<sp/>8,<sp/>336,<sp/>0.545712<sp/>},<sp/></highlight><highlight class="comment">//<sp/>Track<sp/>17</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Speedzone<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>19,<sp/>2,<sp/>7143,<sp/>7143<sp/>*<sp/>8,<sp/>357,<sp/>0.945418<sp/>},<sp/></highlight><highlight class="comment">//<sp/>Track<sp/>18</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>19,<sp/>2,<sp/>7143,<sp/>7143<sp/>*<sp/>8,<sp/>376,<sp/>0.506081<sp/>},<sp/></highlight><highlight class="comment">//<sp/>Track<sp/>19</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>19,<sp/>2,<sp/>7143,<sp/>7143<sp/>*<sp/>8,<sp/>395,<sp/>0.066622<sp/>},<sp/></highlight><highlight class="comment">//<sp/>Track<sp/>20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>19,<sp/>2,<sp/>7143,<sp/>7143<sp/>*<sp/>8,<sp/>414,<sp/>0.627303<sp/>},<sp/></highlight><highlight class="comment">//<sp/>Track<sp/>21</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>19,<sp/>2,<sp/>7143,<sp/>7143<sp/>*<sp/>8,<sp/>433,<sp/>0.187862<sp/>},<sp/></highlight><highlight class="comment">//<sp/>Track<sp/>22</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>19,<sp/>2,<sp/>7143,<sp/>7143<sp/>*<sp/>8,<sp/>452,<sp/>0.748403<sp/>},<sp/></highlight><highlight class="comment">//<sp/>Track<sp/>23</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>19,<sp/>2,<sp/>7143,<sp/>7143<sp/>*<sp/>8,<sp/>471,<sp/>0.308962<sp/>},<sp/></highlight><highlight class="comment">//<sp/>Track<sp/>24</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Speedzone<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>18,<sp/>1,<sp/>6667,<sp/>6667<sp/>*<sp/>8,<sp/>490,<sp/>0.116926<sp/>},<sp/></highlight><highlight class="comment">//<sp/>Track<sp/>25</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>18,<sp/>1,<sp/>6667,<sp/>6667<sp/>*<sp/>8,<sp/>508,<sp/>0.788086<sp/>},<sp/></highlight><highlight class="comment">//<sp/>Track<sp/>26</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>18,<sp/>1,<sp/>6667,<sp/>6667<sp/>*<sp/>8,<sp/>526,<sp/>0.459190<sp/>},<sp/></highlight><highlight class="comment">//<sp/>Track<sp/>27</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>18,<sp/>1,<sp/>6667,<sp/>6667<sp/>*<sp/>8,<sp/>544,<sp/>0.130238<sp/>},<sp/></highlight><highlight class="comment">//<sp/>Track<sp/>28</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>18,<sp/>1,<sp/>6667,<sp/>6667<sp/>*<sp/>8,<sp/>562,<sp/>0.801286<sp/>},<sp/></highlight><highlight class="comment">//<sp/>Track<sp/>29</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>18,<sp/>1,<sp/>6667,<sp/>6667<sp/>*<sp/>8,<sp/>580,<sp/>0.472353<sp/>},<sp/></highlight><highlight class="comment">//<sp/>Track<sp/>30</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Speedzone<sp/>0<sp/>(inner<sp/>tracks)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>17,<sp/>0,<sp/>6250,<sp/>6250<sp/>*<sp/>8,<sp/>598,<sp/>0.834120<sp/>},<sp/></highlight><highlight class="comment">//<sp/>Track<sp/>31</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>17,<sp/>0,<sp/>6250,<sp/>6250<sp/>*<sp/>8,<sp/>615,<sp/>0.614880<sp/>},<sp/></highlight><highlight class="comment">//<sp/>Track<sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>17,<sp/>0,<sp/>6250,<sp/>6250<sp/>*<sp/>8,<sp/>632,<sp/>0.395480<sp/>},<sp/></highlight><highlight class="comment">//<sp/>Track<sp/>33</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>17,<sp/>0,<sp/>6250,<sp/>6250<sp/>*<sp/>8,<sp/>649,<sp/>0.176140<sp/>},<sp/></highlight><highlight class="comment">//<sp/>Track<sp/>34</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>17,<sp/>0,<sp/>6250,<sp/>6250<sp/>*<sp/>8,<sp/>666,<sp/>0.956800<sp/>},<sp/></highlight><highlight class="comment">//<sp/>Track<sp/>35</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Speedzone<sp/>0<sp/>(usually<sp/>unused<sp/>tracks)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>17,<sp/>0,<sp/>6250,<sp/>6250<sp/>*<sp/>8,<sp/>683,<sp/>0.300<sp/>},<sp/></highlight><highlight class="comment">//<sp/>Track<sp/>36</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>17,<sp/>0,<sp/>6250,<sp/>6250<sp/>*<sp/>8,<sp/>700,<sp/>0.820<sp/>},<sp/></highlight><highlight class="comment">//<sp/>Track<sp/>37</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>17,<sp/>0,<sp/>6250,<sp/>6250<sp/>*<sp/>8,<sp/>717,<sp/>0.420<sp/>},<sp/></highlight><highlight class="comment">//<sp/>Track<sp/>38</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>17,<sp/>0,<sp/>6250,<sp/>6250<sp/>*<sp/>8,<sp/>734,<sp/>0.940<sp/>},<sp/></highlight><highlight class="comment">//<sp/>Track<sp/>39</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>17,<sp/>0,<sp/>6250,<sp/>6250<sp/>*<sp/>8,<sp/>751,<sp/>0.540<sp/>},<sp/></highlight><highlight class="comment">//<sp/>Track<sp/>40</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>17,<sp/>0,<sp/>6250,<sp/>6250<sp/>*<sp/>8,<sp/>768,<sp/>0.130<sp/>},<sp/></highlight><highlight class="comment">//<sp/>Track<sp/>41</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>17,<sp/>0,<sp/>6250,<sp/>6250<sp/>*<sp/>8,<sp/>785,<sp/>0.830<sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>Track<sp/>42</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal">};</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal">isize</highlight></codeline>
<codeline lineno="80"><highlight class="normal">Disk::numberOfSectorsInTrack(Track<sp/>t)</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(t<sp/>&lt;<sp/>1)<sp/>?<sp/>0<sp/>:<sp/>(t<sp/>&lt;<sp/>18)<sp/>?<sp/>21<sp/>:<sp/>(t<sp/>&lt;<sp/>25)<sp/>?<sp/>19<sp/>:<sp/>(t<sp/>&lt;<sp/>31)<sp/>?<sp/>18<sp/>:<sp/>(t<sp/>&lt;<sp/>43)<sp/>?<sp/>17<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal">isize</highlight></codeline>
<codeline lineno="85"><highlight class="normal">Disk::numberOfSectorsInHalftrack(Halftrack<sp/>ht)</highlight></codeline>
<codeline lineno="86"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>numberOfSectorsInTrack((ht<sp/>+<sp/>1)<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal">isize</highlight></codeline>
<codeline lineno="91"><highlight class="normal">Disk::speedZoneOfTrack(Track<sp/>t)</highlight></codeline>
<codeline lineno="92"><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(t<sp/>&lt;<sp/>18)<sp/>?<sp/>3<sp/>:<sp/>(t<sp/>&lt;<sp/>25)<sp/>?<sp/>2<sp/>:<sp/>(t<sp/>&lt;<sp/>31)<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal">isize</highlight></codeline>
<codeline lineno="97"><highlight class="normal">Disk::speedZoneOfHalftrack(Halftrack<sp/>ht)</highlight></codeline>
<codeline lineno="98"><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ht<sp/>&lt;<sp/>35)<sp/>?<sp/>3<sp/>:<sp/>(ht<sp/>&lt;<sp/>49)<sp/>?<sp/>2<sp/>:<sp/>(ht<sp/>&lt;<sp/>61)<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal">Disk::isValidTrackSectorPair(Track<sp/>t,<sp/>Sector<sp/>s)</highlight></codeline>
<codeline lineno="104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s<sp/>&lt;<sp/>numberOfSectorsInTrack(t);</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal">Disk::isValidHalftrackSectorPair(Halftrack<sp/>ht,<sp/>Sector<sp/>s)</highlight></codeline>
<codeline lineno="110"><highlight class="normal">{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s<sp/>&lt;<sp/>numberOfSectorsInHalftrack(ht);</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal">Disk::Disk()</highlight></codeline>
<codeline lineno="115"><highlight class="normal">{<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>clearDisk();</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal">Disk::init(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;path,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wp)</highlight></codeline>
<codeline lineno="121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(G64File::isCompatible(path))<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>file<sp/>=<sp/>G64File(path);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>init(file,<sp/>wp);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fs<sp/>=<sp/>FileSystem(path);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>init(fs,<sp/>wp);</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal">Disk::init(DOSType<sp/>type,<sp/>PETName&lt;16&gt;<sp/>name,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wp)</highlight></codeline>
<codeline lineno="135"><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_enum(DOSType,<sp/>type);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/>DOS_TYPE_CBM)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fs<sp/>=<sp/>FileSystem(DISK_TYPE_SS_SD,<sp/>DOS_TYPE_CBM);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fs.setName(name);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>init(fs,<sp/>wp);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clearDisk();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal">Disk::init(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FileSystem<sp/>&amp;fs,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wp)</highlight></codeline>
<codeline lineno="152"><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>clearDisk();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>encode(fs);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>setWriteProtection(wp);</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal">Disk::init(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G64File<sp/>&amp;g64,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wp)</highlight></codeline>
<codeline lineno="160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>clearDisk();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>encodeG64(g64);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>setWriteProtection(wp);</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal">Disk::init(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>D64File<sp/>&amp;d64,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wp)</highlight></codeline>
<codeline lineno="168"><highlight class="normal">{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fs<sp/>=<sp/>FileSystem(d64);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>init(fs,<sp/>wp);</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal">Disk::init(AnyCollection<sp/>&amp;collection,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wp)</highlight></codeline>
<codeline lineno="175"><highlight class="normal">{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fs<sp/>=<sp/>FileSystem(collection);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>init(fs,<sp/>wp);</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal">Disk::init(SerReader<sp/>&amp;reader)</highlight></codeline>
<codeline lineno="182"><highlight class="normal">{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>serialize(reader);</highlight></codeline>
<codeline lineno="184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal">Disk::_dump(Category<sp/>category,<sp/>std::ostream&amp;<sp/>os)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="188"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">util;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(category<sp/>==<sp/>Category::Disk)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>checksum<sp/>=<sp/>util::fnv32((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u8<sp/>*)data.track,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(data.track));</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>tab(</highlight><highlight class="stringliteral">&quot;Write<sp/>protected&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>bol(writeProtected)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>tab(</highlight><highlight class="stringliteral">&quot;Modified&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>bol(modified)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>tab(</highlight><highlight class="stringliteral">&quot;Checksum&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>hex(checksum)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(category<sp/>==<sp/>Category::Layout)<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Halftrack<sp/>ht<sp/>=<sp/>1;<sp/>ht<sp/>&lt;=<sp/>highestHalftrack;<sp/>ht++)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>length<sp/>=<sp/>lengthOfHalftrack(ht);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>tab(</highlight><highlight class="stringliteral">&quot;Halftrack<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(ht));</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>dec(length)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Bits<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>dec(length<sp/>/<sp/>8)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Bytes)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal">Disk::setModified(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>b)</highlight></codeline>
<codeline lineno="215"><highlight class="normal">{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b<sp/>!=<sp/>modified)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modified<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal">Disk::encodeGcr(u8<sp/>value,<sp/>Track<sp/>t,<sp/>HeadPos<sp/>offset)</highlight></codeline>
<codeline lineno="223"><highlight class="normal">{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(isTrackNumber(t));</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/>nibble1<sp/>=<sp/>bin2gcr(value<sp/>&gt;&gt;<sp/>4);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/>nibble2<sp/>=<sp/>bin2gcr(value<sp/>&amp;<sp/>0xF);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>writeBitToTrack(t,<sp/>offset++,<sp/>nibble1<sp/>&amp;<sp/>0x10);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>writeBitToTrack(t,<sp/>offset++,<sp/>nibble1<sp/>&amp;<sp/>0x08);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>writeBitToTrack(t,<sp/>offset++,<sp/>nibble1<sp/>&amp;<sp/>0x04);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>writeBitToTrack(t,<sp/>offset++,<sp/>nibble1<sp/>&amp;<sp/>0x02);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>writeBitToTrack(t,<sp/>offset++,<sp/>nibble1<sp/>&amp;<sp/>0x01);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>writeBitToTrack(t,<sp/>offset++,<sp/>nibble2<sp/>&amp;<sp/>0x10);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>writeBitToTrack(t,<sp/>offset++,<sp/>nibble2<sp/>&amp;<sp/>0x08);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>writeBitToTrack(t,<sp/>offset++,<sp/>nibble2<sp/>&amp;<sp/>0x04);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>writeBitToTrack(t,<sp/>offset++,<sp/>nibble2<sp/>&amp;<sp/>0x02);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>writeBitToTrack(t,<sp/>offset++,<sp/>nibble2<sp/>&amp;<sp/>0x01);</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal">Disk::encodeGcr(u8<sp/>*values,<sp/>isize<sp/>length,<sp/>Track<sp/>t,<sp/>HeadPos<sp/>offset)</highlight></codeline>
<codeline lineno="244"><highlight class="normal">{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(isize<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>length;<sp/>i++,<sp/>values++,<sp/>offset<sp/>+=<sp/>10)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encodeGcr(*values,<sp/>t,<sp/>offset);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal">Disk::isValidHeadPos(Halftrack<sp/>ht,<sp/>HeadPos<sp/>pos)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="252"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isHalftrackNumber(ht)<sp/>&amp;&amp;<sp/>pos<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>pos<sp/>&lt;<sp/>length.halftrack[ht];</highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal">HeadPos</highlight></codeline>
<codeline lineno="257"><highlight class="normal">Disk::wrap(Halftrack<sp/>ht,<sp/>HeadPos<sp/>pos)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="258"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>length.halftrack[ht];</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pos<sp/>&lt;<sp/>0<sp/>?<sp/>pos<sp/>+<sp/>len<sp/>:<sp/>pos<sp/>&gt;=<sp/>len<sp/>?<sp/>pos<sp/>-<sp/>len<sp/>:<sp/>pos;</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal">u64</highlight></codeline>
<codeline lineno="264"><highlight class="normal">Disk::_bitDelay(Halftrack<sp/>ht,<sp/>HeadPos<sp/>pos)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(isValidHeadPos(ht,<sp/>pos));</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>the<sp/>current<sp/>implementation,<sp/>we<sp/>assume<sp/>that<sp/>the<sp/>density<sp/>bits<sp/>were</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>to<sp/>their<sp/>correct<sp/>values<sp/>when<sp/>a<sp/>bit<sp/>was<sp/>written<sp/>to<sp/>disk.<sp/>According</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>this<sp/>assumption,<sp/>the<sp/>returned<sp/>value<sp/>is<sp/>determined<sp/>solely<sp/>by<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>track<sp/>position<sp/>of<sp/>the<sp/>drive<sp/>head.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ht<sp/>&lt;=<sp/>33)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>4<sp/>*<sp/>10000;<sp/></highlight><highlight class="comment">//<sp/>Density<sp/>bits<sp/>=<sp/>00:<sp/>4<sp/>*<sp/>16/16<sp/>*<sp/>10^4<sp/>1/10<sp/>nsec</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ht<sp/>&lt;=<sp/>47)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>4<sp/>*<sp/>9375;<sp/><sp/></highlight><highlight class="comment">//<sp/>Density<sp/>bits<sp/>=<sp/>01:<sp/>4<sp/>*<sp/>15/16<sp/>*<sp/>10^4<sp/>1/10<sp/>nsec</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ht<sp/>&lt;=<sp/>59)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>4<sp/>*<sp/>8750;<sp/><sp/></highlight><highlight class="comment">//<sp/>Density<sp/>bits<sp/>=<sp/>10:<sp/>4<sp/>*<sp/>14/16<sp/>*<sp/>10^4<sp/>1/10<sp/>nsec</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>4<sp/>*<sp/>8125;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Density<sp/>bits<sp/>=<sp/>11:<sp/>4<sp/>*<sp/>13/16<sp/>*<sp/>10^4<sp/>1/10<sp/>nsec</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal">Disk::clearHalftrack(Halftrack<sp/>ht)</highlight></codeline>
<codeline lineno="285"><highlight class="normal">{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;data.halftrack[ht],<sp/>0x55,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(data.halftrack[ht]));</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>length.halftrack[ht]<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(data.halftrack[ht])<sp/>*<sp/>8;</highlight></codeline>
<codeline lineno="288"><highlight class="normal">}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal">Disk::clearDisk()</highlight></codeline>
<codeline lineno="292"><highlight class="normal">{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>memset(&amp;data,<sp/>0x55,<sp/>sizeof(data));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Halftrack<sp/>ht<sp/>=<sp/>1;<sp/>ht<sp/>&lt;=<sp/>highestHalftrack;<sp/>ht++)<sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>length.halftrack[ht]<sp/>=<sp/>sizeof(data.halftrack[ht])<sp/>*<sp/>8;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clearHalftrack(ht);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>writeProtected<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>modified<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal">Disk::halftrackIsEmpty(Halftrack<sp/>ht)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="304"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(isHalftrackNumber(ht));</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(isize<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>isizeof(data.halftrack[ht]);<sp/>i++)</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data.halftrack[ht][i]<sp/>!=<sp/>0x55)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal">Disk::trackIsEmpty(Track<sp/>t)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="313"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(isTrackNumber(t));</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>halftrackIsEmpty(2<sp/>*<sp/>t<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="316"><highlight class="normal">}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal">isize</highlight></codeline>
<codeline lineno="319"><highlight class="normal">Disk::nonemptyHalftracks()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="320"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>isize<sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Halftrack<sp/>ht<sp/>=<sp/>1;<sp/>ht<sp/>&lt;<sp/>85;<sp/>ht++)<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!halftrackIsEmpty(ht))</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result++;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="329"><highlight class="normal">}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal">isize</highlight></codeline>
<codeline lineno="332"><highlight class="normal">Disk::lengthOfTrack(Track<sp/>t)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="333"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(isTrackNumber(t));</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>length.track[t][0];</highlight></codeline>
<codeline lineno="336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal">isize</highlight></codeline>
<codeline lineno="339"><highlight class="normal">Disk::lengthOfHalftrack(Halftrack<sp/>ht)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="340"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(isHalftrackNumber(ht));</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>length.halftrack[ht];</highlight></codeline>
<codeline lineno="343"><highlight class="normal">}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Decoding<sp/>disk<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal">isize</highlight></codeline>
<codeline lineno="351"><highlight class="normal">Disk::decodeDisk(u8<sp/>*dest)</highlight></codeline>
<codeline lineno="352"><highlight class="normal">{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Analyze<sp/>the<sp/>GCR<sp/>bit<sp/>stream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>DiskAnalyzer<sp/>analyzer(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Determine<sp/>highest<sp/>non-empty<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>Track<sp/>t<sp/>=<sp/>42;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(t<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>trackIsEmpty(t))<sp/>t--;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Decode<sp/>disk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>&lt;=<sp/>35)</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>decodeDisk(dest,<sp/>35,<sp/>analyzer);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>&lt;=<sp/>40)</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>decodeDisk(dest,<sp/>40,<sp/>analyzer);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>decodeDisk(dest,<sp/>42,<sp/>analyzer);</highlight></codeline>
<codeline lineno="368"><highlight class="normal">}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal">isize</highlight></codeline>
<codeline lineno="371"><highlight class="normal">Disk::decodeDisk(u8<sp/>*dest,<sp/>isize<sp/>numTracks,<sp/>DiskAnalyzer<sp/>&amp;analyzer)</highlight></codeline>
<codeline lineno="372"><highlight class="normal">{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>isize<sp/>numBytes<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(numTracks<sp/>==<sp/>35<sp/>||<sp/>numTracks<sp/>==<sp/>40<sp/>||<sp/>numTracks<sp/>==<sp/>42);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>each<sp/>full<sp/>track<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Track<sp/>t<sp/>=<sp/>1;<sp/>t<sp/>&lt;=<sp/>numTracks;<sp/>t++)<sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(trackIsEmpty(t))</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trace(GCR_DEBUG,<sp/></highlight><highlight class="stringliteral">&quot;Decoding<sp/>track<sp/>%ld<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>t,<sp/>dest<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;(test<sp/>run)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numBytes<sp/>+=<sp/>decodeTrack(t,<sp/>dest<sp/>+<sp/>(dest<sp/>?<sp/>numBytes<sp/>:<sp/>0),<sp/>analyzer);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>numBytes;</highlight></codeline>
<codeline lineno="388"><highlight class="normal">}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal">isize</highlight></codeline>
<codeline lineno="391"><highlight class="normal">Disk::decodeTrack(Track<sp/>t,<sp/>u8<sp/>*dest,<sp/>DiskAnalyzer<sp/>&amp;analyzer)</highlight></codeline>
<codeline lineno="392"><highlight class="normal">{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(isTrackNumber(t));</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>decodeHalfrack(2<sp/>*<sp/>t<sp/>-<sp/>1,<sp/>dest,<sp/>analyzer);</highlight></codeline>
<codeline lineno="396"><highlight class="normal">}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal">isize</highlight></codeline>
<codeline lineno="399"><highlight class="normal">Disk::decodeHalfrack(Halftrack<sp/>ht,<sp/>u8<sp/>*dest,<sp/>DiskAnalyzer<sp/>&amp;analyzer)</highlight></codeline>
<codeline lineno="400"><highlight class="normal">{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(isHalftrackNumber(ht));</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>isize<sp/>numBytes<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>isize<sp/>numSectors<sp/>=<sp/>numberOfSectorsInHalftrack(ht);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>each<sp/>sector<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Sector<sp/>s<sp/>=<sp/>0;<sp/>s<sp/>&lt;<sp/>numSectors;<sp/>s++)<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trace(GCR_DEBUG,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>Decoding<sp/>sector<sp/>%ld\n&quot;</highlight><highlight class="normal">,<sp/>s);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SectorInfo<sp/>info<sp/>=<sp/>analyzer.sectorLayout(ht,<sp/>s);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info.dataBegin<sp/>!=<sp/>info.dataEnd)<sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numBytes<sp/>+=<sp/>decodeSector(ht,<sp/>info.dataBegin,<sp/>dest<sp/>+<sp/>(dest<sp/>?<sp/>numBytes<sp/>:<sp/>0),<sp/>analyzer);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>decoder<sp/>failed<sp/>to<sp/>decode<sp/>this<sp/>sector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>numBytes;</highlight></codeline>
<codeline lineno="421"><highlight class="normal">}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal">isize</highlight></codeline>
<codeline lineno="424"><highlight class="normal">Disk::decodeSector(Halftrack<sp/>ht,<sp/>isize<sp/>offset,<sp/>u8<sp/>*dest,<sp/>DiskAnalyzer<sp/>&amp;analyzer)</highlight></codeline>
<codeline lineno="425"><highlight class="normal">{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>first<sp/>byte<sp/>must<sp/>be<sp/>0x07<sp/>(indicating<sp/>a<sp/>data<sp/>block)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(analyzer.decodeGcr(ht,<sp/>offset)<sp/>==<sp/>0x07);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/>10;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dest)<sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(isize<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>256;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest[i]<sp/>=<sp/>analyzer.decodeGcr(ht,<sp/>offset);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/>10;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>256;</highlight></codeline>
<codeline lineno="438"><highlight class="normal">}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Encoding<sp/>disk<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal">Disk::encodeG64(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G64File<sp/>&amp;a)</highlight></codeline>
<codeline lineno="446"><highlight class="normal">{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>trace(GCR_DEBUG,<sp/></highlight><highlight class="stringliteral">&quot;Encoding<sp/>G64<sp/>archive\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>clearDisk();</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Halftrack<sp/>ht<sp/>=<sp/>1;<sp/>ht<sp/>&lt;=<sp/>84;<sp/>ht++)<sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isize<sp/>size<sp/>=<sp/>a.getSizeOfHalftrack(ht);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ht<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>this<sp/>halftrack<sp/>as<sp/>long<sp/>as<sp/>the<sp/>previous<sp/>halftrack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length.halftrack[ht]<sp/>=<sp/>length.halftrack[ht<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>&gt;<sp/>7928)<sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>warn(</highlight><highlight class="stringliteral">&quot;Halftrack<sp/>%ld<sp/>has<sp/>%ld<sp/>bytes.<sp/>Must<sp/>be<sp/>less<sp/>than<sp/>7928\n&quot;</highlight><highlight class="normal">,<sp/>ht,<sp/>size);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trace(GCR_DEBUG,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Encoding<sp/>halftrack<sp/>%ld<sp/>(%ld<sp/>bytes)\n&quot;</highlight><highlight class="normal">,<sp/>ht,<sp/>size);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length.halftrack[ht]<sp/>=<sp/>(u16)(8<sp/>*<sp/>size);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.copyHalftrack(ht,<sp/>data.halftrack[ht]);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="471"><highlight class="normal">}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal">Disk::encode(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FileSystem<sp/>&amp;fs,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>alignTracks)</highlight></codeline>
<codeline lineno="475"><highlight class="normal">{<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>64COPY<sp/>(fails<sp/>on<sp/>VICE<sp/>test<sp/>drive/skew)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="478"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>int<sp/>tailGap[4]<sp/>=<sp/>{<sp/>9,<sp/>9,<sp/>9,<sp/>9<sp/>};</highlight></codeline>
<codeline lineno="479"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>u16<sp/>trackLength[4]<sp/>=</highlight></codeline>
<codeline lineno="480"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="481"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>6250<sp/>*<sp/>8,<sp/>//<sp/>Tracks<sp/>31<sp/>-<sp/>35..42<sp/>(inner<sp/>tracks)</highlight></codeline>
<codeline lineno="482"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>6666<sp/>*<sp/>8,<sp/>//<sp/>Tracks<sp/>25<sp/>-<sp/>30</highlight></codeline>
<codeline lineno="483"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>7142<sp/>*<sp/>8,<sp/>//<sp/>Tracks<sp/>18<sp/>-<sp/>24</highlight></codeline>
<codeline lineno="484"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>7692<sp/>*<sp/>8<sp/><sp/>//<sp/>Tracks<sp/><sp/>1<sp/>-<sp/>17<sp/><sp/><sp/><sp/><sp/>(outer<sp/>tracks)</highlight></codeline>
<codeline lineno="485"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="486"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Hoxs64<sp/>(passes<sp/>VICE<sp/>test<sp/>drive/skew)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tailGap[4]<sp/>=<sp/>{<sp/>9,<sp/>12,<sp/>17,<sp/>8<sp/>};</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>u16<sp/>trackLength[4]<sp/>=</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>6250<sp/>*<sp/>8,<sp/></highlight><highlight class="comment">//<sp/>Tracks<sp/>31<sp/>-<sp/>35..42<sp/>(inner<sp/>tracks)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>6667<sp/>*<sp/>8,<sp/></highlight><highlight class="comment">//<sp/>Tracks<sp/>25<sp/>-<sp/>30</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7143<sp/>*<sp/>8,<sp/></highlight><highlight class="comment">//<sp/>Tracks<sp/>18<sp/>-<sp/>24</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7693<sp/>*<sp/>8<sp/><sp/></highlight><highlight class="comment">//<sp/>Tracks<sp/><sp/>1<sp/>-<sp/>17<sp/><sp/><sp/><sp/><sp/>(outer<sp/>tracks)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>VirtualC64<sp/>2.4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="500"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>const<sp/>int<sp/>tailGap[4]<sp/>=<sp/>{<sp/>13,<sp/>16,<sp/>21,<sp/>12<sp/>};</highlight></codeline>
<codeline lineno="501"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>const<sp/>u16<sp/>trackLength[4]<sp/>=</highlight></codeline>
<codeline lineno="502"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>(u16)(8<sp/>*<sp/>17<sp/>*<sp/>(354<sp/>+<sp/>tailGap[0])),<sp/>//<sp/>Tracks<sp/>31<sp/>-<sp/>35..42<sp/>(inner<sp/>tracks)</highlight></codeline>
<codeline lineno="504"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>(u16)(8<sp/>*<sp/>18<sp/>*<sp/>(354<sp/>+<sp/>tailGap[1])),<sp/>//<sp/>Tracks<sp/>25<sp/>-<sp/>30</highlight></codeline>
<codeline lineno="505"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>(u16)(8<sp/>*<sp/>19<sp/>*<sp/>(354<sp/>+<sp/>tailGap[2])),<sp/>//<sp/>Tracks<sp/>18<sp/>-<sp/>24</highlight></codeline>
<codeline lineno="506"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>(u16)(8<sp/>*<sp/>21<sp/>*<sp/>(354<sp/>+<sp/>tailGap[3]))<sp/><sp/>//<sp/>Tracks<sp/><sp/>1<sp/>-<sp/>17<sp/><sp/><sp/><sp/><sp/>(outer<sp/>tracks)</highlight></codeline>
<codeline lineno="507"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="508"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>isize<sp/>numTracks<sp/>=<sp/>fs.getNumTracks();</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>trace(GCR_DEBUG,<sp/></highlight><highlight class="stringliteral">&quot;Encoding<sp/>disk<sp/>with<sp/>%ld<sp/>tracks\n&quot;</highlight><highlight class="normal">,<sp/>numTracks);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wipe<sp/>out<sp/>track<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>clearDisk();</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assign<sp/>track<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Halftrack<sp/>ht<sp/>=<sp/>1;<sp/>ht<sp/>&lt;=<sp/>highestHalftrack;<sp/>ht++)</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length.halftrack[ht]<sp/>=<sp/>trackLength[speedZoneOfHalftrack(ht)];</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Encode<sp/>tracks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>HeadPos<sp/>start;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Track<sp/>t<sp/>=<sp/>1;<sp/>t<sp/>&lt;=<sp/>numTracks;<sp/>t++)<sp/>{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>zone<sp/>=<sp/>speedZoneOfTrack(t);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alignTracks)<sp/>{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>=<sp/>(HeadPos)(length.track[t][0]<sp/>*<sp/>trackDefaults[t].stagger);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encodeTrack(fs,<sp/>t,<sp/>tailGap[zone],<sp/>start);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>some<sp/>consistency<sp/>checking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Halftrack<sp/>ht<sp/>=<sp/>1;<sp/>ht<sp/>&lt;=<sp/>highestHalftrack;<sp/>ht++)<sp/>{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(length.halftrack[ht]<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(length.halftrack[ht]<sp/>&lt;=<sp/>isizeof(data.halftrack[ht])<sp/>*<sp/>8);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="539"><highlight class="normal">}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal">isize</highlight></codeline>
<codeline lineno="542"><highlight class="normal">Disk::encodeTrack(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FileSystem<sp/>&amp;fs,<sp/>Track<sp/>t,<sp/>isize<sp/>gap,<sp/>HeadPos<sp/>start)</highlight></codeline>
<codeline lineno="543"><highlight class="normal">{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(isTrackNumber(t));</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>trace(GCR_DEBUG,<sp/></highlight><highlight class="stringliteral">&quot;Encoding<sp/>track<sp/>%ld\n&quot;</highlight><highlight class="normal">,<sp/>t);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>isize<sp/>totalEncodedBits<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>each<sp/>sector<sp/>in<sp/>this<sp/>track<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Sector<sp/>s<sp/>=<sp/>0;<sp/>s<sp/>&lt;<sp/>trackDefaults[t].sectors;<sp/>s++)<sp/>{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isize<sp/>encodedBits<sp/>=<sp/>encodeSector(fs,<sp/>t,<sp/>s,<sp/>start,<sp/>gap);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>+=<sp/>(HeadPos)encodedBits;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalEncodedBits<sp/>+=<sp/>encodedBits;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>totalEncodedBits;</highlight></codeline>
<codeline lineno="558"><highlight class="normal">}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal">isize</highlight></codeline>
<codeline lineno="561"><highlight class="normal">Disk::encodeSector(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FileSystem<sp/>&amp;fs,<sp/>Track<sp/>t,<sp/>Sector<sp/>s,<sp/>HeadPos<sp/>start,<sp/>isize<sp/>tailGap)</highlight></codeline>
<codeline lineno="562"><highlight class="normal">{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(isValidTrackSectorPair(t,<sp/>s));</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>TSLink<sp/>ts<sp/>=<sp/>TSLink{t,s};</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>HeadPos<sp/>offset<sp/>=<sp/>start;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/>errorCode<sp/>=<sp/>fs.getErrorCode(ts);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>trace(GCR_DEBUG,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>Encoding<sp/>track/sector<sp/>%ld/%ld\n&quot;</highlight><highlight class="normal">,<sp/>t,<sp/>s);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>disk<sp/>id<sp/>and<sp/>compute<sp/>checksum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/>id1<sp/>=<sp/>fs.diskId1();</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/>id2<sp/>=<sp/>fs.diskId2();</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/>checksum<sp/>=<sp/>(u8)(id1<sp/>^<sp/>id2<sp/>^<sp/>t<sp/>^<sp/>s);<sp/></highlight><highlight class="comment">//<sp/>Header<sp/>checksum<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SYNC<sp/>(0xFF<sp/>0xFF<sp/>0xFF<sp/>0xFF<sp/>0xFF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errorCode<sp/>==<sp/>0x3)<sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeBitToTrack(t,<sp/>offset,<sp/>0,<sp/>40);<sp/></highlight><highlight class="comment">//<sp/>NO_SYNC<sp/>SEQUENCE_ERROR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeBitToTrack(t,<sp/>offset,<sp/>1,<sp/>40);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/>40;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Header<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errorCode<sp/>==<sp/>0x2)<sp/>{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encodeGcr(0x00,<sp/>t,<sp/>offset);<sp/></highlight><highlight class="comment">//<sp/>HEADER_BLOCK_NOT_FOUND_ERROR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encodeGcr(0x08,<sp/>t,<sp/>offset);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/>10;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Checksum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errorCode<sp/>==<sp/>0x9)<sp/>{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encodeGcr(checksum<sp/>^<sp/>0xFF,<sp/>t,<sp/>offset);<sp/></highlight><highlight class="comment">//<sp/>HEADER_BLOCK_CHECKSUM_ERROR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encodeGcr(checksum,<sp/>t,<sp/>offset);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/>10;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sector<sp/>and<sp/>track<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>encodeGcr((u8)s,<sp/>t,<sp/>offset);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/>10;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>encodeGcr((u8)t,<sp/>t,<sp/>offset);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/>10;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disk<sp/>ID<sp/>(two<sp/>bytes)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errorCode<sp/>==<sp/>0xB)<sp/>{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encodeGcr(id2<sp/>^<sp/>0xFF,<sp/>t,<sp/>offset);<sp/></highlight><highlight class="comment">//<sp/>DISK_ID_MISMATCH_ERROR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/>10;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encodeGcr(id1<sp/>^<sp/>0xFF,<sp/>t,<sp/>offset);<sp/></highlight><highlight class="comment">//<sp/>DISK_ID_MISMATCH_ERROR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encodeGcr(id2,<sp/>t,<sp/>offset);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/>10;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encodeGcr(id1,<sp/>t,<sp/>offset);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/>10;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0x0F,<sp/>0x0F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>encodeGcr(0x0F,<sp/>t,<sp/>offset);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/>10;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>encodeGcr(0x0F,<sp/>t,<sp/>offset);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/>10;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0x55<sp/>0x55<sp/>0x55<sp/>0x55<sp/>0x55<sp/>0x55<sp/>0x55<sp/>0x55<sp/>0x55</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>writeGapToTrack(t,<sp/>offset,<sp/>9);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/>9<sp/>*<sp/>8;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SYNC<sp/>(0xFF<sp/>0xFF<sp/>0xFF<sp/>0xFF<sp/>0xFF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errorCode<sp/>==<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeBitToTrack(t,<sp/>offset,<sp/>0,<sp/>40);<sp/></highlight><highlight class="comment">//<sp/>NO_SYNC_SEQUENCE_ERROR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeBitToTrack(t,<sp/>offset,<sp/>1,<sp/>40);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/>40;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Data<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errorCode<sp/>==<sp/>0x4)<sp/>{</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>error<sp/>value<sp/>is<sp/>important<sp/>here:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(1)<sp/>If<sp/>the<sp/>first<sp/>GCR<sp/>bit<sp/>equals<sp/>0,<sp/>the<sp/>sector<sp/>can<sp/>still<sp/>be<sp/>read.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(2)<sp/>If<sp/>the<sp/>first<sp/>GCR<sp/>bit<sp/>equals<sp/>1,<sp/>the<sp/>SYNC<sp/>sequence<sp/>continues.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>In<sp/>this<sp/>case,<sp/>the<sp/>bit<sp/>sequence<sp/>gets<sp/>out<sp/>of<sp/>sync<sp/>and<sp/>the<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>can&apos;t<sp/>be<sp/>read.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Hoxs64<sp/>and<sp/>VICE<sp/>3.2<sp/>write<sp/>0x00<sp/>which<sp/>results<sp/>in<sp/>option<sp/>(1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encodeGcr(0x00,<sp/>t,<sp/>offset);<sp/></highlight><highlight class="comment">//<sp/>DATA_BLOCK_NOT_FOUND_ERROR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encodeGcr(0x07,<sp/>t,<sp/>offset);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/>10;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Data<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>checksum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(isize<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>256;<sp/>i++,<sp/>offset<sp/>+=<sp/>10)<sp/>{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u8<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>=<sp/>fs.readByte(ts,<sp/>(u32)i);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>checksum<sp/>^=<sp/>byte;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encodeGcr(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">,<sp/>t,<sp/>offset);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Checksum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errorCode<sp/>==<sp/>0x5)<sp/>{</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encodeGcr(checksum<sp/>^<sp/>0xFF,<sp/>t,<sp/>offset);<sp/></highlight><highlight class="comment">//<sp/>DATA_BLOCK_CHECKSUM_ERROR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encodeGcr(checksum,<sp/>t,<sp/>offset);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/>10;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0x00,<sp/>0x00</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>encodeGcr(0x00,<sp/>t,<sp/>offset);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/>10;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>encodeGcr(0x00,<sp/>t,<sp/>offset);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/>10;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tail<sp/>gap<sp/>(0x55<sp/>0x55<sp/>...<sp/>0x55)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>writeGapToTrack(t,<sp/>offset,<sp/>tailGap);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/>tailGap<sp/>*<sp/>8;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>number<sp/>of<sp/>encoded<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>offset<sp/>-<sp/>start;</highlight></codeline>
<codeline lineno="680"><highlight class="normal">}</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/hoff/Retro/virtualc64/Emulator/Peripherals/Drive/Disk.cpp"/>
  </compounddef>
</doxygen>
