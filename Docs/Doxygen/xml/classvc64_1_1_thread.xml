<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="classvc64_1_1_thread" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>vc64::Thread</compoundname>
    <basecompoundref prot="public" virt="non-virtual">vc64::CoreObject</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">vc64::Suspendable</basecompoundref>
    <basecompoundref prot="private" virt="non-virtual">vc64::Wakeable</basecompoundref>
    <derivedcompoundref refid="classvc64_1_1_emulator" prot="public" virt="non-virtual">vc64::Emulator</derivedcompoundref>
    <includes refid="_thread_8h" local="no">Thread.h</includes>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classvc64_1_1_thread_1ac311e9df07e59900178dac5ada99293f" prot="protected" static="no" mutable="no">
        <type>std::thread</type>
        <definition>std::thread vc64::Thread::thread</definition>
        <argsstring></argsstring>
        <name>thread</name>
        <qualifiedname>vc64::Thread::thread</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="92" column="17" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvc64_1_1_thread_1ac6dc66f77d11416a3a77eac236fab2d5" prot="protected" static="no" mutable="no">
        <type><ref refid="_thread_types_8h_1a44fb3bfc9b3abc142d662a5ffb4e9cbc" kindref="member">EmulatorState</ref></type>
        <definition>EmulatorState vc64::Thread::state</definition>
        <argsstring></argsstring>
        <name>state</name>
        <qualifiedname>vc64::Thread::state</qualifiedname>
        <initializer>= <ref refid="_thread_types_8h_1a44fb3bfc9b3abc142d662a5ffb4e9cbca4038ca872e1ed104c16122c365bd3ca0" kindref="member">STATE_OFF</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="95" column="19" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvc64_1_1_thread_1a586fd7f3cfab7564f531b4e672e2c325" prot="protected" static="no" mutable="no">
        <type><ref refid="_thread_types_8h_1a44fb3bfc9b3abc142d662a5ffb4e9cbc" kindref="member">EmulatorState</ref></type>
        <definition>EmulatorState vc64::Thread::newState</definition>
        <argsstring></argsstring>
        <name>newState</name>
        <qualifiedname>vc64::Thread::newState</qualifiedname>
        <initializer>= <ref refid="_thread_types_8h_1a44fb3bfc9b3abc142d662a5ffb4e9cbca4038ca872e1ed104c16122c365bd3ca0" kindref="member">STATE_OFF</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="96" column="19" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvc64_1_1_thread_1a6245cfd499441722fbfe92a6a6e9e2f9" prot="protected" static="no" mutable="no">
        <type>std::atomic_flag</type>
        <definition>std::atomic_flag vc64::Thread::stateChangeRequest</definition>
        <argsstring></argsstring>
        <name>stateChangeRequest</name>
        <qualifiedname>vc64::Thread::stateChangeRequest</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="97" column="22" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" bodystart="97" bodyend="97"/>
      </memberdef>
      <memberdef kind="variable" id="classvc64_1_1_thread_1add697c2e819232e16a174151a0e88f76" prot="protected" static="no" mutable="no">
        <type>u8</type>
        <definition>u8 vc64::Thread::warp</definition>
        <argsstring></argsstring>
        <name>warp</name>
        <qualifiedname>vc64::Thread::warp</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="100" column="8" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvc64_1_1_thread_1adc7e644cdcf6961791e09007bf50a5dd" prot="protected" static="no" mutable="no">
        <type>u8</type>
        <definition>u8 vc64::Thread::track</definition>
        <argsstring></argsstring>
        <name>track</name>
        <qualifiedname>vc64::Thread::track</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="101" column="8" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvc64_1_1_thread_1affa69740d865ef5a2387760aa314d732" prot="protected" static="no" mutable="no">
        <type>isize</type>
        <definition>isize vc64::Thread::suspendCounter</definition>
        <argsstring></argsstring>
        <name>suspendCounter</name>
        <qualifiedname>vc64::Thread::suspendCounter</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="104" column="11" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvc64_1_1_thread_1aff97cfba423cda9d117806987571142f" prot="protected" static="no" mutable="no">
        <type>isize</type>
        <definition>isize vc64::Thread::frameCounter</definition>
        <argsstring></argsstring>
        <name>frameCounter</name>
        <qualifiedname>vc64::Thread::frameCounter</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="105" column="11" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvc64_1_1_thread_1a8cb827db76afc0c063a9c2e24445576a" prot="protected" static="no" mutable="no">
        <type>isize</type>
        <definition>isize vc64::Thread::statsCounter</definition>
        <argsstring></argsstring>
        <name>statsCounter</name>
        <qualifiedname>vc64::Thread::statsCounter</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="106" column="11" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvc64_1_1_thread_1a530f52753a490f85f97467c33cb39f60" prot="protected" static="no" mutable="no">
        <type>util::Time</type>
        <definition>util::Time vc64::Thread::baseTime</definition>
        <argsstring></argsstring>
        <name>baseTime</name>
        <qualifiedname>vc64::Thread::baseTime</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="109" column="16" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvc64_1_1_thread_1abb3d4857ba4b9f7fb3b9d4d7379fb868" prot="protected" static="no" mutable="no">
        <type>util::Clock</type>
        <definition>util::Clock vc64::Thread::nonstopClock</definition>
        <argsstring></argsstring>
        <name>nonstopClock</name>
        <qualifiedname>vc64::Thread::nonstopClock</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="112" column="17" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvc64_1_1_thread_1afd3b266fe3bc6f0dbb59cd63ebb91738" prot="protected" static="no" mutable="no">
        <type>util::Clock</type>
        <definition>util::Clock vc64::Thread::loadClock</definition>
        <argsstring></argsstring>
        <name>loadClock</name>
        <qualifiedname>vc64::Thread::loadClock</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="113" column="17" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvc64_1_1_thread_1a6517bdebcc1fe3bb5268aac1dcda4e28" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double vc64::Thread::cpuLoad</definition>
        <argsstring></argsstring>
        <name>cpuLoad</name>
        <qualifiedname>vc64::Thread::cpuLoad</qualifiedname>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="116" column="12" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvc64_1_1_thread_1aa03a9c8511f7c850ec94f4b739d9de4e" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double vc64::Thread::fps</definition>
        <argsstring></argsstring>
        <name>fps</name>
        <qualifiedname>vc64::Thread::fps</qualifiedname>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="117" column="12" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvc64_1_1_thread_1a5b071e7409fd94cdbc05b321a053df0d" prot="protected" static="no" mutable="no">
        <type>util::Clock</type>
        <definition>util::Clock vc64::Thread::wakeupClock</definition>
        <argsstring></argsstring>
        <name>wakeupClock</name>
        <qualifiedname>vc64::Thread::wakeupClock</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="120" column="17" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" bodystart="120" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classvc64_1_1_thread_1ae330ef49a6f9fc70037d8fc30314f481" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vc64::Thread::Thread</definition>
        <argsstring>()</argsstring>
        <name>Thread</name>
        <qualifiedname>vc64::Thread::Thread</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="129" column="5" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.cpp" bodystart="20" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classvc64_1_1_thread_1a52cd759ea0061e49d83e430ac3cca34d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vc64::Thread::~Thread</definition>
        <argsstring>()</argsstring>
        <name>~Thread</name>
        <qualifiedname>vc64::Thread::~Thread</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="130" column="5" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.cpp" bodystart="25" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classvc64_1_1_thread_1a7c36c691bb9e6b0f1efeff0095900d36" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * vc64::Thread::getDescription</definition>
        <argsstring>() const override</argsstring>
        <name>getDescription</name>
        <qualifiedname>vc64::Thread::getDescription</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="132" column="16" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" bodystart="132" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classvc64_1_1_thread_1abb2e3097e4c771d351955db940f3ac3b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vc64::Thread::isLaunched</definition>
        <argsstring>() const</argsstring>
        <name>isLaunched</name>
        <qualifiedname>vc64::Thread::isLaunched</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="135" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" bodystart="135" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classvc64_1_1_thread_1a44599ad0b0a8e3424f71f66942827bbe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vc64::Thread::isEmulatorThread</definition>
        <argsstring>() const</argsstring>
        <name>isEmulatorThread</name>
        <qualifiedname>vc64::Thread::isEmulatorThread</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="153" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" bodystart="153" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classvc64_1_1_thread_1ab1b2eadc27596031e3484e65ede0e24e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vc64::Thread::switchState</definition>
        <argsstring>(EmulatorState newState)</argsstring>
        <name>switchState</name>
        <qualifiedname>vc64::Thread::switchState</qualifiedname>
        <param>
          <type><ref refid="_thread_types_8h_1a44fb3bfc9b3abc142d662a5ffb4e9cbc" kindref="member">EmulatorState</ref></type>
          <declname>newState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="156" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.cpp" bodystart="157" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="classvc64_1_1_thread_1a6545b249dacdb26eac8b104c07f3bbc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vc64::Thread::suspend</definition>
        <argsstring>() override</argsstring>
        <name>suspend</name>
        <qualifiedname>vc64::Thread::suspend</qualifiedname>
        <briefdescription>
<para>Suspends the thread. </para>
        </briefdescription>
        <detaileddescription>
<para>The thread is temporarily suspended </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="206" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.cpp" bodystart="462" bodyend="478"/>
      </memberdef>
      <memberdef kind="function" id="classvc64_1_1_thread_1a294d7de030baf69ae6f96f9f6bfc8ba6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vc64::Thread::resume</definition>
        <argsstring>() override</argsstring>
        <name>resume</name>
        <qualifiedname>vc64::Thread::resume</qualifiedname>
        <briefdescription>
<para>Resumes the thread. </para>
        </briefdescription>
        <detaileddescription>
<para>The thread is put back in running state </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="211" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.cpp" bodystart="481" bodyend="497"/>
      </memberdef>
      <memberdef kind="function" id="classvc64_1_1_thread_1a969ebe9029e7d5d94029029604fa0579" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vc64::Thread::isPoweredOn</definition>
        <argsstring>() const</argsstring>
        <name>isPoweredOn</name>
        <qualifiedname>vc64::Thread::isPoweredOn</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="213" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" bodystart="213" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="classvc64_1_1_thread_1a845ba18ef192bcc7c8164ac4d88ba7f9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vc64::Thread::isPoweredOff</definition>
        <argsstring>() const</argsstring>
        <name>isPoweredOff</name>
        <qualifiedname>vc64::Thread::isPoweredOff</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="214" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" bodystart="214" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="classvc64_1_1_thread_1a9305fbb4323ed01e5832b38ba102621e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vc64::Thread::isPaused</definition>
        <argsstring>() const</argsstring>
        <name>isPaused</name>
        <qualifiedname>vc64::Thread::isPaused</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="215" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" bodystart="215" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="classvc64_1_1_thread_1adaf7b62cc51e5504d0bc8aa82305a971" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vc64::Thread::isRunning</definition>
        <argsstring>() const</argsstring>
        <name>isRunning</name>
        <qualifiedname>vc64::Thread::isRunning</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="216" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" bodystart="216" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classvc64_1_1_thread_1adc8cf1a582370834f6336b18ab465b9c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vc64::Thread::isSuspended</definition>
        <argsstring>() const</argsstring>
        <name>isSuspended</name>
        <qualifiedname>vc64::Thread::isSuspended</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="217" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" bodystart="217" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="classvc64_1_1_thread_1adb50659a0ba240a4f8f17dd3311dbf10" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vc64::Thread::isHalted</definition>
        <argsstring>() const</argsstring>
        <name>isHalted</name>
        <qualifiedname>vc64::Thread::isHalted</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="218" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" bodystart="218" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="classvc64_1_1_thread_1ad5e22aed6ad2f8c6dc093933ab3397e0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vc64::Thread::isWarping</definition>
        <argsstring>() const</argsstring>
        <name>isWarping</name>
        <qualifiedname>vc64::Thread::isWarping</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="219" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" bodystart="219" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="classvc64_1_1_thread_1aa468375c1a36726c1bd2f5ef3f8aa5c8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vc64::Thread::isTracking</definition>
        <argsstring>() const</argsstring>
        <name>isTracking</name>
        <qualifiedname>vc64::Thread::isTracking</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="220" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" bodystart="220" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="classvc64_1_1_thread_1a402cc240e9ef0e23805f5e83fe6fcadc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vc64::Thread::powerOn</definition>
        <argsstring>()</argsstring>
        <name>powerOn</name>
        <qualifiedname>vc64::Thread::powerOn</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="222" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.cpp" bodystart="307" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="classvc64_1_1_thread_1a3354882aca279889da131e17a27f2fb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vc64::Thread::powerOff</definition>
        <argsstring>()</argsstring>
        <name>powerOff</name>
        <qualifiedname>vc64::Thread::powerOff</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="223" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.cpp" bodystart="318" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="classvc64_1_1_thread_1acedeec8fa8abf3fbca0787e7f74d5a77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vc64::Thread::run</definition>
        <argsstring>() throws</argsstring>
        <name>run</name>
        <qualifiedname>vc64::Thread::run</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="224" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.cpp" bodystart="329" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="classvc64_1_1_thread_1a2ff1d669a56b3a8b60ea28377596b115" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vc64::Thread::pause</definition>
        <argsstring>()</argsstring>
        <name>pause</name>
        <qualifiedname>vc64::Thread::pause</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="225" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.cpp" bodystart="343" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="classvc64_1_1_thread_1ad33572df8f1abf18f26d873e94770ee2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vc64::Thread::stopAndGo</definition>
        <argsstring>()</argsstring>
        <name>stopAndGo</name>
        <qualifiedname>vc64::Thread::stopAndGo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="226" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.cpp" bodystart="354" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="classvc64_1_1_thread_1ac243c85ffa6c8e1c6739220b4c154f1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vc64::Thread::halt</definition>
        <argsstring>()</argsstring>
        <name>halt</name>
        <qualifiedname>vc64::Thread::halt</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="227" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.cpp" bodystart="360" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="classvc64_1_1_thread_1a1fe71fe34e101ab3d3eddf814431810f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vc64::Thread::warpOn</definition>
        <argsstring>(isize source=0)</argsstring>
        <name>warpOn</name>
        <qualifiedname>vc64::Thread::warpOn</qualifiedname>
        <param>
          <type>isize</type>
          <declname>source</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="229" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.cpp" bodystart="367" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="classvc64_1_1_thread_1a076c9090fe06a5d74517f2c24b0a9cf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vc64::Thread::warpOff</definition>
        <argsstring>(isize source=0)</argsstring>
        <name>warpOff</name>
        <qualifiedname>vc64::Thread::warpOff</qualifiedname>
        <param>
          <type>isize</type>
          <declname>source</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="230" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.cpp" bodystart="382" bodyend="394"/>
      </memberdef>
      <memberdef kind="function" id="classvc64_1_1_thread_1af416bd7a6b202f1c748fbbce58ab8212" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vc64::Thread::trackOn</definition>
        <argsstring>(isize source=0)</argsstring>
        <name>trackOn</name>
        <qualifiedname>vc64::Thread::trackOn</qualifiedname>
        <param>
          <type>isize</type>
          <declname>source</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="231" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.cpp" bodystart="397" bodyend="408"/>
      </memberdef>
      <memberdef kind="function" id="classvc64_1_1_thread_1abb49fc4286a1ceb663c5ca659345f668" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vc64::Thread::trackOff</definition>
        <argsstring>(isize source=0)</argsstring>
        <name>trackOff</name>
        <qualifiedname>vc64::Thread::trackOff</qualifiedname>
        <param>
          <type>isize</type>
          <declname>source</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="232" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.cpp" bodystart="411" bodyend="422"/>
      </memberdef>
      <memberdef kind="function" id="classvc64_1_1_thread_1a227119e98bac51913e201f3e55eeb13f" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void vc64::Thread::_powerOn</definition>
        <argsstring>()=0</argsstring>
        <name>_powerOn</name>
        <qualifiedname>vc64::Thread::_powerOn</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="235" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classvc64_1_1_thread_1a4f8e9f99cd6442180f1a080a3898307a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void vc64::Thread::_powerOff</definition>
        <argsstring>()=0</argsstring>
        <name>_powerOff</name>
        <qualifiedname>vc64::Thread::_powerOff</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="236" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classvc64_1_1_thread_1a3e152c76dacb53e4ea75fe1b3124d667" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void vc64::Thread::_pause</definition>
        <argsstring>()=0</argsstring>
        <name>_pause</name>
        <qualifiedname>vc64::Thread::_pause</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="237" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classvc64_1_1_thread_1a245c1ef7bdee27b83ff74d6dd9cbf11e" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void vc64::Thread::_run</definition>
        <argsstring>()=0</argsstring>
        <name>_run</name>
        <qualifiedname>vc64::Thread::_run</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="238" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classvc64_1_1_thread_1a093c9c962af60bf50b92891edeacb150" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void vc64::Thread::_halt</definition>
        <argsstring>()=0</argsstring>
        <name>_halt</name>
        <qualifiedname>vc64::Thread::_halt</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="239" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classvc64_1_1_thread_1ac68cb5a382ab25f8385a719349408adb" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void vc64::Thread::_warpOn</definition>
        <argsstring>()=0</argsstring>
        <name>_warpOn</name>
        <qualifiedname>vc64::Thread::_warpOn</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="240" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classvc64_1_1_thread_1a3b4b581106f7e41650feba6f5f460032" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void vc64::Thread::_warpOff</definition>
        <argsstring>()=0</argsstring>
        <name>_warpOff</name>
        <qualifiedname>vc64::Thread::_warpOff</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="241" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classvc64_1_1_thread_1a246fc110b479f20ef96bc291caf4fcd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void vc64::Thread::_trackOn</definition>
        <argsstring>()=0</argsstring>
        <name>_trackOn</name>
        <qualifiedname>vc64::Thread::_trackOn</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="242" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classvc64_1_1_thread_1a228e764bc195ec804fabf6c94d68bbfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void vc64::Thread::_trackOff</definition>
        <argsstring>()=0</argsstring>
        <name>_trackOff</name>
        <qualifiedname>vc64::Thread::_trackOff</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="243" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classvc64_1_1_thread_1a4bf669b15db347f665f0459d18a90680" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vc64::Thread::wakeUp</definition>
        <argsstring>()</argsstring>
        <name>wakeUp</name>
        <qualifiedname>vc64::Thread::wakeUp</qualifiedname>
        <briefdescription>
<para>Awakes the thread. </para>
        </briefdescription>
        <detaileddescription>
<para>Wakes up the emulator thread. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="265" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.cpp" bodystart="455" bodyend="459"/>
      </memberdef>
      <memberdef kind="function" id="classvc64_1_1_thread_1aaafd7d4b381fb2d712a29c026ec61d1a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vc64::Thread::join</definition>
        <argsstring>()</argsstring>
        <name>join</name>
        <qualifiedname>vc64::Thread::join</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="268" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" bodystart="268" bodyend="268"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="classvc64_1_1_thread_1a1cda1152500929bc4151a4899fc4622b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vc64::Thread::launch</definition>
        <argsstring>()</argsstring>
        <name>launch</name>
        <qualifiedname>vc64::Thread::launch</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="140" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.cpp" bodystart="31" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classvc64_1_1_thread_1a711e719011ca9260df63f347474db7e1" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vc64::Thread::assertLaunched</definition>
        <argsstring>()</argsstring>
        <name>assertLaunched</name>
        <qualifiedname>vc64::Thread::assertLaunched</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="143" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.cpp" bodystart="42" bodyend="49"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classvc64_1_1_thread_1a0b4371720814e21e844b7931e171d187" prot="private" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void vc64::Thread::update</definition>
        <argsstring>()=0</argsstring>
        <name>update</name>
        <qualifiedname>vc64::Thread::update</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="161" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classvc64_1_1_thread_1acfa9e168581c80a02fc0f259a186b2d5" prot="private" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>isize</type>
        <definition>virtual isize vc64::Thread::missingFrames</definition>
        <argsstring>() const =0</argsstring>
        <name>missingFrames</name>
        <qualifiedname>vc64::Thread::missingFrames</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="164" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classvc64_1_1_thread_1ad6ca390c15c9e5ccddc4111e58fb3bea" prot="private" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>double</type>
        <definition>virtual double vc64::Thread::refreshRate</definition>
        <argsstring>() const =0</argsstring>
        <name>refreshRate</name>
        <qualifiedname>vc64::Thread::refreshRate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="167" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classvc64_1_1_thread_1a21b10df0d3c4635600a6c1c7c68929c6" prot="private" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void vc64::Thread::computeFrame</definition>
        <argsstring>()=0</argsstring>
        <name>computeFrame</name>
        <qualifiedname>vc64::Thread::computeFrame</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="170" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classvc64_1_1_thread_1a7a73c071791bc69c8880b6db9e564016" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vc64::Thread::resync</definition>
        <argsstring>()</argsstring>
        <name>resync</name>
        <qualifiedname>vc64::Thread::resync</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="173" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.cpp" bodystart="52" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classvc64_1_1_thread_1ac2865383288f5181a554716bccafb8ad" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vc64::Thread::runLoop</definition>
        <argsstring>()</argsstring>
        <name>runLoop</name>
        <qualifiedname>vc64::Thread::runLoop</qualifiedname>
        <briefdescription>
<para>The thread&apos;s main entry point. </para>
        </briefdescription>
        <detaileddescription>
<para>this function is called when the thread is created. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="179" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.cpp" bodystart="128" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classvc64_1_1_thread_1a647dde295b12dd7797d01e8dd029810f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vc64::Thread::execute</definition>
        <argsstring>()</argsstring>
        <name>execute</name>
        <qualifiedname>vc64::Thread::execute</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="182" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.cpp" bodystart="59" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classvc64_1_1_thread_1a265039756e3ed067246bf703c390169a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vc64::Thread::sleep</definition>
        <argsstring>()</argsstring>
        <name>sleep</name>
        <qualifiedname>vc64::Thread::sleep</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="185" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.cpp" bodystart="96" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classvc64_1_1_thread_1af298cf0a207b180dac76416ec3f5535c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vc64::Thread::computeStats</definition>
        <argsstring>()</argsstring>
        <name>computeStats</name>
        <qualifiedname>vc64::Thread::computeStats</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="194" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.cpp" bodystart="109" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classvc64_1_1_thread_1a0d62dc59ce44ac85ac8bfb04c5f3b78d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vc64::Thread::changeStateTo</definition>
        <argsstring>(EmulatorState requestedState)</argsstring>
        <name>changeStateTo</name>
        <qualifiedname>vc64::Thread::changeStateTo</qualifiedname>
        <param>
          <type><ref refid="_thread_types_8h_1a44fb3bfc9b3abc142d662a5ffb4e9cbc" kindref="member">EmulatorState</ref></type>
          <declname>requestedState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="248" column="10" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.cpp" bodystart="425" bodyend="452"/>
      </memberdef>
      <memberdef kind="function" id="classvc64_1_1_thread_1a068a40c4fc195cf645dc4ebbba2ffeec" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void vc64::Thread::isReady</definition>
        <argsstring>()</argsstring>
        <name>isReady</name>
        <qualifiedname>vc64::Thread::isReady</qualifiedname>
        <exceptions> throws = 0</exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="253" column="18"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Implements the emulator&apos;s state model. </para>
    </briefdescription>
    <detaileddescription>
<para>This class is one of the base classes of the Emulator class and provides the basic functionality to manage the emulator state. It provides functions to launch the emulator thread, to query it&apos;s current state, and to switch to another state. </para>
    </detaileddescription>
    <location file="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" line="87" column="1" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Base/Thread.h" bodystart="87" bodyend="269"/>
    <listofallmembers>
      <member refid="classvc64_1_1_thread_1a093c9c962af60bf50b92891edeacb150" prot="public" virt="pure-virtual"><scope>vc64::Thread</scope><name>_halt</name></member>
      <member refid="classvc64_1_1_thread_1a3e152c76dacb53e4ea75fe1b3124d667" prot="public" virt="pure-virtual"><scope>vc64::Thread</scope><name>_pause</name></member>
      <member refid="classvc64_1_1_thread_1a4f8e9f99cd6442180f1a080a3898307a" prot="public" virt="pure-virtual"><scope>vc64::Thread</scope><name>_powerOff</name></member>
      <member refid="classvc64_1_1_thread_1a227119e98bac51913e201f3e55eeb13f" prot="public" virt="pure-virtual"><scope>vc64::Thread</scope><name>_powerOn</name></member>
      <member refid="classvc64_1_1_thread_1a245c1ef7bdee27b83ff74d6dd9cbf11e" prot="public" virt="pure-virtual"><scope>vc64::Thread</scope><name>_run</name></member>
      <member refid="classvc64_1_1_thread_1a228e764bc195ec804fabf6c94d68bbfb" prot="public" virt="pure-virtual"><scope>vc64::Thread</scope><name>_trackOff</name></member>
      <member refid="classvc64_1_1_thread_1a246fc110b479f20ef96bc291caf4fcd3" prot="public" virt="pure-virtual"><scope>vc64::Thread</scope><name>_trackOn</name></member>
      <member refid="classvc64_1_1_thread_1a3b4b581106f7e41650feba6f5f460032" prot="public" virt="pure-virtual"><scope>vc64::Thread</scope><name>_warpOff</name></member>
      <member refid="classvc64_1_1_thread_1ac68cb5a382ab25f8385a719349408adb" prot="public" virt="pure-virtual"><scope>vc64::Thread</scope><name>_warpOn</name></member>
      <member refid="classvc64_1_1_thread_1a711e719011ca9260df63f347474db7e1" prot="protected" virt="non-virtual"><scope>vc64::Thread</scope><name>assertLaunched</name></member>
      <member refid="classvc64_1_1_thread_1a530f52753a490f85f97467c33cb39f60" prot="protected" virt="non-virtual"><scope>vc64::Thread</scope><name>baseTime</name></member>
      <member refid="classvc64_1_1_thread_1a0d62dc59ce44ac85ac8bfb04c5f3b78d" prot="private" virt="non-virtual"><scope>vc64::Thread</scope><name>changeStateTo</name></member>
      <member refid="classvc64_1_1_thread_1a21b10df0d3c4635600a6c1c7c68929c6" prot="private" virt="pure-virtual"><scope>vc64::Thread</scope><name>computeFrame</name></member>
      <member refid="classvc64_1_1_thread_1af298cf0a207b180dac76416ec3f5535c" prot="private" virt="non-virtual"><scope>vc64::Thread</scope><name>computeStats</name></member>
      <member refid="classvc64_1_1_thread_1a6517bdebcc1fe3bb5268aac1dcda4e28" prot="protected" virt="non-virtual"><scope>vc64::Thread</scope><name>cpuLoad</name></member>
      <member refid="classvc64_1_1_thread_1a647dde295b12dd7797d01e8dd029810f" prot="private" virt="non-virtual"><scope>vc64::Thread</scope><name>execute</name></member>
      <member refid="classvc64_1_1_thread_1aa03a9c8511f7c850ec94f4b739d9de4e" prot="protected" virt="non-virtual"><scope>vc64::Thread</scope><name>fps</name></member>
      <member refid="classvc64_1_1_thread_1aff97cfba423cda9d117806987571142f" prot="protected" virt="non-virtual"><scope>vc64::Thread</scope><name>frameCounter</name></member>
      <member refid="classvc64_1_1_thread_1a7c36c691bb9e6b0f1efeff0095900d36" prot="public" virt="non-virtual"><scope>vc64::Thread</scope><name>getDescription</name></member>
      <member refid="classvc64_1_1_thread_1ac243c85ffa6c8e1c6739220b4c154f1e" prot="public" virt="non-virtual"><scope>vc64::Thread</scope><name>halt</name></member>
      <member refid="classvc64_1_1_thread_1a44599ad0b0a8e3424f71f66942827bbe" prot="public" virt="non-virtual"><scope>vc64::Thread</scope><name>isEmulatorThread</name></member>
      <member refid="classvc64_1_1_thread_1adb50659a0ba240a4f8f17dd3311dbf10" prot="public" virt="non-virtual"><scope>vc64::Thread</scope><name>isHalted</name></member>
      <member refid="classvc64_1_1_thread_1abb2e3097e4c771d351955db940f3ac3b" prot="public" virt="non-virtual"><scope>vc64::Thread</scope><name>isLaunched</name></member>
      <member refid="classvc64_1_1_thread_1a9305fbb4323ed01e5832b38ba102621e" prot="public" virt="non-virtual"><scope>vc64::Thread</scope><name>isPaused</name></member>
      <member refid="classvc64_1_1_thread_1a845ba18ef192bcc7c8164ac4d88ba7f9" prot="public" virt="non-virtual"><scope>vc64::Thread</scope><name>isPoweredOff</name></member>
      <member refid="classvc64_1_1_thread_1a969ebe9029e7d5d94029029604fa0579" prot="public" virt="non-virtual"><scope>vc64::Thread</scope><name>isPoweredOn</name></member>
      <member refid="classvc64_1_1_thread_1a068a40c4fc195cf645dc4ebbba2ffeec" prot="private" virt="virtual"><scope>vc64::Thread</scope><name>isReady</name></member>
      <member refid="classvc64_1_1_thread_1adaf7b62cc51e5504d0bc8aa82305a971" prot="public" virt="non-virtual"><scope>vc64::Thread</scope><name>isRunning</name></member>
      <member refid="classvc64_1_1_thread_1adc8cf1a582370834f6336b18ab465b9c" prot="public" virt="non-virtual"><scope>vc64::Thread</scope><name>isSuspended</name></member>
      <member refid="classvc64_1_1_thread_1aa468375c1a36726c1bd2f5ef3f8aa5c8" prot="public" virt="non-virtual"><scope>vc64::Thread</scope><name>isTracking</name></member>
      <member refid="classvc64_1_1_thread_1ad5e22aed6ad2f8c6dc093933ab3397e0" prot="public" virt="non-virtual"><scope>vc64::Thread</scope><name>isWarping</name></member>
      <member refid="classvc64_1_1_thread_1aaafd7d4b381fb2d712a29c026ec61d1a" prot="public" virt="non-virtual"><scope>vc64::Thread</scope><name>join</name></member>
      <member refid="classvc64_1_1_thread_1a1cda1152500929bc4151a4899fc4622b" prot="protected" virt="non-virtual"><scope>vc64::Thread</scope><name>launch</name></member>
      <member refid="classvc64_1_1_thread_1afd3b266fe3bc6f0dbb59cd63ebb91738" prot="protected" virt="non-virtual"><scope>vc64::Thread</scope><name>loadClock</name></member>
      <member refid="classvc64_1_1_thread_1acfa9e168581c80a02fc0f259a186b2d5" prot="private" virt="pure-virtual"><scope>vc64::Thread</scope><name>missingFrames</name></member>
      <member refid="classvc64_1_1_thread_1a586fd7f3cfab7564f531b4e672e2c325" prot="protected" virt="non-virtual"><scope>vc64::Thread</scope><name>newState</name></member>
      <member refid="classvc64_1_1_thread_1abb3d4857ba4b9f7fb3b9d4d7379fb868" prot="protected" virt="non-virtual"><scope>vc64::Thread</scope><name>nonstopClock</name></member>
      <member refid="classvc64_1_1_thread_1a2ff1d669a56b3a8b60ea28377596b115" prot="public" virt="non-virtual"><scope>vc64::Thread</scope><name>pause</name></member>
      <member refid="classvc64_1_1_thread_1a3354882aca279889da131e17a27f2fb3" prot="public" virt="non-virtual"><scope>vc64::Thread</scope><name>powerOff</name></member>
      <member refid="classvc64_1_1_thread_1a402cc240e9ef0e23805f5e83fe6fcadc" prot="public" virt="non-virtual"><scope>vc64::Thread</scope><name>powerOn</name></member>
      <member refid="classvc64_1_1_core_object_1ab05f272c10fd455a9cafbb667293d044" prot="public" virt="virtual"><scope>vc64::Thread</scope><name>prefix</name></member>
      <member refid="classvc64_1_1_thread_1ad6ca390c15c9e5ccddc4111e58fb3bea" prot="private" virt="pure-virtual"><scope>vc64::Thread</scope><name>refreshRate</name></member>
      <member refid="classvc64_1_1_thread_1a294d7de030baf69ae6f96f9f6bfc8ba6" prot="public" virt="non-virtual"><scope>vc64::Thread</scope><name>resume</name></member>
      <member refid="classvc64_1_1_thread_1a7a73c071791bc69c8880b6db9e564016" prot="private" virt="non-virtual"><scope>vc64::Thread</scope><name>resync</name></member>
      <member refid="classvc64_1_1_thread_1acedeec8fa8abf3fbca0787e7f74d5a77" prot="public" virt="non-virtual"><scope>vc64::Thread</scope><name>run</name></member>
      <member refid="classvc64_1_1_thread_1ac2865383288f5181a554716bccafb8ad" prot="private" virt="non-virtual"><scope>vc64::Thread</scope><name>runLoop</name></member>
      <member refid="classvc64_1_1_thread_1a265039756e3ed067246bf703c390169a" prot="private" virt="non-virtual"><scope>vc64::Thread</scope><name>sleep</name></member>
      <member refid="classvc64_1_1_thread_1ac6dc66f77d11416a3a77eac236fab2d5" prot="protected" virt="non-virtual"><scope>vc64::Thread</scope><name>state</name></member>
      <member refid="classvc64_1_1_thread_1a6245cfd499441722fbfe92a6a6e9e2f9" prot="protected" virt="non-virtual"><scope>vc64::Thread</scope><name>stateChangeRequest</name></member>
      <member refid="classvc64_1_1_thread_1a8cb827db76afc0c063a9c2e24445576a" prot="protected" virt="non-virtual"><scope>vc64::Thread</scope><name>statsCounter</name></member>
      <member refid="classvc64_1_1_thread_1ad33572df8f1abf18f26d873e94770ee2" prot="public" virt="non-virtual"><scope>vc64::Thread</scope><name>stopAndGo</name></member>
      <member refid="classvc64_1_1_thread_1a6545b249dacdb26eac8b104c07f3bbc2" prot="public" virt="non-virtual"><scope>vc64::Thread</scope><name>suspend</name></member>
      <member refid="classvc64_1_1_suspendable_1a7f9f608d5b2b9b6e944176cde77b8f85" prot="public" virt="non-virtual"><scope>vc64::Thread</scope><name>Suspendable</name></member>
      <member refid="classvc64_1_1_thread_1affa69740d865ef5a2387760aa314d732" prot="protected" virt="non-virtual"><scope>vc64::Thread</scope><name>suspendCounter</name></member>
      <member refid="classvc64_1_1_thread_1ab1b2eadc27596031e3484e65ede0e24e" prot="public" virt="non-virtual"><scope>vc64::Thread</scope><name>switchState</name></member>
      <member refid="classvc64_1_1_thread_1ac311e9df07e59900178dac5ada99293f" prot="protected" virt="non-virtual"><scope>vc64::Thread</scope><name>thread</name></member>
      <member refid="classvc64_1_1_thread_1ae330ef49a6f9fc70037d8fc30314f481" prot="public" virt="non-virtual"><scope>vc64::Thread</scope><name>Thread</name></member>
      <member refid="classvc64_1_1_thread_1adc7e644cdcf6961791e09007bf50a5dd" prot="protected" virt="non-virtual"><scope>vc64::Thread</scope><name>track</name></member>
      <member refid="classvc64_1_1_thread_1abb49fc4286a1ceb663c5ca659345f668" prot="public" virt="non-virtual"><scope>vc64::Thread</scope><name>trackOff</name></member>
      <member refid="classvc64_1_1_thread_1af416bd7a6b202f1c748fbbce58ab8212" prot="public" virt="non-virtual"><scope>vc64::Thread</scope><name>trackOn</name></member>
      <member refid="classvc64_1_1_thread_1a0b4371720814e21e844b7931e171d187" prot="private" virt="pure-virtual"><scope>vc64::Thread</scope><name>update</name></member>
      <member refid="classvc64_1_1_core_object_1aa17ada334edf800da9ea768925ffa885" prot="protected" virt="non-virtual"><scope>vc64::Thread</scope><name>verbose</name></member>
      <member refid="classvc64_1_1_thread_1a4bf669b15db347f665f0459d18a90680" prot="public" virt="non-virtual"><scope>vc64::Thread</scope><name>wakeUp</name></member>
      <member refid="classvc64_1_1_thread_1a5b071e7409fd94cdbc05b321a053df0d" prot="protected" virt="non-virtual"><scope>vc64::Thread</scope><name>wakeupClock</name></member>
      <member refid="classvc64_1_1_thread_1add697c2e819232e16a174151a0e88f76" prot="protected" virt="non-virtual"><scope>vc64::Thread</scope><name>warp</name></member>
      <member refid="classvc64_1_1_thread_1a076c9090fe06a5d74517f2c24b0a9cf5" prot="public" virt="non-virtual"><scope>vc64::Thread</scope><name>warpOff</name></member>
      <member refid="classvc64_1_1_thread_1a1fe71fe34e101ab3d3eddf814431810f" prot="public" virt="non-virtual"><scope>vc64::Thread</scope><name>warpOn</name></member>
      <member refid="classvc64_1_1_core_object_1a5ef9c1d437ebdeb30df4125cf867e004" prot="public" virt="virtual"><scope>vc64::Thread</scope><name>~CoreObject</name></member>
      <member refid="classvc64_1_1_suspendable_1a35809d3a4c20db1f096e8dc5c78c49b9" prot="public" virt="virtual"><scope>vc64::Thread</scope><name>~Suspendable</name></member>
      <member refid="classvc64_1_1_thread_1a52cd759ea0061e49d83e430ac3cca34d" prot="public" virt="non-virtual"><scope>vc64::Thread</scope><name>~Thread</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
