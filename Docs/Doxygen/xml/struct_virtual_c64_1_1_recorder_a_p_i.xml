<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="struct_virtual_c64_1_1_recorder_a_p_i" kind="struct" language="C++" prot="public">
    <compoundname>VirtualC64::RecorderAPI</compoundname>
    <basecompoundref prot="public" virt="non-virtual">vc64::API</basecompoundref>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_virtual_c64_1_1_recorder_a_p_i_1ab949cb419c8d6e4a4f3307aceed0fc8e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const string</type>
        <definition>const string VirtualC64::RecorderAPI::getExecPath</definition>
        <argsstring>() const</argsstring>
        <name>getExecPath</name>
        <qualifiedname>VirtualC64::RecorderAPI::getExecPath</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="459" column="22" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.cpp" bodystart="799" bodyend="802"/>
      </memberdef>
      <memberdef kind="function" id="struct_virtual_c64_1_1_recorder_a_p_i_1a5bca0ee395a9a9cbc2f31598bb3d56b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VirtualC64::RecorderAPI::setExecPath</definition>
        <argsstring>(const string &amp;path)</argsstring>
        <name>setExecPath</name>
        <qualifiedname>VirtualC64::RecorderAPI::setExecPath</qualifiedname>
        <param>
          <type>const string &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="460" column="14" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.cpp" bodystart="804" bodyend="807"/>
      </memberdef>
      <memberdef kind="function" id="struct_virtual_c64_1_1_recorder_a_p_i_1ac4838c7804da14bb0769c4b514141fd2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool VirtualC64::RecorderAPI::available</definition>
        <argsstring>() const</argsstring>
        <name>available</name>
        <qualifiedname>VirtualC64::RecorderAPI::available</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="461" column="14" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.cpp" bodystart="810" bodyend="813"/>
      </memberdef>
      <memberdef kind="function" id="struct_virtual_c64_1_1_recorder_a_p_i_1a4be276a299aaa99cb6b9370461ace086" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>util::Time</type>
        <definition>util::Time VirtualC64::RecorderAPI::getDuration</definition>
        <argsstring>() const</argsstring>
        <name>getDuration</name>
        <qualifiedname>VirtualC64::RecorderAPI::getDuration</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="462" column="20" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.cpp" bodystart="816" bodyend="819"/>
      </memberdef>
      <memberdef kind="function" id="struct_virtual_c64_1_1_recorder_a_p_i_1a025a41d5ba9ae65016b8aee125d0992e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>isize</type>
        <definition>isize VirtualC64::RecorderAPI::getFrameRate</definition>
        <argsstring>() const</argsstring>
        <name>getFrameRate</name>
        <qualifiedname>VirtualC64::RecorderAPI::getFrameRate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="463" column="15" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.cpp" bodystart="822" bodyend="825"/>
      </memberdef>
      <memberdef kind="function" id="struct_virtual_c64_1_1_recorder_a_p_i_1aa116e379e6c8c089796283fb9c2d05b0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>isize</type>
        <definition>isize VirtualC64::RecorderAPI::getBitRate</definition>
        <argsstring>() const</argsstring>
        <name>getBitRate</name>
        <qualifiedname>VirtualC64::RecorderAPI::getBitRate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="464" column="15" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.cpp" bodystart="827" bodyend="830"/>
      </memberdef>
      <memberdef kind="function" id="struct_virtual_c64_1_1_recorder_a_p_i_1a6e3a18a219aea3822c12a9bb945c8546" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>isize</type>
        <definition>isize VirtualC64::RecorderAPI::getSampleRate</definition>
        <argsstring>() const</argsstring>
        <name>getSampleRate</name>
        <qualifiedname>VirtualC64::RecorderAPI::getSampleRate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="465" column="15" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.cpp" bodystart="832" bodyend="835"/>
      </memberdef>
      <memberdef kind="function" id="struct_virtual_c64_1_1_recorder_a_p_i_1a33929b8033e21dcb8f3f19cdea6f8c24" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool VirtualC64::RecorderAPI::isRecording</definition>
        <argsstring>() const</argsstring>
        <name>isRecording</name>
        <qualifiedname>VirtualC64::RecorderAPI::isRecording</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="466" column="14" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.cpp" bodystart="838" bodyend="841"/>
      </memberdef>
      <memberdef kind="function" id="struct_virtual_c64_1_1_recorder_a_p_i_1a159dd13ebb7845716a38b11b8e2f4afa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VirtualC64::RecorderAPI::startRecording</definition>
        <argsstring>(isize x1, isize y1, isize x2, isize y2, isize bitRate, isize aspectX, isize aspectY)</argsstring>
        <name>startRecording</name>
        <qualifiedname>VirtualC64::RecorderAPI::startRecording</qualifiedname>
        <param>
          <type>isize</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>isize</type>
          <declname>y1</declname>
        </param>
        <param>
          <type>isize</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>isize</type>
          <declname>y2</declname>
        </param>
        <param>
          <type>isize</type>
          <declname>bitRate</declname>
        </param>
        <param>
          <type>isize</type>
          <declname>aspectX</declname>
        </param>
        <param>
          <type>isize</type>
          <declname>aspectY</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="467" column="14" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.cpp" bodystart="844" bodyend="849"/>
      </memberdef>
      <memberdef kind="function" id="struct_virtual_c64_1_1_recorder_a_p_i_1ac8f08ca052ab61af3c86046e54aea149" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VirtualC64::RecorderAPI::stopRecording</definition>
        <argsstring>()</argsstring>
        <name>stopRecording</name>
        <qualifiedname>VirtualC64::RecorderAPI::stopRecording</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="470" column="14" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.cpp" bodystart="852" bodyend="855"/>
      </memberdef>
      <memberdef kind="function" id="struct_virtual_c64_1_1_recorder_a_p_i_1a0f7e8a0e28646d1255bd05a39fd4e538" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool VirtualC64::RecorderAPI::exportAs</definition>
        <argsstring>(const string &amp;path)</argsstring>
        <name>exportAs</name>
        <qualifiedname>VirtualC64::RecorderAPI::exportAs</qualifiedname>
        <param>
          <type>const string &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="471" column="14" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.cpp" bodystart="858" bodyend="861"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="455" column="5" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" bodystart="455" bodyend="473"/>
    <listofallmembers>
      <member refid="classvc64_1_1_a_p_i_1ac69be018cb6509eaa5a618c276c30fe1" prot="public" virt="non-virtual"><scope>VirtualC64::RecorderAPI</scope><name>API</name></member>
      <member refid="struct_virtual_c64_1_1_recorder_a_p_i_1ac4838c7804da14bb0769c4b514141fd2" prot="public" virt="non-virtual"><scope>VirtualC64::RecorderAPI</scope><name>available</name></member>
      <member refid="classvc64_1_1_references_1a3fbc169a9900f006d1ad6170b0bd0639" prot="protected" virt="non-virtual"><scope>VirtualC64::RecorderAPI</scope><name>c64</name></member>
      <member refid="classvc64_1_1_references_1afa87c57a43c5b7feb3b8780a4ac1008b" prot="protected" virt="non-virtual"><scope>VirtualC64::RecorderAPI</scope><name>cia1</name></member>
      <member refid="classvc64_1_1_references_1a6c3a729faae4d28880a897789e3ba081" prot="protected" virt="non-virtual"><scope>VirtualC64::RecorderAPI</scope><name>cia2</name></member>
      <member refid="classvc64_1_1_references_1a6d4dd5f97953b9c588bd29396dc7e879" prot="protected" virt="non-virtual"><scope>VirtualC64::RecorderAPI</scope><name>cpu</name></member>
      <member refid="classvc64_1_1_references_1a7fd1bd6cae9304cdbaa7e388c80149da" prot="protected" virt="non-virtual"><scope>VirtualC64::RecorderAPI</scope><name>datasette</name></member>
      <member refid="classvc64_1_1_references_1aa10ebdbd843f4d01d5f3d30592414abb" prot="protected" virt="non-virtual"><scope>VirtualC64::RecorderAPI</scope><name>drive</name></member>
      <member refid="classvc64_1_1_references_1a9fb58675ffdd6371f702e67e933c440c" prot="protected" virt="non-virtual"><scope>VirtualC64::RecorderAPI</scope><name>drive8</name></member>
      <member refid="classvc64_1_1_references_1ad4f53254b1db026d281f98e14a1065ef" prot="protected" virt="non-virtual"><scope>VirtualC64::RecorderAPI</scope><name>drive9</name></member>
      <member refid="classvc64_1_1_a_p_i_1a82d6586bef7dac77b2ea35fe6728595f" prot="public" virt="non-virtual"><scope>VirtualC64::RecorderAPI</scope><name>emulator</name></member>
      <member refid="classvc64_1_1_references_1a96a558a1ee0efe17d9087b03edd68d9c" prot="protected" virt="non-virtual"><scope>VirtualC64::RecorderAPI</scope><name>expansionport</name></member>
      <member refid="struct_virtual_c64_1_1_recorder_a_p_i_1a0f7e8a0e28646d1255bd05a39fd4e538" prot="public" virt="non-virtual"><scope>VirtualC64::RecorderAPI</scope><name>exportAs</name></member>
      <member refid="struct_virtual_c64_1_1_recorder_a_p_i_1aa116e379e6c8c089796283fb9c2d05b0" prot="public" virt="non-virtual"><scope>VirtualC64::RecorderAPI</scope><name>getBitRate</name></member>
      <member refid="struct_virtual_c64_1_1_recorder_a_p_i_1a4be276a299aaa99cb6b9370461ace086" prot="public" virt="non-virtual"><scope>VirtualC64::RecorderAPI</scope><name>getDuration</name></member>
      <member refid="struct_virtual_c64_1_1_recorder_a_p_i_1ab949cb419c8d6e4a4f3307aceed0fc8e" prot="public" virt="non-virtual"><scope>VirtualC64::RecorderAPI</scope><name>getExecPath</name></member>
      <member refid="struct_virtual_c64_1_1_recorder_a_p_i_1a025a41d5ba9ae65016b8aee125d0992e" prot="public" virt="non-virtual"><scope>VirtualC64::RecorderAPI</scope><name>getFrameRate</name></member>
      <member refid="struct_virtual_c64_1_1_recorder_a_p_i_1a6e3a18a219aea3822c12a9bb945c8546" prot="public" virt="non-virtual"><scope>VirtualC64::RecorderAPI</scope><name>getSampleRate</name></member>
      <member refid="classvc64_1_1_references_1ae039cd601c96e99965c9e51a7a5d37a2" prot="protected" virt="non-virtual"><scope>VirtualC64::RecorderAPI</scope><name>host</name></member>
      <member refid="classvc64_1_1_references_1a56adc0ba90182bde337fb3510a262136" prot="protected" virt="non-virtual"><scope>VirtualC64::RecorderAPI</scope><name>iec</name></member>
      <member refid="struct_virtual_c64_1_1_recorder_a_p_i_1a33929b8033e21dcb8f3f19cdea6f8c24" prot="public" virt="non-virtual"><scope>VirtualC64::RecorderAPI</scope><name>isRecording</name></member>
      <member refid="classvc64_1_1_a_p_i_1a815d94d61d7a5ecf7f1dccf21de51ca3" prot="public" virt="non-virtual"><scope>VirtualC64::RecorderAPI</scope><name>isUserThread</name></member>
      <member refid="classvc64_1_1_references_1a2d7c7bdb02194750f58b4b464f9a4e27" prot="protected" virt="non-virtual"><scope>VirtualC64::RecorderAPI</scope><name>keyboard</name></member>
      <member refid="classvc64_1_1_references_1abcfca0e0c6484b0b5ef1c235113f4a57" prot="protected" virt="non-virtual"><scope>VirtualC64::RecorderAPI</scope><name>mem</name></member>
      <member refid="classvc64_1_1_references_1a107318ccbff5b11cb77026cd274974f3" prot="protected" virt="non-virtual"><scope>VirtualC64::RecorderAPI</scope><name>msgQueue</name></member>
      <member refid="classvc64_1_1_references_1ad7af8e9288a5ccdd69e1ebe3a017e3f6" prot="protected" virt="non-virtual"><scope>VirtualC64::RecorderAPI</scope><name>muxer</name></member>
      <member refid="classvc64_1_1_references_1a1c3c3487396e208b6495fcdc73936de2" prot="protected" virt="non-virtual"><scope>VirtualC64::RecorderAPI</scope><name>oscillator</name></member>
      <member refid="classvc64_1_1_references_1adfdca8ba1967e6d1de209ce8f6a40816" prot="protected" virt="non-virtual"><scope>VirtualC64::RecorderAPI</scope><name>parCable</name></member>
      <member refid="classvc64_1_1_references_1aab0477bdbf0257957007dc495e49ee0e" prot="protected" virt="non-virtual"><scope>VirtualC64::RecorderAPI</scope><name>port1</name></member>
      <member refid="classvc64_1_1_references_1a054a39fcb2357fc321e56ea4103860ee" prot="protected" virt="non-virtual"><scope>VirtualC64::RecorderAPI</scope><name>port2</name></member>
      <member refid="classvc64_1_1_references_1a3fa1751dc3d018d0813409f0495cdcab" prot="protected" virt="non-virtual"><scope>VirtualC64::RecorderAPI</scope><name>recorder</name></member>
      <member refid="classvc64_1_1_references_1a466a1bc4bfe90a7f29afb596df1c530d" prot="public" virt="non-virtual"><scope>VirtualC64::RecorderAPI</scope><name>References</name></member>
      <member refid="classvc64_1_1_references_1a0951b2824424d9fda808b88efd9b50e4" prot="protected" virt="non-virtual"><scope>VirtualC64::RecorderAPI</scope><name>regressionTester</name></member>
      <member refid="classvc64_1_1_a_p_i_1abf5b5cc4514382edc5e80528d956ab96" prot="public" virt="non-virtual"><scope>VirtualC64::RecorderAPI</scope><name>resume</name></member>
      <member refid="classvc64_1_1_references_1a1d81ee2f6b3a1daed8df1142c0e299e3" prot="protected" virt="non-virtual"><scope>VirtualC64::RecorderAPI</scope><name>retroShell</name></member>
      <member refid="struct_virtual_c64_1_1_recorder_a_p_i_1a5bca0ee395a9a9cbc2f31598bb3d56b7" prot="public" virt="non-virtual"><scope>VirtualC64::RecorderAPI</scope><name>setExecPath</name></member>
      <member refid="struct_virtual_c64_1_1_recorder_a_p_i_1a159dd13ebb7845716a38b11b8e2f4afa" prot="public" virt="non-virtual"><scope>VirtualC64::RecorderAPI</scope><name>startRecording</name></member>
      <member refid="struct_virtual_c64_1_1_recorder_a_p_i_1ac8f08ca052ab61af3c86046e54aea149" prot="public" virt="non-virtual"><scope>VirtualC64::RecorderAPI</scope><name>stopRecording</name></member>
      <member refid="classvc64_1_1_a_p_i_1aaf072770fe8db16f4eb6187afd5e56c1" prot="public" virt="non-virtual"><scope>VirtualC64::RecorderAPI</scope><name>suspend</name></member>
      <member refid="classvc64_1_1_suspendable_1a7f9f608d5b2b9b6e944176cde77b8f85" prot="public" virt="non-virtual"><scope>VirtualC64::RecorderAPI</scope><name>Suspendable</name></member>
      <member refid="classvc64_1_1_references_1a1f1e51f8cba9a1a920b7113f5105febd" prot="protected" virt="non-virtual"><scope>VirtualC64::RecorderAPI</scope><name>vic</name></member>
      <member refid="classvc64_1_1_suspendable_1a35809d3a4c20db1f096e8dc5c78c49b9" prot="public" virt="virtual"><scope>VirtualC64::RecorderAPI</scope><name>~Suspendable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
