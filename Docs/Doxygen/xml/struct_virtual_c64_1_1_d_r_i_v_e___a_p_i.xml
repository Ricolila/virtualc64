<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="struct_virtual_c64_1_1_d_r_i_v_e___a_p_i" kind="struct" language="C++" prot="public">
    <compoundname>VirtualC64::DRIVE_API</compoundname>
    <basecompoundref prot="public" virt="non-virtual">API</basecompoundref>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_virtual_c64_1_1_d_r_i_v_e___a_p_i_1a579ec8c48cd029b21c4dcad651b20671" prot="public" static="no" mutable="no">
        <type>Drive &amp;</type>
        <definition>Drive&amp; VirtualC64::DRIVE_API::drive</definition>
        <argsstring></argsstring>
        <name>drive</name>
        <qualifiedname>VirtualC64::DRIVE_API::drive</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="525" column="15" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" bodystart="525" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_virtual_c64_1_1_d_r_i_v_e___a_p_i_1a4257e40fb67afbdf10ec14dcf3568ea8" prot="public" static="no" mutable="no">
        <type><ref refid="struct_virtual_c64_1_1_d_i_s_k___a_p_i" kindref="compound">DISK_API</ref></type>
        <definition>DISK_API VirtualC64::DRIVE_API::disk</definition>
        <argsstring></argsstring>
        <name>disk</name>
        <qualifiedname>VirtualC64::DRIVE_API::disk</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="528" column="18" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" bodystart="528" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_virtual_c64_1_1_d_r_i_v_e___a_p_i_1a6d9a88827d261a00cf44e3385a3a10fa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>VirtualC64::DRIVE_API::DRIVE_API</definition>
        <argsstring>(Emulator &amp;emu, Drive &amp;drive)</argsstring>
        <name>DRIVE_API</name>
        <qualifiedname>VirtualC64::DRIVE_API::DRIVE_API</qualifiedname>
        <param>
          <type>Emulator &amp;</type>
          <declname>emu</declname>
        </param>
        <param>
          <type>Drive &amp;</type>
          <declname>drive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="526" column="9" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" bodystart="526" bodyend="526"/>
      </memberdef>
      <memberdef kind="function" id="struct_virtual_c64_1_1_d_r_i_v_e___a_p_i_1aae74af69485413c34d104508bea25869" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const DriveConfig &amp;</type>
        <definition>const DriveConfig &amp; VirtualC64::DRIVE_API::getConfig</definition>
        <argsstring>() const</argsstring>
        <name>getConfig</name>
        <qualifiedname>VirtualC64::DRIVE_API::getConfig</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="530" column="27"/>
      </memberdef>
      <memberdef kind="function" id="struct_virtual_c64_1_1_d_r_i_v_e___a_p_i_1af77831afa99fcbb9f03b0d3e2fdb1e7e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>DriveInfo</type>
        <definition>DriveInfo VirtualC64::DRIVE_API::getInfo</definition>
        <argsstring>() const</argsstring>
        <name>getInfo</name>
        <qualifiedname>VirtualC64::DRIVE_API::getInfo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="531" column="19"/>
      </memberdef>
      <memberdef kind="function" id="struct_virtual_c64_1_1_d_r_i_v_e___a_p_i_1a4a32cdca7a7547066b6b857ee47d2f0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VirtualC64::DRIVE_API::insertBlankDisk</definition>
        <argsstring>(DOSType fstype, PETName&lt; 16 &gt; name)</argsstring>
        <name>insertBlankDisk</name>
        <qualifiedname>VirtualC64::DRIVE_API::insertBlankDisk</qualifiedname>
        <param>
          <type>DOSType</type>
          <declname>fstype</declname>
        </param>
        <param>
          <type>PETName&lt; 16 &gt;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="533" column="14"/>
      </memberdef>
      <memberdef kind="function" id="struct_virtual_c64_1_1_d_r_i_v_e___a_p_i_1a3f82987dbefe3053c52d100d3eb6293e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VirtualC64::DRIVE_API::insertD64</definition>
        <argsstring>(const D64File &amp;d64, bool wp)</argsstring>
        <name>insertD64</name>
        <qualifiedname>VirtualC64::DRIVE_API::insertD64</qualifiedname>
        <param>
          <type>const D64File &amp;</type>
          <declname>d64</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>wp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="534" column="14"/>
      </memberdef>
      <memberdef kind="function" id="struct_virtual_c64_1_1_d_r_i_v_e___a_p_i_1a61a19e406d28af60d0efdce494b23053" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VirtualC64::DRIVE_API::insertG64</definition>
        <argsstring>(const G64File &amp;g64, bool wp)</argsstring>
        <name>insertG64</name>
        <qualifiedname>VirtualC64::DRIVE_API::insertG64</qualifiedname>
        <param>
          <type>const G64File &amp;</type>
          <declname>g64</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>wp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="535" column="14"/>
      </memberdef>
      <memberdef kind="function" id="struct_virtual_c64_1_1_d_r_i_v_e___a_p_i_1a2ee73e14afb3d8d4ed98b9d2afa2d176" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VirtualC64::DRIVE_API::insertCollection</definition>
        <argsstring>(AnyCollection &amp;archive, bool wp) throws</argsstring>
        <name>insertCollection</name>
        <qualifiedname>VirtualC64::DRIVE_API::insertCollection</qualifiedname>
        <param>
          <type>AnyCollection &amp;</type>
          <declname>archive</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>wp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="536" column="14"/>
      </memberdef>
      <memberdef kind="function" id="struct_virtual_c64_1_1_d_r_i_v_e___a_p_i_1af855174801282bfce09d49ec5524a6f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VirtualC64::DRIVE_API::insertFileSystem</definition>
        <argsstring>(const class FileSystem &amp;device, bool wp)</argsstring>
        <name>insertFileSystem</name>
        <qualifiedname>VirtualC64::DRIVE_API::insertFileSystem</qualifiedname>
        <param>
          <type>const class FileSystem &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>wp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="537" column="14"/>
      </memberdef>
      <memberdef kind="function" id="struct_virtual_c64_1_1_d_r_i_v_e___a_p_i_1a3a33de8ad334ec87d7436dfac066bf63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VirtualC64::DRIVE_API::ejectDisk</definition>
        <argsstring>()</argsstring>
        <name>ejectDisk</name>
        <qualifiedname>VirtualC64::DRIVE_API::ejectDisk</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="538" column="14"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>API</label>
      </node>
      <node id="1">
        <label>VirtualC64::DRIVE_API</label>
        <link refid="struct_virtual_c64_1_1_d_r_i_v_e___a_p_i"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>API</label>
      </node>
      <node id="3">
        <label>VirtualC64::DISK_API</label>
        <link refid="struct_virtual_c64_1_1_d_i_s_k___a_p_i"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>VirtualC64::DRIVE_API</label>
        <link refid="struct_virtual_c64_1_1_d_r_i_v_e___a_p_i"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>disk</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="523" column="5" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" bodystart="523" bodyend="540"/>
    <listofallmembers>
      <member refid="struct_virtual_c64_1_1_d_r_i_v_e___a_p_i_1a4257e40fb67afbdf10ec14dcf3568ea8" prot="public" virt="non-virtual"><scope>VirtualC64::DRIVE_API</scope><name>disk</name></member>
      <member refid="struct_virtual_c64_1_1_d_r_i_v_e___a_p_i_1a579ec8c48cd029b21c4dcad651b20671" prot="public" virt="non-virtual"><scope>VirtualC64::DRIVE_API</scope><name>drive</name></member>
      <member refid="struct_virtual_c64_1_1_d_r_i_v_e___a_p_i_1a6d9a88827d261a00cf44e3385a3a10fa" prot="public" virt="non-virtual"><scope>VirtualC64::DRIVE_API</scope><name>DRIVE_API</name></member>
      <member refid="struct_virtual_c64_1_1_d_r_i_v_e___a_p_i_1a3a33de8ad334ec87d7436dfac066bf63" prot="public" virt="non-virtual"><scope>VirtualC64::DRIVE_API</scope><name>ejectDisk</name></member>
      <member refid="struct_virtual_c64_1_1_d_r_i_v_e___a_p_i_1aae74af69485413c34d104508bea25869" prot="public" virt="non-virtual"><scope>VirtualC64::DRIVE_API</scope><name>getConfig</name></member>
      <member refid="struct_virtual_c64_1_1_d_r_i_v_e___a_p_i_1af77831afa99fcbb9f03b0d3e2fdb1e7e" prot="public" virt="non-virtual"><scope>VirtualC64::DRIVE_API</scope><name>getInfo</name></member>
      <member refid="struct_virtual_c64_1_1_d_r_i_v_e___a_p_i_1a4a32cdca7a7547066b6b857ee47d2f0a" prot="public" virt="non-virtual"><scope>VirtualC64::DRIVE_API</scope><name>insertBlankDisk</name></member>
      <member refid="struct_virtual_c64_1_1_d_r_i_v_e___a_p_i_1a2ee73e14afb3d8d4ed98b9d2afa2d176" prot="public" virt="non-virtual"><scope>VirtualC64::DRIVE_API</scope><name>insertCollection</name></member>
      <member refid="struct_virtual_c64_1_1_d_r_i_v_e___a_p_i_1a3f82987dbefe3053c52d100d3eb6293e" prot="public" virt="non-virtual"><scope>VirtualC64::DRIVE_API</scope><name>insertD64</name></member>
      <member refid="struct_virtual_c64_1_1_d_r_i_v_e___a_p_i_1af855174801282bfce09d49ec5524a6f0" prot="public" virt="non-virtual"><scope>VirtualC64::DRIVE_API</scope><name>insertFileSystem</name></member>
      <member refid="struct_virtual_c64_1_1_d_r_i_v_e___a_p_i_1a61a19e406d28af60d0efdce494b23053" prot="public" virt="non-virtual"><scope>VirtualC64::DRIVE_API</scope><name>insertG64</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
