<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="structutil_1_1_exception" kind="struct" language="C++" prot="public">
    <compoundname>util::Exception</compoundname>
    <basecompoundref prot="public" virt="non-virtual">std::exception</basecompoundref>
    <derivedcompoundref refid="structvc64_1_1_script_interruption" prot="public" virt="non-virtual">vc64::ScriptInterruption</derivedcompoundref>
    <derivedcompoundref refid="structvc64_1_1_v_c64_error" prot="public" virt="non-virtual">vc64::VC64Error</derivedcompoundref>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structutil_1_1_exception_1aff4a623d8cc9326d3773285bce425f64" prot="public" static="no" mutable="no">
        <type>i64</type>
        <definition>i64 util::Exception::data</definition>
        <argsstring></argsstring>
        <name>data</name>
        <qualifiedname>util::Exception::data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Exception.h" line="22" column="9" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Exception.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structutil_1_1_exception_1a38025a6fc6f4c9086b15a0bb7276ae45" prot="public" static="no" mutable="no">
        <type>string</type>
        <definition>string util::Exception::description</definition>
        <argsstring></argsstring>
        <name>description</name>
        <qualifiedname>util::Exception::description</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Exception.h" line="23" column="12" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Exception.h" bodystart="23" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structutil_1_1_exception_1a0039902d5d04f45d5d383fde3adc03d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>util::Exception::Exception</definition>
        <argsstring>(i64 d, const string &amp;s)</argsstring>
        <name>Exception</name>
        <qualifiedname>util::Exception::Exception</qualifiedname>
        <param>
          <type>i64</type>
          <declname>d</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Exception.h" line="25" column="5" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Exception.h" bodystart="25" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="structutil_1_1_exception_1afbba46ae2ed07241d3fe7fe972ff1128" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>util::Exception::Exception</definition>
        <argsstring>(i64 d)</argsstring>
        <name>Exception</name>
        <qualifiedname>util::Exception::Exception</qualifiedname>
        <param>
          <type>i64</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Exception.h" line="26" column="5" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Exception.h" bodystart="26" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="structutil_1_1_exception_1abb8a1505d43b240c3c784a3406b8a90b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>util::Exception::Exception</definition>
        <argsstring>(const string &amp;s)</argsstring>
        <name>Exception</name>
        <qualifiedname>util::Exception::Exception</qualifiedname>
        <param>
          <type>const string &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Exception.h" line="27" column="5" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Exception.h" bodystart="27" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="structutil_1_1_exception_1a5d076174114ca013ac3689bdb68a48e9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>util::Exception::Exception</definition>
        <argsstring>()</argsstring>
        <name>Exception</name>
        <qualifiedname>util::Exception::Exception</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Exception.h" line="28" column="5" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Exception.h" bodystart="28" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="structutil_1_1_exception_1ae8c4386f3c247792aebe42e6d69e5774" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * util::Exception::what</definition>
        <argsstring>() const override</argsstring>
        <name>what</name>
        <qualifiedname>util::Exception::what</qualifiedname>
        <exceptions> throw ()</exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Exception.h" line="30" column="16" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Exception.h" bodystart="30" bodyend="30"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Exception.h" line="20" column="1" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/Utilities/Exception.h" bodystart="20" bodyend="31"/>
    <listofallmembers>
      <member refid="structutil_1_1_exception_1aff4a623d8cc9326d3773285bce425f64" prot="public" virt="non-virtual"><scope>util::Exception</scope><name>data</name></member>
      <member refid="structutil_1_1_exception_1a38025a6fc6f4c9086b15a0bb7276ae45" prot="public" virt="non-virtual"><scope>util::Exception</scope><name>description</name></member>
      <member refid="structutil_1_1_exception_1a0039902d5d04f45d5d383fde3adc03d7" prot="public" virt="non-virtual"><scope>util::Exception</scope><name>Exception</name></member>
      <member refid="structutil_1_1_exception_1afbba46ae2ed07241d3fe7fe972ff1128" prot="public" virt="non-virtual"><scope>util::Exception</scope><name>Exception</name></member>
      <member refid="structutil_1_1_exception_1abb8a1505d43b240c3c784a3406b8a90b" prot="public" virt="non-virtual"><scope>util::Exception</scope><name>Exception</name></member>
      <member refid="structutil_1_1_exception_1a5d076174114ca013ac3689bdb68a48e9" prot="public" virt="non-virtual"><scope>util::Exception</scope><name>Exception</name></member>
      <member refid="structutil_1_1_exception_1ae8c4386f3c247792aebe42e6d69e5774" prot="public" virt="non-virtual"><scope>util::Exception</scope><name>what</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
