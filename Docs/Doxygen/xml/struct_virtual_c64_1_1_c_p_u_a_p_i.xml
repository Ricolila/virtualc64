<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="struct_virtual_c64_1_1_c_p_u_a_p_i" kind="struct" language="C++" prot="public">
    <compoundname>VirtualC64::CPUAPI</compoundname>
    <basecompoundref prot="public" virt="non-virtual">API</basecompoundref>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_virtual_c64_1_1_c_p_u_a_p_i_1a2b17f0d093665715c0a616744f91afac" prot="public" static="no" mutable="no">
        <type><ref refid="struct_virtual_c64_1_1_guard_a_p_i" kindref="compound">GuardAPI</ref></type>
        <definition>GuardAPI VirtualC64::CPUAPI::breakpoints</definition>
        <argsstring></argsstring>
        <name>breakpoints</name>
        <qualifiedname>VirtualC64::CPUAPI::breakpoints</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="260" column="18" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" bodystart="260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_virtual_c64_1_1_c_p_u_a_p_i_1ac41bba79bbbb0ba0253d52aa40db281b" prot="public" static="no" mutable="no">
        <type><ref refid="struct_virtual_c64_1_1_guard_a_p_i" kindref="compound">GuardAPI</ref></type>
        <definition>GuardAPI VirtualC64::CPUAPI::watchpoints</definition>
        <argsstring></argsstring>
        <name>watchpoints</name>
        <qualifiedname>VirtualC64::CPUAPI::watchpoints</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="261" column="18" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" bodystart="261" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_virtual_c64_1_1_c_p_u_a_p_i_1aad9c2976a24f8f526f4f932216540c6f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>VirtualC64::CPUAPI::CPUAPI</definition>
        <argsstring>(Emulator &amp;emu)</argsstring>
        <name>CPUAPI</name>
        <qualifiedname>VirtualC64::CPUAPI::CPUAPI</qualifiedname>
        <param>
          <type>Emulator &amp;</type>
          <declname>emu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="263" column="9" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" bodystart="263" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="struct_virtual_c64_1_1_c_p_u_a_p_i_1a76ddbd030c094d481e7c938ac5d0b851" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>CPUInfo</type>
        <definition>CPUInfo VirtualC64::CPUAPI::getInfo</definition>
        <argsstring>() const</argsstring>
        <name>getInfo</name>
        <qualifiedname>VirtualC64::CPUAPI::getInfo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="268" column="17"/>
      </memberdef>
      <memberdef kind="function" id="struct_virtual_c64_1_1_c_p_u_a_p_i_1adf601e07d055109e6246524b9eec486e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>i64</type>
        <definition>i64 VirtualC64::CPUAPI::clock</definition>
        <argsstring>() const</argsstring>
        <name>clock</name>
        <qualifiedname>VirtualC64::CPUAPI::clock</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="269" column="13"/>
      </memberdef>
      <memberdef kind="function" id="struct_virtual_c64_1_1_c_p_u_a_p_i_1ad2a546b30e7eb1abdd468ca62a98b72e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>u16</type>
        <definition>u16 VirtualC64::CPUAPI::getPC0</definition>
        <argsstring>() const</argsstring>
        <name>getPC0</name>
        <qualifiedname>VirtualC64::CPUAPI::getPC0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="270" column="13"/>
      </memberdef>
      <memberdef kind="function" id="struct_virtual_c64_1_1_c_p_u_a_p_i_1a09bec275e2e8cf8d6069e38fb05453a3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>isize</type>
        <definition>isize VirtualC64::CPUAPI::loggedInstructions</definition>
        <argsstring>() const</argsstring>
        <name>loggedInstructions</name>
        <qualifiedname>VirtualC64::CPUAPI::loggedInstructions</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="271" column="15"/>
      </memberdef>
      <memberdef kind="function" id="struct_virtual_c64_1_1_c_p_u_a_p_i_1af1fa51c21342bb219ca75c7ee6f6a2d4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>u16</type>
        <definition>u16 VirtualC64::CPUAPI::loggedPC0Rel</definition>
        <argsstring>(isize nr) const</argsstring>
        <name>loggedPC0Rel</name>
        <qualifiedname>VirtualC64::CPUAPI::loggedPC0Rel</qualifiedname>
        <param>
          <type>isize</type>
          <declname>nr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="272" column="13"/>
      </memberdef>
      <memberdef kind="function" id="struct_virtual_c64_1_1_c_p_u_a_p_i_1a2e4088189167ad17049fd145a56423e4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>u16</type>
        <definition>u16 VirtualC64::CPUAPI::loggedPC0Abs</definition>
        <argsstring>(isize nr) const</argsstring>
        <name>loggedPC0Abs</name>
        <qualifiedname>VirtualC64::CPUAPI::loggedPC0Abs</qualifiedname>
        <param>
          <type>isize</type>
          <declname>nr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="273" column="13"/>
      </memberdef>
      <memberdef kind="function" id="struct_virtual_c64_1_1_c_p_u_a_p_i_1aab70354f579c8ffc903e15ee97cccfc5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>RecordedInstruction</type>
        <definition>RecordedInstruction VirtualC64::CPUAPI::logEntryAbs</definition>
        <argsstring>(isize index) const</argsstring>
        <name>logEntryAbs</name>
        <qualifiedname>VirtualC64::CPUAPI::logEntryAbs</qualifiedname>
        <param>
          <type>isize</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="274" column="29"/>
      </memberdef>
      <memberdef kind="function" id="struct_virtual_c64_1_1_c_p_u_a_p_i_1a46fe787497cd91c70554e9fbeb283116" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VirtualC64::CPUAPI::clearLog</definition>
        <argsstring>()</argsstring>
        <name>clearLog</name>
        <qualifiedname>VirtualC64::CPUAPI::clearLog</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="275" column="14"/>
      </memberdef>
      <memberdef kind="function" id="struct_virtual_c64_1_1_c_p_u_a_p_i_1a191e1a9ba5606fabf15f5dd6844f961b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VirtualC64::CPUAPI::setNumberFormat</definition>
        <argsstring>(DasmNumberFormat instrFormat, DasmNumberFormat dataFormat)</argsstring>
        <name>setNumberFormat</name>
        <qualifiedname>VirtualC64::CPUAPI::setNumberFormat</qualifiedname>
        <param>
          <type>DasmNumberFormat</type>
          <declname>instrFormat</declname>
        </param>
        <param>
          <type>DasmNumberFormat</type>
          <declname>dataFormat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="276" column="14"/>
      </memberdef>
      <memberdef kind="function" id="struct_virtual_c64_1_1_c_p_u_a_p_i_1a43c1dbc3ba4c84bc67c33c509cb308a5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>isize</type>
        <definition>isize VirtualC64::CPUAPI::disassembleRecordedInstr</definition>
        <argsstring>(isize, char *) const</argsstring>
        <name>disassembleRecordedInstr</name>
        <qualifiedname>VirtualC64::CPUAPI::disassembleRecordedInstr</qualifiedname>
        <param>
          <type>isize</type>
        </param>
        <param>
          <type>char *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="277" column="15"/>
      </memberdef>
      <memberdef kind="function" id="struct_virtual_c64_1_1_c_p_u_a_p_i_1a2f7cd0938568b901a8ae9fadb5db98d6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>isize</type>
        <definition>isize VirtualC64::CPUAPI::disassembleRecordedBytes</definition>
        <argsstring>(isize, char *) const</argsstring>
        <name>disassembleRecordedBytes</name>
        <qualifiedname>VirtualC64::CPUAPI::disassembleRecordedBytes</qualifiedname>
        <param>
          <type>isize</type>
        </param>
        <param>
          <type>char *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="278" column="15"/>
      </memberdef>
      <memberdef kind="function" id="struct_virtual_c64_1_1_c_p_u_a_p_i_1a7ad58b2c760ada6a8d06094e0c8a3f81" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VirtualC64::CPUAPI::disassembleRecordedFlags</definition>
        <argsstring>(isize, char *) const</argsstring>
        <name>disassembleRecordedFlags</name>
        <qualifiedname>VirtualC64::CPUAPI::disassembleRecordedFlags</qualifiedname>
        <param>
          <type>isize</type>
        </param>
        <param>
          <type>char *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="279" column="14"/>
      </memberdef>
      <memberdef kind="function" id="struct_virtual_c64_1_1_c_p_u_a_p_i_1ad148a4539d6ead0e5e6edf863bfe34c9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VirtualC64::CPUAPI::disassembleRecordedPC</definition>
        <argsstring>(isize, char *) const</argsstring>
        <name>disassembleRecordedPC</name>
        <qualifiedname>VirtualC64::CPUAPI::disassembleRecordedPC</qualifiedname>
        <param>
          <type>isize</type>
        </param>
        <param>
          <type>char *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="280" column="14"/>
      </memberdef>
      <memberdef kind="function" id="struct_virtual_c64_1_1_c_p_u_a_p_i_1a507c3a76cc362b7fffea0bc9cf5e090e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>isize</type>
        <definition>isize VirtualC64::CPUAPI::disassemble</definition>
        <argsstring>(char *, u16 addr) const</argsstring>
        <name>disassemble</name>
        <qualifiedname>VirtualC64::CPUAPI::disassemble</qualifiedname>
        <param>
          <type>char *</type>
        </param>
        <param>
          <type>u16</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="281" column="15"/>
      </memberdef>
      <memberdef kind="function" id="struct_virtual_c64_1_1_c_p_u_a_p_i_1aa87897f3ca2c6d2954f07fa90c91fde1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>isize</type>
        <definition>isize VirtualC64::CPUAPI::getLengthOfInstructionAt</definition>
        <argsstring>(u16 addr) const</argsstring>
        <name>getLengthOfInstructionAt</name>
        <qualifiedname>VirtualC64::CPUAPI::getLengthOfInstructionAt</qualifiedname>
        <param>
          <type>u16</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="282" column="15"/>
      </memberdef>
      <memberdef kind="function" id="struct_virtual_c64_1_1_c_p_u_a_p_i_1a339e01ae676ad25efe39df19e89b380e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VirtualC64::CPUAPI::dumpBytes</definition>
        <argsstring>(char *, u16 addr, isize length) const</argsstring>
        <name>dumpBytes</name>
        <qualifiedname>VirtualC64::CPUAPI::dumpBytes</qualifiedname>
        <param>
          <type>char *</type>
        </param>
        <param>
          <type>u16</type>
          <declname>addr</declname>
        </param>
        <param>
          <type>isize</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="283" column="14"/>
      </memberdef>
      <memberdef kind="function" id="struct_virtual_c64_1_1_c_p_u_a_p_i_1ab3dba6904590763f5d3ced138c3757ae" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VirtualC64::CPUAPI::dumpWord</definition>
        <argsstring>(char *, u16 addr) const</argsstring>
        <name>dumpWord</name>
        <qualifiedname>VirtualC64::CPUAPI::dumpWord</qualifiedname>
        <param>
          <type>char *</type>
        </param>
        <param>
          <type>u16</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="284" column="14"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>API</label>
      </node>
      <node id="1">
        <label>VirtualC64::CPUAPI</label>
        <link refid="struct_virtual_c64_1_1_c_p_u_a_p_i"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>API</label>
      </node>
      <node id="1">
        <label>VirtualC64::CPUAPI</label>
        <link refid="struct_virtual_c64_1_1_c_p_u_a_p_i"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>breakpoints</edgelabel>
          <edgelabel>watchpoints</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>VirtualC64::GuardAPI</label>
        <link refid="struct_virtual_c64_1_1_guard_a_p_i"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" line="256" column="5" bodyfile="/Users/hoff/Retro/virtualc64/Emulator/VirtualC64.h" bodystart="256" bodyend="286"/>
    <listofallmembers>
      <member refid="struct_virtual_c64_1_1_c_p_u_a_p_i_1a2b17f0d093665715c0a616744f91afac" prot="public" virt="non-virtual"><scope>VirtualC64::CPUAPI</scope><name>breakpoints</name></member>
      <member refid="struct_virtual_c64_1_1_c_p_u_a_p_i_1a46fe787497cd91c70554e9fbeb283116" prot="public" virt="non-virtual"><scope>VirtualC64::CPUAPI</scope><name>clearLog</name></member>
      <member refid="struct_virtual_c64_1_1_c_p_u_a_p_i_1adf601e07d055109e6246524b9eec486e" prot="public" virt="non-virtual"><scope>VirtualC64::CPUAPI</scope><name>clock</name></member>
      <member refid="struct_virtual_c64_1_1_c_p_u_a_p_i_1aad9c2976a24f8f526f4f932216540c6f" prot="public" virt="non-virtual"><scope>VirtualC64::CPUAPI</scope><name>CPUAPI</name></member>
      <member refid="struct_virtual_c64_1_1_c_p_u_a_p_i_1a507c3a76cc362b7fffea0bc9cf5e090e" prot="public" virt="non-virtual"><scope>VirtualC64::CPUAPI</scope><name>disassemble</name></member>
      <member refid="struct_virtual_c64_1_1_c_p_u_a_p_i_1a2f7cd0938568b901a8ae9fadb5db98d6" prot="public" virt="non-virtual"><scope>VirtualC64::CPUAPI</scope><name>disassembleRecordedBytes</name></member>
      <member refid="struct_virtual_c64_1_1_c_p_u_a_p_i_1a7ad58b2c760ada6a8d06094e0c8a3f81" prot="public" virt="non-virtual"><scope>VirtualC64::CPUAPI</scope><name>disassembleRecordedFlags</name></member>
      <member refid="struct_virtual_c64_1_1_c_p_u_a_p_i_1a43c1dbc3ba4c84bc67c33c509cb308a5" prot="public" virt="non-virtual"><scope>VirtualC64::CPUAPI</scope><name>disassembleRecordedInstr</name></member>
      <member refid="struct_virtual_c64_1_1_c_p_u_a_p_i_1ad148a4539d6ead0e5e6edf863bfe34c9" prot="public" virt="non-virtual"><scope>VirtualC64::CPUAPI</scope><name>disassembleRecordedPC</name></member>
      <member refid="struct_virtual_c64_1_1_c_p_u_a_p_i_1a339e01ae676ad25efe39df19e89b380e" prot="public" virt="non-virtual"><scope>VirtualC64::CPUAPI</scope><name>dumpBytes</name></member>
      <member refid="struct_virtual_c64_1_1_c_p_u_a_p_i_1ab3dba6904590763f5d3ced138c3757ae" prot="public" virt="non-virtual"><scope>VirtualC64::CPUAPI</scope><name>dumpWord</name></member>
      <member refid="struct_virtual_c64_1_1_c_p_u_a_p_i_1a76ddbd030c094d481e7c938ac5d0b851" prot="public" virt="non-virtual"><scope>VirtualC64::CPUAPI</scope><name>getInfo</name></member>
      <member refid="struct_virtual_c64_1_1_c_p_u_a_p_i_1aa87897f3ca2c6d2954f07fa90c91fde1" prot="public" virt="non-virtual"><scope>VirtualC64::CPUAPI</scope><name>getLengthOfInstructionAt</name></member>
      <member refid="struct_virtual_c64_1_1_c_p_u_a_p_i_1ad2a546b30e7eb1abdd468ca62a98b72e" prot="public" virt="non-virtual"><scope>VirtualC64::CPUAPI</scope><name>getPC0</name></member>
      <member refid="struct_virtual_c64_1_1_c_p_u_a_p_i_1aab70354f579c8ffc903e15ee97cccfc5" prot="public" virt="non-virtual"><scope>VirtualC64::CPUAPI</scope><name>logEntryAbs</name></member>
      <member refid="struct_virtual_c64_1_1_c_p_u_a_p_i_1a09bec275e2e8cf8d6069e38fb05453a3" prot="public" virt="non-virtual"><scope>VirtualC64::CPUAPI</scope><name>loggedInstructions</name></member>
      <member refid="struct_virtual_c64_1_1_c_p_u_a_p_i_1a2e4088189167ad17049fd145a56423e4" prot="public" virt="non-virtual"><scope>VirtualC64::CPUAPI</scope><name>loggedPC0Abs</name></member>
      <member refid="struct_virtual_c64_1_1_c_p_u_a_p_i_1af1fa51c21342bb219ca75c7ee6f6a2d4" prot="public" virt="non-virtual"><scope>VirtualC64::CPUAPI</scope><name>loggedPC0Rel</name></member>
      <member refid="struct_virtual_c64_1_1_c_p_u_a_p_i_1a191e1a9ba5606fabf15f5dd6844f961b" prot="public" virt="non-virtual"><scope>VirtualC64::CPUAPI</scope><name>setNumberFormat</name></member>
      <member refid="struct_virtual_c64_1_1_c_p_u_a_p_i_1ac41bba79bbbb0ba0253d52aa40db281b" prot="public" virt="non-virtual"><scope>VirtualC64::CPUAPI</scope><name>watchpoints</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
